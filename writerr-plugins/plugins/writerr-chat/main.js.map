{
  "version": 3,
  "sources": ["../../shared/utils/index.ts", "src/utils/tooltips.ts", "src/main.ts", "src/settings.ts", "src/chat-view.ts", "src/components/BaseComponent.ts", "src/components/MessageBubble.ts", "src/utils/icons.ts", "src/components/menus/WriterMenu.ts", "src/components/ChatHeader.ts", "src/components/ContextArea.ts", "src/components/ChatInput.ts", "src/components/ChatToolbar.ts", "src/components/MessageList.ts", "src/components/SessionManager.ts"],
  "sourcesContent": ["// Shared utilities for all Writerr Obsidian plugins\n\nexport function generateId(): string {\n  return Math.random().toString(36).substr(2, 9);\n}\n\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: NodeJS.Timeout;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n}\n\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): (...args: Parameters<T>) => void {\n  let inThrottle: boolean;\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n}\n\nexport function formatTimestamp(timestamp: number): string {\n  return new Date(timestamp).toLocaleString();\n}\n\nexport function getWordCount(text: string): number {\n  return text.trim().split(/\\s+/).filter(word => word.length > 0).length;\n}\n\nexport function getCharacterCount(text: string): number {\n  return text.length;\n}\n\nexport function sanitizeFilename(filename: string): string {\n  return filename.replace(/[^a-z0-9]/gi, '_').toLowerCase();\n}\n\nexport function exportToJSON(data: any): string {\n  return JSON.stringify(data, null, 2);\n}\n\nexport function parseMarkdown(content: string): { frontmatter: Record<string, any>; body: string } {\n  const frontmatterRegex = /^---\\s*\\n(.*?)\\n---\\s*\\n(.*)$/s;\n  const match = content.match(frontmatterRegex);\n  \n  if (match) {\n    try {\n      const frontmatter = JSON.parse(match[1]);\n      return { frontmatter, body: match[2] };\n    } catch {\n      // If JSON parsing fails, treat as YAML or plain text\n      return { frontmatter: {}, body: content };\n    }\n  }\n  \n  return { frontmatter: {}, body: content };\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}", "/**\n * Centralized tooltip system for consistent appearance and smart positioning\n */\n\nexport interface TooltipOptions {\n  text: string;\n  delay?: number;\n  offset?: number;\n  className?: string;\n}\n\nexport class TooltipManager {\n  private static instance: TooltipManager;\n  private activeTooltip: HTMLElement | null = null;\n  private showTimeout: number | null = null;\n  private hideTimeout: number | null = null;\n\n  static getInstance(): TooltipManager {\n    if (!TooltipManager.instance) {\n      TooltipManager.instance = new TooltipManager();\n    }\n    return TooltipManager.instance;\n  }\n\n  private constructor() {\n    this.addGlobalStyles();\n  }\n\n  private addGlobalStyles(): void {\n    const existingStyle = document.getElementById('writerr-tooltip-styles');\n    if (existingStyle) return;\n\n    const styles = `\n/* Writerr Unified Tooltip Styles */\n.writerr-tooltip {\n  position: fixed !important;\n  z-index: 9999 !important;\n  background: rgba(0, 0, 0, 0.9) !important;\n  color: white !important;\n  padding: 6px 10px !important;\n  border-radius: 6px !important;\n  font-size: 12px !important;\n  font-weight: 500 !important;\n  white-space: nowrap !important;\n  pointer-events: none !important;\n  opacity: 0 !important;\n  transform: translateY(4px) !important;\n  transition: all 0.15s ease !important;\n  backdrop-filter: blur(4px) !important;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3) !important;\n  font-family: var(--font-interface) !important;\n  line-height: 1.2 !important;\n}\n\n.writerr-tooltip.visible {\n  opacity: 1 !important;\n  transform: translateY(0) !important;\n}\n\n.writerr-tooltip::before {\n  content: '' !important;\n  position: absolute !important;\n  width: 0 !important;\n  height: 0 !important;\n  border-style: solid !important;\n}\n\n.writerr-tooltip.position-top::before {\n  top: 100% !important;\n  left: 50% !important;\n  transform: translateX(-50%) !important;\n  border-width: 4px 4px 0 4px !important;\n  border-color: rgba(0, 0, 0, 0.9) transparent transparent transparent !important;\n}\n\n.writerr-tooltip.position-bottom::before {\n  bottom: 100% !important;\n  left: 50% !important;\n  transform: translateX(-50%) !important;\n  border-width: 0 4px 4px 4px !important;\n  border-color: transparent transparent rgba(0, 0, 0, 0.9) transparent !important;\n}\n\n.writerr-tooltip.position-left::before {\n  left: 100% !important;\n  top: 50% !important;\n  transform: translateY(-50%) !important;\n  border-width: 4px 0 4px 4px !important;\n  border-color: transparent transparent transparent rgba(0, 0, 0, 0.9) !important;\n}\n\n.writerr-tooltip.position-right::before {\n  right: 100% !important;\n  top: 50% !important;\n  transform: translateY(-50%) !important;\n  border-width: 4px 4px 4px 0 !important;\n  border-color: transparent rgba(0, 0, 0, 0.9) transparent transparent !important;\n}\n`;\n\n    const styleEl = document.createElement('style');\n    styleEl.id = 'writerr-tooltip-styles';\n    styleEl.textContent = styles;\n    document.head.appendChild(styleEl);\n  }\n\n  public addTooltip(element: HTMLElement, options: TooltipOptions): void {\n    const { text, delay = 700, offset = 8 } = options;\n\n    element.addEventListener('mouseenter', (e) => {\n      this.clearTimeouts();\n      this.showTimeout = window.setTimeout(() => {\n        this.showTooltip(element, text, offset);\n      }, delay);\n    });\n\n    element.addEventListener('mouseleave', () => {\n      this.clearTimeouts();\n      this.hideTimeout = window.setTimeout(() => {\n        this.hideTooltip();\n      }, 100);\n    });\n\n    // Ensure tooltip hides when element is removed\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === 'childList') {\n          mutation.removedNodes.forEach((node) => {\n            if (node === element || (node.nodeType === Node.ELEMENT_NODE && (node as Element).contains(element))) {\n              this.hideTooltip();\n              observer.disconnect();\n            }\n          });\n        }\n      });\n    });\n    observer.observe(document.body, { childList: true, subtree: true });\n  }\n\n  private showTooltip(element: HTMLElement, text: string, offset: number): void {\n    this.hideTooltip();\n\n    const tooltip = document.createElement('div');\n    tooltip.className = 'writerr-tooltip';\n    tooltip.textContent = text;\n    document.body.appendChild(tooltip);\n    this.activeTooltip = tooltip;\n\n    // Position tooltip\n    const elementRect = element.getBoundingClientRect();\n    const tooltipRect = tooltip.getBoundingClientRect();\n    const viewport = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n\n    let position: 'top' | 'bottom' | 'left' | 'right' = 'top';\n    let left = 0;\n    let top = 0;\n\n    // Ultra-aggressive top preference - almost always prefer top\n    const spaceAbove = elementRect.top;\n    const spaceBelow = viewport.height - elementRect.bottom;\n    const spaceLeft = elementRect.left;\n    const spaceRight = viewport.width - elementRect.right;\n\n    // Minimum space needed (very lenient for top positioning)\n    const minSpace = tooltipRect.height + offset + 4;\n    const topMinSpace = tooltipRect.height + offset - 10; // Even more lenient for top\n\n    // ALWAYS prefer top unless there's absolutely no room\n    if (spaceAbove >= topMinSpace) {\n      position = 'top';\n      top = elementRect.top - tooltipRect.height - offset;\n      left = elementRect.left + (elementRect.width / 2) - (tooltipRect.width / 2);\n    } else if (spaceBelow >= minSpace) {\n      position = 'bottom';\n      top = elementRect.bottom + offset;\n      left = elementRect.left + (elementRect.width / 2) - (tooltipRect.width / 2);\n    } else if (spaceLeft >= tooltipRect.width + offset) {\n      position = 'left';\n      top = elementRect.top + (elementRect.height / 2) - (tooltipRect.height / 2);\n      left = elementRect.left - tooltipRect.width - offset;\n    } else if (spaceRight >= tooltipRect.width + offset) {\n      position = 'right';\n      top = elementRect.top + (elementRect.height / 2) - (tooltipRect.height / 2);\n      left = elementRect.right + offset;\n    } else {\n      // Final fallback: force top even if it goes off-screen\n      position = 'top';\n      top = Math.max(4, elementRect.top - tooltipRect.height - offset);\n      left = elementRect.left + (elementRect.width / 2) - (tooltipRect.width / 2);\n    }\n\n    // Ensure tooltip stays within viewport bounds horizontally\n    left = Math.max(8, Math.min(left, viewport.width - tooltipRect.width - 8));\n    \n    // For top positioning, allow it to go slightly off-screen at the top if needed\n    if (position === 'top') {\n      top = Math.max(4, top);\n    } else {\n      top = Math.max(8, Math.min(top, viewport.height - tooltipRect.height - 8));\n    }\n\n    tooltip.style.left = `${left}px`;\n    tooltip.style.top = `${top}px`;\n    tooltip.classList.add(`position-${position}`);\n\n    // Trigger animation\n    requestAnimationFrame(() => {\n      tooltip.classList.add('visible');\n    });\n  }\n\n  private hideTooltip(): void {\n    if (this.activeTooltip) {\n      this.activeTooltip.classList.remove('visible');\n      setTimeout(() => {\n        if (this.activeTooltip) {\n          this.activeTooltip.remove();\n          this.activeTooltip = null;\n        }\n      }, 150);\n    }\n  }\n\n  private clearTimeouts(): void {\n    if (this.showTimeout) {\n      clearTimeout(this.showTimeout);\n      this.showTimeout = null;\n    }\n    if (this.hideTimeout) {\n      clearTimeout(this.hideTimeout);\n      this.hideTimeout = null;\n    }\n  }\n}\n\n// Convenience function for easy use\nexport function addTooltip(element: HTMLElement, text: string, delay = 700): void {\n  const manager = TooltipManager.getInstance();\n  manager.addTooltip(element, { text, delay });\n}\n\n// Enhanced BaseComponent with tooltip support\nexport function addTooltipToComponent(element: HTMLElement, text: string): void {\n  // Remove any existing tooltip attributes to avoid conflicts\n  element.removeAttribute('title');\n  element.removeAttribute('data-tooltip');\n  \n  addTooltip(element, text);\n}", "import { Plugin, WorkspaceLeaf, TFile, Notice, Modal } from 'obsidian';\nimport { WriterrlChatSettingsTab } from './settings';\nimport { ChatView, VIEW_TYPE_CHAT } from './chat-view';\nimport { ChatSession, ChatMessage, AIProvider, WriterrlGlobalAPI, IntakePayload } from '@shared/types';\nimport { generateId } from '@shared/utils';\n\n// Enhanced types for Editorial Engine integration\ninterface ParsedMessage {\n  originalContent: string;\n  intent: 'chat' | 'edit' | 'improve' | 'analyze';\n  mode: string;\n  selection?: string;\n  hasEditingRequest: boolean;\n}\n\ninterface WriterrlChatSettings {\n  defaultProvider: string;\n  providers: AIProvider[];\n  chatPosition: 'right' | 'left' | 'floating';\n  autoSaveChats: boolean;\n  contextLines: number;\n  maxTokens: number;\n  temperature: number;\n  enableMarkdown: boolean;\n  showTimestamps: boolean;\n  theme: 'default' | 'compact' | 'minimal';\n  selectedModel: string;\n  selectedPrompt: string;\n}\n\nconst DEFAULT_SETTINGS: WriterrlChatSettings = {\n  defaultProvider: 'openai',\n  providers: [\n    {\n      id: 'openai',\n      name: 'OpenAI',\n      model: 'gpt-4',\n      baseUrl: 'https://api.openai.com/v1',\n      apiKey: ''\n    }\n  ],\n  chatPosition: 'right',\n  autoSaveChats: true,\n  contextLines: 10,\n  maxTokens: 2000,\n  temperature: 0.7,\n  enableMarkdown: true,\n  showTimestamps: true,\n  theme: 'default',\n  selectedModel: '',\n  selectedPrompt: ''\n};;\n\n// Build verification system\nconst BUILD_TIMESTAMP = Date.now();\nconst BUILD_VERSION = \"v2.0.1-fix-ai-providers\";\nconsole.log(`\uD83D\uDD27 Writerr Chat Build: ${BUILD_VERSION} (${new Date(BUILD_TIMESTAMP).toISOString()})`);\n\nexport default class WriterrlChatPlugin extends Plugin {\n  settings: WriterrlChatSettings;\n  currentSession: ChatSession | null = null;\n  chatSessions: Map<string, ChatSession> = new Map();\n\n  async onload() {\n    console.log(`\uD83D\uDE80 LOADING Writerr Chat ${BUILD_VERSION} - Build: ${new Date(BUILD_TIMESTAMP).toISOString()}`);\n    \n    await this.loadSettings();\n\n    // Force load CSS styles\n    this.loadCustomStyles();\n\n    // Initialize global API\n    this.initializeGlobalAPI();\n\n    // Register view\n    this.registerView(VIEW_TYPE_CHAT, (leaf) => new ChatView(leaf, this));\n\n    // Add commands\n    this.addCommands();\n\n    // Add ribbon icon - updated to messageSquare for consistency\n    this.addRibbonIcon('message-square', 'Open Writerr Chat', () => {\n      this.openChat();\n    });\n\n    // Add settings tab\n    this.addSettingTab(new WriterrlChatSettingsTab(this.app, this));\n\n    // Load chat sessions\n    await this.loadChatSessions();\n\n    // Listen for Editorial Engine availability\n    this.listenForEditorialEngine();\n\n    console.log(`\u2705 LOADED Writerr Chat ${BUILD_VERSION} successfully`);\n  }\n\n  private loadCustomStyles(): void {\n    const styles = `\n/* Nuclear CSS - Override EVERYTHING */\n.writerr-send-button,\n.writerr-toolbar-button,\n.writerr-context-action,\n.context-add-button,\n.writerr-message-actions button,\n.chat-control-button {\n  background: none !important;\n  border: none !important;\n  box-shadow: none !important;\n  outline: none !important;\n  padding: 0 !important;\n  margin: 0 !important;\n  cursor: pointer !important;\n  color: var(--text-faint) !important;\n  transition: all 0.2s ease !important;\n}\n\n/* Send Button - Lifted off the edges */\n.writerr-send-button {\n  position: absolute !important;\n  right: 16px !important;\n  bottom: 16px !important;\n  padding: 8px !important;\n  border-radius: var(--radius-s) !important;\n}\n\n.writerr-send-button:hover:not(:disabled) {\n  color: var(--interactive-accent) !important;\n  background: var(--background-modifier-hover) !important;\n}\n\n.writerr-send-button:disabled {\n  color: var(--text-faint) !important;\n  cursor: not-allowed !important;\n}\n\n.writerr-send-icon {\n  width: 16px !important;\n  height: 16px !important;\n  stroke-width: 2 !important;\n}\n\n/* TOOLBAR CONTAINER - FORCE FLEX LAYOUT */\n.chat-toolbar-container {\n  border-top: none !important;\n  border: none !important;\n  display: flex !important;\n  justify-content: space-between !important;\n  align-items: center !important;\n  padding: 8px 0 8px 12px !important;\n  background: var(--background-primary) !important;\n  font-size: 12px !important;\n  color: var(--text-faint) !important;\n  min-height: 44px !important;\n  overflow: hidden !important;\n}\n\n/* Bottom Toolbar Left - Tools Section - Subtle Gray */\n.writerr-toolbar-left {\n  display: flex !important;\n  align-items: center !important;\n  gap: 4px !important;\n  flex-shrink: 0 !important;\n  margin-left: 0 !important;\n  padding-left: 0 !important;\n}\n\n/* Toolbar Right - Dropdowns and Counter - Subtle Gray */\n.toolbar-right {\n  display: flex !important;\n  align-items: center !important;\n  gap: 4px !important;\n  flex: 1 !important;\n  justify-content: flex-end !important;\n  min-width: 0 !important;\n  overflow: hidden !important;\n  margin-right: 8px !important;\n}\n\n.writerr-toolbar-button {\n  padding: 6px !important;\n  border-radius: var(--radius-s) !important;\n  color: var(--text-faint) !important;\n}\n\n.writerr-toolbar-button:hover {\n  color: var(--text-normal) !important;\n  background: var(--background-modifier-hover) !important;\n}\n\n.writerr-toolbar-icon {\n  width: 16px !important;\n  height: 16px !important;\n  stroke-width: 2 !important;\n}\n\n/* Chat Input Container - NO BORDERS */\n.chat-input-container {\n  border-top: none !important;\n  border-bottom: none !important;\n  border: none !important;\n}\n\n.chat-message-input {\n  border: 1px solid var(--background-modifier-border) !important;\n  padding-right: 60px !important;\n}\n\n/* Context Area - Subtle styling */\n.context-header {\n  border-top: 1px solid var(--background-modifier-border) !important;\n  padding-top: 8px !important;\n  color: var(--text-faint) !important;\n}\n\n.context-collapse-icon {\n  color: var(--text-faint) !important;\n}\n\n.context-header:hover .context-collapse-icon {\n  color: var(--text-muted) !important;\n}\n\n/* Context label subtle */\n.context-header span {\n  color: var(--text-faint) !important;\n}\n\n.context-header:hover span {\n  color: var(--text-muted) !important;\n}\n\n/* Header - NO CARET */\n.writerr-chat-header-left {\n  display: flex !important;\n  align-items: center !important;\n  gap: 12px !important;\n}\n\n.writerr-mode-select-wrapper {\n  display: flex !important;\n  align-items: center !important;\n  cursor: pointer !important;\n}\n\n.writerr-mode-select {\n  background: none !important;\n  border: none !important;\n  padding: 0 !important;\n  margin: 0 !important;\n  font-size: 18px !important;\n  font-weight: 500 !important;\n  color: var(--text-normal) !important;\n  cursor: pointer !important;\n  outline: none !important;\n  box-shadow: none !important;\n  appearance: none !important;\n  -webkit-appearance: none !important;\n  -moz-appearance: none !important;\n}\n\n/* REMOVE THE CARET COMPLETELY */\n.writerr-mode-caret {\n  display: none !important;\n}\n\n/* Token Counter - Subtle */\n.writerr-token-count {\n  font-size: var(--font-ui-smaller) !important;\n  color: var(--text-faint) !important;\n  font-variant-numeric: tabular-nums !important;\n  font-family: var(--font-monospace) !important;\n  font-feature-settings: \"tnum\" !important;\n  margin-right: 6px !important;\n}\n\n\n/* Dropdown hover styles */\nselect:hover {\n  color: var(--text-normal) !important;\n}\n\n.toolbar-right select:hover + div {\n  color: var(--text-normal) !important;\n}\n\n/* Context Add Button - Subtle Gray */\n.context-add-button {\n  padding: 4px !important;\n  border-radius: var(--radius-s) !important;\n  color: var(--text-faint) !important;\n}\n\n.context-add-button:hover {\n  color: var(--text-normal) !important;\n  background: var(--background-modifier-hover) !important;\n}\n\n/* Context Action Button - Subtle */\n.writerr-context-action {\n  padding: 4px !important;\n  position: absolute !important;\n  top: 8px !important;\n  right: 16px !important;\n  z-index: 10 !important;\n  border-radius: var(--radius-s) !important;\n  color: var(--text-faint) !important;\n}\n\n.writerr-context-action:hover {\n  color: var(--text-normal) !important;\n  background: var(--background-modifier-hover) !important;\n}\n\n.writerr-context-action:disabled {\n  opacity: 0.3 !important;\n  cursor: not-allowed !important;\n  pointer-events: none !important;\n}\n\n.writerr-context-action-icon {\n  width: 18px !important;\n  height: 18px !important;\n  stroke-width: 2 !important;\n}\n\n/* Message Icons */\n.writerr-message-icon {\n  display: flex !important;\n  align-items: center !important;\n  justify-content: center !important;\n  width: 32px !important;\n  height: 32px !important;\n  flex-shrink: 0 !important;\n  color: var(--text-muted) !important;\n}\n\n.writerr-message-avatar {\n  width: 20px !important;\n  height: 20px !important;\n  stroke-width: 2 !important;\n}\n\n/* Message Actions */\n.writerr-message-actions {\n  display: flex !important;\n  gap: 4px !important;\n  margin-top: 6px !important;\n  opacity: 1 !important;\n  pointer-events: auto !important;\n}\n\n.writerr-message-actions button {\n  padding: 4px !important;\n  border-radius: var(--radius-s) !important;\n}\n\n.writerr-message-actions button:hover {\n  color: var(--text-normal) !important;\n  background: var(--background-modifier-hover) !important;\n}\n\n.writerr-action-icon {\n  width: 14px !important;\n  height: 14px !important;\n  stroke-width: 2 !important;\n}\n\n/* Chat Control Buttons - Header Icons - KEEP DARK */\n.chat-control-button {\n  padding: 8px !important;\n  border-radius: var(--radius-s) !important;\n  color: var(--text-normal) !important; /* Override subtle gray - keep header icons dark */\n}\n\n.chat-control-button:hover {\n  color: var(--text-normal) !important;\n  background: var(--background-modifier-hover) !important;\n}\n\n/* Hide settings button */\n.chat-control-button:last-child {\n  display: none !important;\n}\n\n/* Clean menu styling - no debug colors */\n`;\n\n    // Force remove any existing styles and recreate with timestamp\n    const timestamp = Date.now();\n    const existing = document.getElementById('writerr-chat-styles');\n    if (existing) existing.remove();\n\n    // Force reflow\n    document.body.offsetHeight;\n\n    const styleEl = document.createElement('style');\n    styleEl.id = 'writerr-chat-styles';\n    styleEl.setAttribute('data-timestamp', timestamp.toString());\n    document.head.appendChild(styleEl);\n    styleEl.textContent = styles;\n    \n    console.log(`Writerr Chat: DEBUG CSS applied at ${timestamp} - looking for menu selectors`);\n  }\n\n  onunload() {\n    this.cleanupGlobalAPI();\n    console.log('Writerr Chat plugin unloaded');\n  }\n\n  async loadSettings() {\n    this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());\n  }\n\n  async saveSettings() {\n    await this.saveData(this.settings);\n    // Note: Settings now used directly with AI Providers plugin\n  }\n\n  private initializeGlobalAPI() {\n    if (!window.WriterrlAPI) {\n      window.WriterrlAPI = {} as WriterrlGlobalAPI;\n    }\n\n    window.WriterrlAPI.chat = {\n      openChat: () => this.openChat(),\n      sendMessage: (message: string, context?: string) => this.sendMessage(message, context),\n      getCurrentSession: () => this.currentSession\n    };\n  }\n\n  private cleanupGlobalAPI() {\n    if (window.WriterrlAPI && window.WriterrlAPI.chat) {\n      delete window.WriterrlAPI.chat;\n    }\n  }\n\n  private addCommands() {\n    this.addCommand({\n      id: 'open-chat',\n      name: 'Open chat',\n      callback: () => this.openChat()\n    });\n\n    this.addCommand({\n      id: 'new-chat-session',\n      name: 'New chat session',\n      callback: () => this.newChatSession()\n    });\n\n    this.addCommand({\n      id: 'chat-with-selection',\n      name: 'Chat with selected text',\n      editorCallback: (editor) => {\n        const selection = editor.getSelection();\n        if (selection) {\n          this.chatWithSelection(selection);\n        } else {\n          new Notice('No text selected');\n        }\n      }\n    });\n\n    this.addCommand({\n      id: 'quick-chat',\n      name: 'Quick chat',\n      callback: () => this.quickChat()\n    });\n  }\n\n  async openChat() {\n    const existingLeaf = this.app.workspace.getLeavesOfType(VIEW_TYPE_CHAT)[0];\n    \n    if (existingLeaf) {\n      this.app.workspace.revealLeaf(existingLeaf);\n      return;\n    }\n\n    try {\n      // Open in right sidebar as per design reference\n      const leaf = this.app.workspace.getRightLeaf(false);\n      \n      if (leaf) {\n        await leaf.setViewState({\n          type: VIEW_TYPE_CHAT,\n          active: true\n        });\n        this.app.workspace.revealLeaf(leaf);\n        return;\n      }\n\n      // Fallback: Create new leaf in right sidebar\n      const rightLeaf = this.app.workspace.getLeaf('split', 'right');\n      if (rightLeaf) {\n        await rightLeaf.setViewState({\n          type: VIEW_TYPE_CHAT,\n          active: true\n        });\n        this.app.workspace.revealLeaf(rightLeaf);\n        return;\n      }\n\n      console.error('Failed to create chat view in sidebar');\n\n    } catch (error) {\n      console.error('Error opening chat view:', error);\n    }\n  }\n\n  newChatSession() {\n    this.currentSession = {\n      id: generateId(),\n      title: `Chat ${new Date().toLocaleDateString()}`,\n      messages: [],\n      createdAt: Date.now(),\n      updatedAt: Date.now()\n    };\n\n    this.chatSessions.set(this.currentSession.id, this.currentSession);\n    this.saveChatSessions();\n  }\n\n  async chatWithSelection(selectedText: string) {\n    await this.openChat();\n    \n    if (!this.currentSession) {\n      this.newChatSession();\n    }\n\n    const contextMessage = `Here's the selected text I'd like to discuss:\\n\\n${selectedText}\\n\\nWhat would you like to know about this text?`;\n    await this.sendMessage(contextMessage);\n  }\n\n  async quickChat() {\n    const modal = new QuickChatModal(this.app, async (message: string) => {\n      if (!this.currentSession) {\n        this.newChatSession();\n      }\n      await this.sendMessage(message);\n    });\n    modal.open();\n  }\n\n  async sendMessage(content: string, selectedMode?: string, context?: string): Promise<void> {\n    if (!this.currentSession) {\n      this.newChatSession();\n    }\n\n    if (!this.currentSession) return;\n\n    // Parse message for intent and mode selection\n    const parsedMessage = this.parseMessageIntent(content);\n    \n    // Override mode if explicitly provided from UI\n    if (selectedMode && selectedMode !== 'chat') {\n      parsedMessage.mode = selectedMode;\n    }\n\n    // Add user message\n    const userMessage: ChatMessage = {\n      id: generateId(),\n      role: 'user',\n      content,\n      timestamp: Date.now(),\n      metadata: {\n        intent: parsedMessage.intent,\n        requestedMode: parsedMessage.mode,\n        selectedMode: selectedMode,\n        hasSelection: !!parsedMessage.selection\n      }\n    };\n\n    this.currentSession.messages.push(userMessage);\n\n    // Get context from current file if requested\n    let fullContext = context;\n    if (!fullContext && this.settings.contextLines > 0) {\n      fullContext = await this.getDocumentContext();\n    }\n\n    try {\n      // Route based on selected mode from UI\n      if (selectedMode && selectedMode !== 'chat') {\n        // Use Editorial Engine for specific modes\n        await this.processWithEditorialEngine(parsedMessage, fullContext);\n      } else if (parsedMessage.intent === 'edit' || parsedMessage.intent === 'improve') {\n        // Fallback: Use Editorial Engine for detected editing intent\n        await this.processWithEditorialEngine(parsedMessage, fullContext);\n      } else {\n        // Standard chat processing (Chat mode or general conversation)\n        await this.processWithAIProvider(parsedMessage, fullContext);\n      }\n\n      this.currentSession.updatedAt = Date.now();\n\n      if (this.settings.autoSaveChats) {\n        await this.saveChatSessions();\n      }\n\n      // Refresh chat view if open\n      this.refreshChatView();\n\n      // Emit chat event\n      if (window.Writerr?.events) {\n        window.Writerr.events.emit('chat.response-ready', {\n          requestId: userMessage.id,\n          response: this.currentSession.messages[this.currentSession.messages.length - 1]\n        });\n      }\n\n    } catch (error) {\n      new Notice(`Error sending message: ${error.message}`);\n      console.error('Chat error:', error);\n      \n      // Add error message to chat\n      const errorMessage: ChatMessage = {\n        id: generateId(),\n        role: 'assistant',\n        content: `I encountered an error: ${error.message}. Please try again.`,\n        timestamp: Date.now(),\n        metadata: {\n          error: true,\n          errorMessage: error.message\n        }\n      };\n      \n      this.currentSession.messages.push(errorMessage);\n      this.refreshChatView();\n    }\n  }    // Get context from current file if requested\\n    let fullContext = context;\\n    if (!fullContext && this.settings.contextLines > 0) {\\n      fullContext = await this.getDocumentContext();\\n    }\\n\\n    try {\\n      // Check if this should be processed through Editorial Engine\\n      if (parsedMessage.intent === 'edit' || parsedMessage.intent === 'improve') {\\n        await this.processWithEditorialEngine(parsedMessage, fullContext);\\n      } else {\\n        // Standard chat processing\\n        await this.processWithAIProvider(parsedMessage, fullContext);\\n      }\\n\\n      this.currentSession.updatedAt = Date.now();\\n\\n      if (this.settings.autoSaveChats) {\\n        await this.saveChatSessions();\\n      }\\n\\n      // Refresh chat view if open\\n      this.refreshChatView();\\n\\n      // Emit chat event\\n      if (window.Writerr?.events) {\\n        window.Writerr.events.emit('chat.response-ready', {\\n          requestId: userMessage.id,\\n          response: this.currentSession.messages[this.currentSession.messages.length - 1]\\n        });\\n      }\\n\\n    } catch (error) {\\n      new Notice(`Error sending message: ${error.message}`);\\n      console.error('Chat error:', error);\\n      \\n      // Add error message to chat\\n      const errorMessage: ChatMessage = {\\n        id: generateId(),\\n        role: 'assistant',\\n        content: `I encountered an error: ${error.message}. Please try again.`,\\n        timestamp: Date.now(),\\n        metadata: {\\n          error: true,\\n          errorMessage: error.message\\n        }\\n      };\\n      \\n      this.currentSession.messages.push(errorMessage);\\n      this.refreshChatView();\\n    }\\n  }\n\n  private parseMessageIntent(content: string): ParsedMessage {\n    const lowerContent = content.toLowerCase();\n    \n    // Extract potential text selection (common patterns)\n    const selectionMatch = content.match(/[\"']([^\"']+)[\"']|`([^`]+)`/);\n    const selection = selectionMatch?.[1] || selectionMatch?.[2];\n    \n    // Extract mode requests\n    const modeMatch = content.match(/(?:use|with|in)\\s+(proofreader|copy-editor|developmental-editor|creative-writing-assistant)\\s+mode/i);\n    const requestedMode = modeMatch?.[1];\n    \n    // Determine intent based on keywords\n    let intent: 'chat' | 'edit' | 'improve' | 'analyze' = 'chat';\n    \n    if (lowerContent.includes('edit') || lowerContent.includes('fix') || lowerContent.includes('correct')) {\n      intent = 'edit';\n    } else if (lowerContent.includes('improve') || lowerContent.includes('enhance') || lowerContent.includes('rewrite')) {\n      intent = 'improve';\n    } else if (lowerContent.includes('analyze') || lowerContent.includes('review') || lowerContent.includes('check')) {\n      intent = 'analyze';\n    }\n    \n    return {\n      originalContent: content,\n      intent,\n      mode: requestedMode || this.settings.defaultMode || 'proofreader',\n      selection,\n      hasEditingRequest: intent !== 'chat'\n    };\n  }\n\n  private async processWithEditorialEngine(parsedMessage: ParsedMessage, context?: string): Promise<void> {\n    // Check if Editorial Engine is available\n    if (!window.Writerr?.editorial) {\n      throw new Error('Editorial Engine is not available. Please ensure the Editorial Engine plugin is loaded.');\n    }\n\n    // Emit processing event\n    if (window.Writerr.events) {\n      window.Writerr.events.emit('chat.request-processing', {\n        requestId: this.currentSession!.messages[this.currentSession!.messages.length - 1].id,\n        message: this.currentSession!.messages[this.currentSession!.messages.length - 1],\n        mode: parsedMessage.mode\n      });\n    }\n\n    try {\n      // Prepare Editorial Engine payload\n      const payload: IntakePayload = {\n        id: generateId(),\n        text: parsedMessage.selection || context || parsedMessage.originalContent,\n        originalText: parsedMessage.selection || context,\n        mode: parsedMessage.mode,\n        constraints: await this.getConstraintsForMode(parsedMessage.mode),\n        metadata: {\n          source: 'writerr-chat',\n          intent: parsedMessage.intent,\n          timestamp: Date.now(),\n          sessionId: this.currentSession!.id\n        }\n      };\n\n      // Process through Editorial Engine\n      const result = await window.Writerr.editorial.process(payload);\n\n      if (result.success) {\n        // Create assistant response with Editorial Engine results\n        const assistantMessage: ChatMessage = {\n          id: generateId(),\n          role: 'assistant',\n          content: this.formatEditorialEngineResponse(result, parsedMessage),\n          timestamp: Date.now(),\n          metadata: {\n            editorialEngineResult: true,\n            jobId: result.jobId,\n            mode: parsedMessage.mode,\n            processingTime: result.processingTime\n          }\n        };\n\n        this.currentSession!.messages.push(assistantMessage);\n      } else {\n        throw new Error(`Editorial Engine processing failed: ${result.errors?.map(e => e.message).join(', ')}`);\n      }\n    } catch (error) {\n      console.error('Editorial Engine processing error:', error);\n      throw error;\n    }\n  }\n\n  private async processWithAIProvider(parsedMessage: ParsedMessage, context?: string): Promise<void> {\n    console.log(`\uD83C\uDFAF [${BUILD_VERSION}] processWithAIProvider ENTRY - Using provider OBJECT method`);\n    \n    // Get AI Providers plugin and SDK - back to original approach\n    const aiProvidersPlugin = (this.app as any).plugins?.plugins?.['ai-providers'];\n    if (!aiProvidersPlugin) {\n      console.log('\u274C AI Providers plugin not found');\n      throw new Error('AI Providers plugin not available. Please ensure it is installed and enabled.');\n    }\n    \n    // Access the aiProviders SDK object (same as toolbar)\n    const aiProviders = aiProvidersPlugin.aiProviders;\n    if (!aiProviders) {\n      throw new Error('AI Providers SDK not available in plugin');\n    }\n\n    // Get the current provider selection from settings or use the first available\n    let providerObject: any = null;\n    let selectedModel = 'gpt-4'; // fallback\n    \n    // First try: Use selected provider from settings\n    if (this.settings.selectedModel && this.settings.selectedModel.includes(':')) {\n      const [providerId, modelName] = this.settings.selectedModel.split(':');\n      selectedModel = modelName;\n      console.log(`\uD83D\uDD0D Looking for provider: ${providerId}, model: ${modelName}`);\n      \n      if (aiProviders.providers && Array.isArray(aiProviders.providers)) {\n        providerObject = aiProviders.providers.find((p: any) => \n          p.id === providerId || p.name === providerId\n        );\n      }\n      \n      console.log(providerObject ? '\u2705 Found selected provider' : '\u274C Selected provider not found');\n    }\n    \n    // Fallback: Use first available provider\n    if (!providerObject && aiProviders.providers && Array.isArray(aiProviders.providers) && aiProviders.providers.length > 0) {\n      providerObject = aiProviders.providers[0];\n      console.log('\uD83D\uDD04 Using first available provider:', providerObject?.name || providerObject?.id);\n    }\n    \n    if (!providerObject) {\n      throw new Error('No AI providers configured');\n    }\n\n    // Convert messages array to single prompt string (working API format)\n    let prompt = '';\n    \n    // Add context if provided\n    if (context) {\n      prompt += `Context from current document:\\n${context}\\n\\n`;\n    }\n    \n    // Add conversation history\n    const conversationMessages = this.currentSession!.messages;\n    if (conversationMessages.length > 0) {\n      prompt += 'Previous conversation:\\n';\n      for (const msg of conversationMessages) {\n        prompt += `${msg.role === 'user' ? 'User' : 'Assistant'}: ${msg.content}\\n`;\n      }\n      prompt += '\\n';\n    }\n    \n    // Add current user message\n    prompt += `User request: ${parsedMessage.originalContent}`;\n\n    try {\n      console.log(`\uD83C\uDFAF [${BUILD_VERSION}] EXECUTE with provider OBJECT (working API format):`, {\n        provider: providerObject?.name || providerObject?.id,\n        model: selectedModel,\n        promptLength: prompt.length\n      });\n      \n      // Use AI Providers SDK with the WORKING API format from commit 26a97a2\n      const response = await aiProviders.execute({\n        provider: providerObject, // Pass the actual provider object\n        prompt: prompt,           // Single prompt string (not messages array)\n        model: selectedModel,     // Specific model name\n        onProgress: (chunk: string, full: string) => {\n          console.log(`\uD83C\uDFAF [${BUILD_VERSION}] Streaming chunk:`, chunk.length, 'chars');\n        }\n      });\n\n      console.log(`\uD83C\uDFAF [${BUILD_VERSION}] AI response SUCCESS:`, response?.length || 0, 'characters');\n\n      // Validate response\n      if (!response || typeof response !== 'string' || response.trim().length === 0) {\n        throw new Error(`AI Provider returned empty or invalid response: ${JSON.stringify(response)}`);\n      }\n\n      // Create assistant response\n      const assistantMessage: ChatMessage = {\n        id: generateId(),\n        role: 'assistant',\n        content: response,\n        timestamp: Date.now(),\n        metadata: {\n          aiProvidersUsed: true,\n          provider: providerObject.name || providerObject.id,\n          providerType: providerObject.type || 'unknown',\n          model: selectedModel,\n          buildVersion: BUILD_VERSION\n        }\n      };\n\n      this.currentSession!.messages.push(assistantMessage);\n      \n      // Update token counter with estimated values (since working API doesn't return usage)\n      if (this.chatView?.chatToolbar) {\n        const estimatedTokens = Math.ceil(response.length / 4);\n        this.chatView.chatToolbar.updateTokenCounter(estimatedTokens, this.settings.maxTokens || 2000);\n      }\n      \n    } catch (error) {\n      console.error(`\uD83C\uDFAF [${BUILD_VERSION}] AI Providers ERROR:`, error);\n      throw new Error(`AI processing failed: ${error.message}`);\n    }\n  }\n\n  private updateTokenCounterFromResponse(response: any): void {\n    try {\n      const tokensUsed = response?.usage?.totalTokens || response?.usage?.total_tokens || 0;\n      const maxTokens = this.settings.maxTokens || 2000;\n      \n      // Find the chat view and update its token counter\n      const chatView = this.app.workspace.getLeavesOfType(VIEW_TYPE_CHAT)[0]?.view as ChatView;\n      if (chatView && chatView.chatToolbar) {\n        chatView.chatToolbar.updateTokenCounter(tokensUsed, maxTokens);\n      }\n    } catch (error) {\n      console.error('Error updating token counter:', error);\n    }\n  }\n\n  private formatEditorialEngineResponse(result: any, parsedMessage: ParsedMessage): string {\n    let response = '';\n\n    // Add mode indicator\n    response += `**${parsedMessage.mode.replace('-', ' ').replace(/\\b\\w/g, l => l.toUpperCase())} Analysis:**\\n\\n`;\n\n    if (result.result?.processedText) {\n      response += '**Processed Text:**\\n';\n      response += `> ${result.result.processedText}\\n\\n`;\n    }\n\n    if (result.result?.changes && result.result.changes.length > 0) {\n      response += '**Changes Made:**\\n';\n      for (const change of result.result.changes.slice(0, 5)) { // Limit to first 5 changes\n        response += `- **${change.type}** at position ${change.from}-${change.to}: \"${change.text || change.removedText}\"\\n`;\n      }\n      \n      if (result.result.changes.length > 5) {\n        response += `- *... and ${result.result.changes.length - 5} more changes*\\n`;\n      }\n      response += '\\n';\n    }\n\n    if (result.metadata?.trackEditsSession) {\n      response += `*Changes have been applied to your document and are being tracked in session ${result.metadata.trackEditsSession}.*\\n\\n`;\n      response += '*You can accept or reject individual changes using the Track Edits side panel.*';\n    }\n\n    return response;\n  }\n\n  private async getConstraintsForMode(mode: string): Promise<any> {\n    // Get mode constraints from Editorial Engine\n    if (window.Writerr?.editorial) {\n      const modeDefinition = window.Writerr.editorial.getMode(mode);\n      return modeDefinition?.constraints || [];\n    }\n    return [];\n  }\n\n  private async getDocumentContext(): Promise<string | undefined> {\n    const activeFile = this.app.workspace.getActiveFile();\n    if (!activeFile) return undefined;\n\n    try {\n      const content = await this.app.vault.read(activeFile);\n      const lines = content.split('\\n');\n      \n      if (lines.length <= this.settings.contextLines * 2) {\n        return content;\n      }\n\n      // Get lines around cursor or selection\n      const editor = this.app.workspace.getActiveViewOfType(require('obsidian').MarkdownView)?.editor;\n      if (editor) {\n        const cursor = editor.getCursor();\n        const start = Math.max(0, cursor.line - this.settings.contextLines);\n        const end = Math.min(lines.length, cursor.line + this.settings.contextLines);\n        return lines.slice(start, end).join('\\n');\n      }\n\n      return lines.slice(0, this.settings.contextLines).join('\\n');\n    } catch (error) {\n      console.error('Error getting document context:', error);\n      return undefined;\n    }\n  }\n\n  private refreshChatView() {\n    const chatLeaf = this.app.workspace.getLeavesOfType(VIEW_TYPE_CHAT)[0];\n    if (chatLeaf && chatLeaf.view instanceof ChatView) {\n      chatLeaf.view.refresh();\n    }\n  }\n\n  private listenForEditorialEngine() {\n    // Check for Editorial Engine availability on startup\n    setTimeout(() => {\n      if (window.Writerr?.editorial) {\n        this.refreshChatModes();\n      }\n    }, 1000);\n\n    // Listen for Editorial Engine platform-ready event\n    if (window.Writerr?.events) {\n      window.Writerr.events.on('platform-ready', (data: any) => {\n        if (data.plugin === 'editorial-engine') {\n          console.log('Editorial Engine detected, refreshing chat modes...');\n          this.refreshChatModes();\n        }\n      });\n\n      window.Writerr.events.on('mode-registered', () => {\n        this.refreshChatModes();\n      });\n\n      window.Writerr.events.on('mode-updated', () => {\n        this.refreshChatModes();\n      });\n\n      window.Writerr.events.on('mode-removed', () => {\n        this.refreshChatModes();\n      });\n    }\n\n    // Fallback: periodic check for Editorial Engine\n    const checkInterval = setInterval(() => {\n      if (window.Writerr?.editorial) {\n        this.refreshChatModes();\n        clearInterval(checkInterval);\n      }\n    }, 3000);\n\n    // Clear interval after 30 seconds to avoid indefinite checking\n    setTimeout(() => {\n      clearInterval(checkInterval);\n    }, 30000);\n  }\n\n  private refreshChatModes() {\n    // Find and refresh chat view modes\n    const chatLeaves = this.app.workspace.getLeavesOfType(VIEW_TYPE_CHAT);\n    for (const leaf of chatLeaves) {\n      if (leaf.view instanceof ChatView) {\n        leaf.view.refreshModeOptions();\n      }\n    }\n  }\n\n  async loadChatSessions() {\n    try {\n      const data = await this.loadData();\n      if (data && data.chatSessions) {\n        for (const session of data.chatSessions) {\n          this.chatSessions.set(session.id, session);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to load chat sessions:', error);\n    }\n  }\n\n  async saveChatSessions() {\n    try {\n      const sessionsArray = Array.from(this.chatSessions.values());\n      const currentData = await this.loadData() || {};\n      currentData.chatSessions = sessionsArray;\n      await this.saveData(currentData);\n    } catch (error) {\n      console.error('Failed to save chat sessions:', error);\n    }\n  }\n\n  getChatSessions(): ChatSession[] {\n    return Array.from(this.chatSessions.values()).sort((a, b) => b.updatedAt - a.updatedAt);\n  }\n\n  deleteSession(sessionId: string) {\n    this.chatSessions.delete(sessionId);\n    if (this.currentSession && this.currentSession.id === sessionId) {\n      this.currentSession = null;\n    }\n    this.saveChatSessions();\n  }\n\n  setCurrentSession(sessionId: string) {\n    const session = this.chatSessions.get(sessionId);\n    if (session) {\n      this.currentSession = session;\n    }\n  }\n}\n\nclass QuickChatModal extends Modal {\n  private onSubmit: (message: string) => Promise<void>;\n  private inputEl: HTMLTextAreaElement;\n\n  constructor(app: any, onSubmit: (message: string) => Promise<void>) {\n    super(app);\n    this.onSubmit = onSubmit;\n  }\n\n  onOpen() {\n    const { contentEl } = this;\n    contentEl.empty();\n\n    contentEl.createEl('h2', { text: 'Quick Chat' });\n\n    this.inputEl = contentEl.createEl('textarea', {\n      attr: {\n        placeholder: 'Type your message here...',\n        rows: '4',\n        style: 'width: 100%; margin: 10px 0; padding: 8px; border: 1px solid var(--background-modifier-border); border-radius: 4px;'\n      }\n    });\n\n    const buttonContainer = contentEl.createEl('div', {\n      attr: { style: 'display: flex; justify-content: flex-end; gap: 10px; margin-top: 10px;' }\n    });\n\n    buttonContainer.createEl('button', {\n      text: 'Cancel',\n      attr: { style: 'padding: 6px 12px;' }\n    }).onclick = () => this.close();\n\n    const sendButton = buttonContainer.createEl('button', {\n      text: 'Send',\n      attr: { style: 'padding: 6px 12px; background: var(--interactive-accent); color: var(--text-on-accent); border: none; border-radius: 4px;' }\n    });\n    \n    sendButton.onclick = async () => {\n      const message = this.inputEl.value.trim();\n      if (message) {\n        await this.onSubmit(message);\n        this.close();\n      }\n    };\n\n    this.inputEl.focus();\n  }\n\n  onClose() {\n    const { contentEl } = this;\n    contentEl.empty();\n  }\n}", "import { App, PluginSettingTab, Setting } from 'obsidian';\nimport WriterrlChatPlugin from './main';\nimport { AIProvider } from '@shared/types';\nimport { generateId } from '@shared/utils';\n\nexport class WriterrlChatSettingsTab extends PluginSettingTab {\n  plugin: WriterrlChatPlugin;\n\n  constructor(app: App, plugin: WriterrlChatPlugin) {\n    super(app, plugin);\n    this.plugin = plugin;\n  }\n\n  display(): void {\n    const { containerEl } = this;\n    containerEl.empty();\n\n    containerEl.createEl('h2', { text: 'Writerr Chat Settings' });\n\n    // AI Provider Settings\n    containerEl.createEl('h3', { text: 'AI Provider Configuration' });\n\n    new Setting(containerEl)\n      .setName('Default provider')\n      .setDesc('Select the default AI provider for chat')\n      .addDropdown(dropdown => {\n        for (const provider of this.plugin.settings.providers) {\n          dropdown.addOption(provider.id, provider.name);\n        }\n        dropdown.setValue(this.plugin.settings.defaultProvider)\n          .onChange(async (value) => {\n            this.plugin.settings.defaultProvider = value;\n            await this.plugin.saveSettings();\n          });\n      });\n\n    // Provider management\n    for (let i = 0; i < this.plugin.settings.providers.length; i++) {\n      const provider = this.plugin.settings.providers[i];\n      this.createProviderSetting(containerEl, provider, i);\n    }\n\n    new Setting(containerEl)\n      .setName('Add new provider')\n      .setDesc('Add a new AI provider')\n      .addButton(button => button\n        .setButtonText('Add Provider')\n        .setCta()\n        .onClick(() => {\n          this.plugin.settings.providers.push({\n            id: generateId(),\n            name: 'New Provider',\n            model: 'gpt-3.5-turbo',\n            baseUrl: '',\n            apiKey: ''\n          });\n          this.display(); // Refresh settings\n        }));\n\n    // Chat Interface Settings\n    containerEl.createEl('h3', { text: 'Chat Interface' });\n\n    new Setting(containerEl)\n      .setName('Chat position')\n      .setDesc('Choose where the chat panel appears')\n      .addDropdown(dropdown => dropdown\n        .addOption('right', 'Right sidebar')\n        .addOption('left', 'Left sidebar')\n        .addOption('floating', 'Floating window')\n        .setValue(this.plugin.settings.chatPosition)\n        .onChange(async (value: 'right' | 'left' | 'floating') => {\n          this.plugin.settings.chatPosition = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(containerEl)\n      .setName('Theme')\n      .setDesc('Choose the chat interface theme')\n      .addDropdown(dropdown => dropdown\n        .addOption('default', 'Default')\n        .addOption('compact', 'Compact')\n        .addOption('minimal', 'Minimal')\n        .setValue(this.plugin.settings.theme)\n        .onChange(async (value: 'default' | 'compact' | 'minimal') => {\n          this.plugin.settings.theme = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(containerEl)\n      .setName('Show timestamps')\n      .setDesc('Display timestamps for chat messages')\n      .addToggle(toggle => toggle\n        .setValue(this.plugin.settings.showTimestamps)\n        .onChange(async (value) => {\n          this.plugin.settings.showTimestamps = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(containerEl)\n      .setName('Enable markdown')\n      .setDesc('Render markdown in chat messages')\n      .addToggle(toggle => toggle\n        .setValue(this.plugin.settings.enableMarkdown)\n        .onChange(async (value) => {\n          this.plugin.settings.enableMarkdown = value;\n          await this.plugin.saveSettings();\n        }));\n\n    // Behavior Settings\n    containerEl.createEl('h3', { text: 'Behavior' });\n\n    new Setting(containerEl)\n      .setName('Auto-save chats')\n      .setDesc('Automatically save chat sessions')\n      .addToggle(toggle => toggle\n        .setValue(this.plugin.settings.autoSaveChats)\n        .onChange(async (value) => {\n          this.plugin.settings.autoSaveChats = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(containerEl)\n      .setName('Context lines')\n      .setDesc('Number of lines to include as context from the current document')\n      .addSlider(slider => slider\n        .setLimits(0, 50, 1)\n        .setValue(this.plugin.settings.contextLines)\n        .setDynamicTooltip()\n        .onChange(async (value) => {\n          this.plugin.settings.contextLines = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(containerEl)\n      .setName('Max tokens')\n      .setDesc('Maximum number of tokens for AI responses')\n      .addSlider(slider => slider\n        .setLimits(100, 4000, 100)\n        .setValue(this.plugin.settings.maxTokens)\n        .setDynamicTooltip()\n        .onChange(async (value) => {\n          this.plugin.settings.maxTokens = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(containerEl)\n      .setName('Temperature')\n      .setDesc('Creativity level for AI responses (0 = focused, 1 = creative)')\n      .addSlider(slider => slider\n        .setLimits(0, 1, 0.1)\n        .setValue(this.plugin.settings.temperature)\n        .setDynamicTooltip()\n        .onChange(async (value) => {\n          this.plugin.settings.temperature = value;\n          await this.plugin.saveSettings();\n        }));\n\n    // Actions\n    containerEl.createEl('h3', { text: 'Actions' });\n\n    new Setting(containerEl)\n      .setName('Clear all chat history')\n      .setDesc('Delete all saved chat sessions (cannot be undone)')\n      .addButton(button => button\n        .setButtonText('Clear All')\n        .setWarning()\n        .onClick(() => {\n          this.plugin.chatSessions.clear();\n          this.plugin.currentSession = null;\n          this.plugin.saveChatSessions();\n        }));\n  }\n\n  private createProviderSetting(containerEl: HTMLElement, provider: AIProvider, index: number) {\n    const providerContainer = containerEl.createDiv('provider-setting');\n    providerContainer.createEl('h4', { text: provider.name });\n\n    new Setting(providerContainer)\n      .setName('Provider name')\n      .addText(text => text\n        .setValue(provider.name)\n        .onChange(async (value) => {\n          provider.name = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(providerContainer)\n      .setName('Model')\n      .addText(text => text\n        .setValue(provider.model)\n        .onChange(async (value) => {\n          provider.model = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(providerContainer)\n      .setName('Base URL')\n      .addText(text => text\n        .setValue(provider.baseUrl || '')\n        .onChange(async (value) => {\n          provider.baseUrl = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(providerContainer)\n      .setName('API Key')\n      .addText(text => {\n        text.inputEl.type = 'password';\n        text.setValue(provider.apiKey || '')\n          .onChange(async (value) => {\n            provider.apiKey = value;\n            await this.plugin.saveSettings();\n          });\n      });\n\n    new Setting(providerContainer)\n      .addButton(button => button\n        .setButtonText('Remove')\n        .setWarning()\n        .onClick(async () => {\n          this.plugin.settings.providers.splice(index, 1);\n          await this.plugin.saveSettings();\n          this.display(); // Refresh settings\n        }));\n  }\n}", "import { ItemView, WorkspaceLeaf, Notice } from 'obsidian';\nimport { ChatMessage, ChatSession } from '@shared/types';\nimport WriterrlChatPlugin from './main';\nimport { \n  ChatHeader, \n  MessageList, \n  ContextArea, \n  ChatInput, \n  ChatToolbar,\n  SessionManager,\n  DocumentContext\n} from './components';\n\nexport const VIEW_TYPE_CHAT = 'writerr-chat-view';\n\nexport class ChatView extends ItemView {\n  plugin: WriterrlChatPlugin;\n  private chatHeader: ChatHeader;\n  private messageList: MessageList;\n  private contextArea: ContextArea;\n  private chatInput: ChatInput;\n  public chatToolbar: ChatToolbar;\n  private sessionManager: SessionManager;\n\n  constructor(leaf: WorkspaceLeaf, plugin: WriterrlChatPlugin) {\n    super(leaf);\n    this.plugin = plugin;\n  }\n\n  getViewType(): string {\n    return VIEW_TYPE_CHAT;\n  }\n\n  getDisplayText(): string {\n    return 'Writerr Chat';\n  }\n\n  getIcon(): string {\n    return 'message-square';\n  }\n\n  async onOpen() {\n    const container = this.containerEl.children[1];\n    container.empty();\n    container.addClass('writerr-chat-view');\n    container.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n      background: var(--background-primary);\n      border: 1px solid var(--background-modifier-border);\n      border-radius: 8px;\n      overflow: hidden;\n    `;\n\n    await this.createComponents(container);\n    this.setupEventHandlers();\n    this.applyTheme();\n\n    // Load current session or create new one\n    if (!this.plugin.currentSession) {\n      this.plugin.newChatSession();\n    }\n\n    this.refresh();\n\n    // Delayed initialization for Editorial Engine integration\n    this.scheduleDelayedInitialization();\n  }\n\n  private async createComponents(container: HTMLElement): Promise<void> {\n    // Create header\n    const headerContainer = container.createEl('div', { cls: 'chat-header-container' });\n    this.chatHeader = new ChatHeader({\n      plugin: this.plugin,\n      container: headerContainer,\n      events: {\n        onHistoryClick: () => this.showSessionManager(),\n        onSettingsClick: () => this.showSettings(),\n        onModeChange: (mode) => this.handleModeChange(mode)\n      }\n    });\n    this.chatHeader.render();\n\n    // Create message list\n    const messageContainer = container.createEl('div', { cls: 'chat-messages-container' });\n    this.messageList = new MessageList({\n      plugin: this.plugin,\n      container: messageContainer,\n      actionHandler: {\n        onCopy: (message) => this.copyMessage(message),\n        onRetry: (message) => this.retryMessage(message),\n        onInfo: (message) => this.showMessageInfo(message)\n      }\n    });\n    this.messageList.render();\n\n    // Create context area\n    const contextContainer = container.createEl('div', { cls: 'chat-context-container' });\n    this.contextArea = new ContextArea({\n      plugin: this.plugin,\n      container: contextContainer,\n      events: {\n        onDocumentAdd: (doc) => this.handleDocumentAdd(doc),\n        onDocumentRemove: (doc) => this.handleDocumentRemove(doc),\n        onDocumentOpen: (doc) => this.openDocument(doc)\n      }\n    });\n    this.contextArea.render();\n\n    // Create input area\n    const inputContainer = container.createEl('div', { cls: 'chat-input-container' });\n    this.chatInput = new ChatInput({\n      plugin: this.plugin,\n      container: inputContainer,\n      events: {\n        onSend: (message, mode) => this.sendMessage(message, mode),\n        onModeChange: (mode) => this.handleModeChange(mode)\n      }\n    });\n    this.chatInput.render();\n\n    // Create bottom toolbar - await async prompt loading\n    const toolbarContainer = container.createEl('div', { cls: 'chat-toolbar-container' });\n    this.chatToolbar = new ChatToolbar({\n      plugin: this.plugin,\n      container: toolbarContainer,\n      events: {\n        onAddDocument: () => this.addDocumentToChat(),\n        onCopyChat: () => this.copyEntireChat(),\n        onClearChat: () => this.clearChat(),\n        onModelChange: (model) => this.handleModelChange(model),\n        onPromptChange: (prompt) => this.handlePromptChange(prompt)\n      }\n    });\n    await this.chatToolbar.render();\n  }\n\n  private setupEventHandlers(): void {\n    // Listen for starter prompt selection\n    this.messageList.container.addEventListener('starter-prompt-selected', (e: CustomEvent) => {\n      this.chatInput.setValue(e.detail.prompt);\n      this.chatInput.focusInput();\n    });\n  }\n\n  private scheduleDelayedInitialization(): void {\n    // Refresh modes after view is fully loaded (in case Editorial Engine loaded after chat view)\n    setTimeout(() => {\n      console.log('Delayed mode refresh after chat view opened');\n      this.chatHeader.refreshModeOptions();\n    }, 1000);\n\n    // Also refresh when status changes\n    setTimeout(() => {\n      this.chatHeader.updateStatusIndicator();\n    }, 1500);\n  }\n\n  private async sendMessage(message: string, mode?: string): Promise<void> {\n    if (!message.trim()) return;\n\n    // Get selected mode from header if not provided\n    const selectedMode = mode || this.chatHeader.getSelectedMode();\n\n    this.chatInput.setProcessingState(true);\n    this.chatHeader.updateStatusIndicator();\n\n    try {\n      await this.plugin.sendMessage(message, selectedMode);\n      this.refresh();\n      // Update token counter after message is sent\n      if (this.chatToolbar?.updateTokenCounterFromModel) {\n        this.chatToolbar.updateTokenCounterFromModel();\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      new Notice(`Error: ${error.message}`);\n    } finally {\n      this.chatInput.setProcessingState(false);\n      this.chatHeader.updateStatusIndicator();\n    }\n  }\n\n  private copyMessage(message: ChatMessage): void {\n    navigator.clipboard.writeText(message.content).then(() => {\n      new Notice('Message copied to clipboard');\n    }).catch(err => {\n      console.error('Failed to copy message:', err);\n      new Notice('Failed to copy message');\n    });\n  }\n\n  private async retryMessage(message: ChatMessage): Promise<void> {\n    // Find the message index\n    const messages = this.plugin.currentSession?.messages || [];\n    const messageIndex = messages.findIndex(m => m.timestamp === message.timestamp);\n    \n    if (messageIndex >= 0 && message.role === 'assistant') {\n      // Find the preceding user message\n      const userMessage = messages[messageIndex - 1];\n      if (userMessage && userMessage.role === 'user') {\n        // Remove the AI message from the session (keep the user message)\n        this.plugin.currentSession.messages = messages.slice(0, messageIndex);\n        \n        // Refresh the UI to remove the AI message\n        this.refresh();\n        \n        // Call processMessage directly without adding the user message again\n        // This bypasses the user message addition in sendMessage\n        const parsedMessage = this.plugin.parseMessageIntent(userMessage.content);\n        \n        try {\n          // Get the selected mode from header\n          const selectedMode = this.chatHeader.getSelectedMode();\n          \n          if (selectedMode && selectedMode !== 'chat') {\n            parsedMessage.mode = selectedMode;\n          }\n          \n          // Get context if needed\n          let fullContext: string | undefined;\n          if (this.plugin.settings.contextLines > 0) {\n            fullContext = await this.plugin.getDocumentContext();\n          }\n          \n          // Process directly without adding user message\n          if (selectedMode && selectedMode !== 'chat') {\n            await this.plugin.processWithEditorialEngine(parsedMessage, fullContext);\n          } else if (parsedMessage.intent === 'edit' || parsedMessage.intent === 'improve') {\n            await this.plugin.processWithEditorialEngine(parsedMessage, fullContext);\n          } else {\n            await this.plugin.processWithAIProvider(parsedMessage, fullContext);\n          }\n          \n          this.plugin.currentSession.updatedAt = Date.now();\n          \n          if (this.plugin.settings.autoSaveChats) {\n            await this.plugin.saveChatSessions();\n          }\n          \n          this.refresh();\n          \n        } catch (error) {\n          console.error('Error retrying message:', error);\n          new Notice(`Error: ${error.message}`);\n          \n          // Import generateId from shared utils\n          const { generateId } = await import('@shared/utils');\n          \n          // Add error message to chat\n          const errorMessage: ChatMessage = {\n            id: generateId(),\n            role: 'assistant',\n            content: `I encountered an error: ${error.message}. Please try again.`,\n            timestamp: Date.now(),\n            metadata: {\n              error: true,\n              errorMessage: error.message\n            }\n          };\n          \n          this.plugin.currentSession.messages.push(errorMessage);\n          this.refresh();\n        }\n      }\n    }\n  }\n\n  private showMessageInfo(message: ChatMessage): void {\n    const info = {\n      role: message.role,\n      timestamp: new Date(message.timestamp).toLocaleString(),\n      length: message.content.length,\n      tokens: Math.ceil(message.content.length / 4) // Rough token estimation\n    };\n\n    const infoText = [\n      `Role: ${info.role}`,\n      `Timestamp: ${info.timestamp}`,\n      `Length: ${info.length} characters`,\n      `Estimated tokens: ${info.tokens}`\n    ].join('\\n');\n\n    new Notice(infoText, 5000);\n  }\n\n  private handleModeChange(mode: string): void {\n    this.plugin.settings.defaultMode = mode;\n    this.plugin.saveSettings();\n  }\n\n  private handleDocumentAdd(doc: DocumentContext): void {\n    console.log('Document added to context:', doc);\n    // Update token counter when document is added to context\n    if (this.chatToolbar?.updateTokenCounterFromModel) {\n      this.chatToolbar.updateTokenCounterFromModel();\n    }\n  }\n\n  private handleDocumentRemove(doc: DocumentContext): void {\n    console.log('Document removed from context:', doc);\n    // Update token counter when document is removed from context\n    if (this.chatToolbar?.updateTokenCounterFromModel) {\n      this.chatToolbar.updateTokenCounterFromModel();\n    }\n  }\n\n  private async openDocument(doc: DocumentContext): Promise<void> {\n    try {\n      const file = this.app.vault.getAbstractFileByPath(doc.path);\n      if (file) {\n        await this.app.workspace.openLinkText(doc.path, '', true);\n      }\n    } catch (error) {\n      console.error('Error opening document:', error);\n      new Notice(`Failed to open document: ${doc.name}`);\n    }\n  }\n\n  private showSessionManager(): void {\n    if (this.sessionManager) {\n      this.sessionManager.destroy();\n    }\n\n    const overlayContainer = this.containerEl.createEl('div');\n    this.sessionManager = new SessionManager({\n      plugin: this.plugin,\n      container: overlayContainer,\n      onSessionSelect: (sessionId) => this.selectSession(sessionId),\n      onSessionDelete: (sessionId) => this.deleteSession(sessionId),\n      onNewSession: () => this.createNewSession()\n    });\n    \n    this.sessionManager.show();\n  }\n\n  private showSettings(): void {\n    // Placeholder for settings modal\n    new Notice('Settings panel coming soon!');\n  }\n\n  private selectSession(sessionId: string): void {\n    this.plugin.setCurrentSession(sessionId);\n    this.refresh();\n  }\n\n  private deleteSession(sessionId: string): void {\n    this.plugin.deleteSession(sessionId);\n    this.refresh();\n  }\n\n  private createNewSession(): void {\n    this.plugin.newChatSession();\n    this.refresh();\n  }\n\n  refresh(): void {\n    this.updateMessageList();\n    this.updateHeader();\n  }\n\n  private updateMessageList(): void {\n    const messages = this.plugin.currentSession?.messages || [];\n    this.messageList.setMessages(messages);\n  }\n\n  private updateHeader(): void {\n    if (this.plugin.settings.defaultMode) {\n      this.chatHeader.setMode(this.plugin.settings.defaultMode);\n    }\n    this.chatHeader.updateStatusIndicator();\n  }\n\n  private applyTheme(): void {\n    const container = this.containerEl;\n    container.removeClass('theme-default', 'theme-compact', 'theme-minimal');\n    container.addClass(`theme-${this.plugin.settings.theme}`);\n\n    // Apply theme-specific adjustments if needed\n    if (this.plugin.settings.theme === 'compact') {\n      this.messageList.container.style.fontSize = '14px';\n    } else if (this.plugin.settings.theme === 'minimal') {\n      this.messageList.container.style.fontSize = '13px';\n    }\n  }\n\n  // Public API methods for external access\n  public refreshModeOptions(): void {\n    this.chatHeader.refreshModeOptions();\n  }\n\n  public getSelectedMode(): string {\n    return this.chatHeader.getSelectedMode();\n  }\n\n  public setMode(mode: string): void {\n    this.chatHeader.setMode(mode);\n  }\n\n  // Toolbar event handlers\n  private addDocumentToChat(): void {\n    // This will trigger the context area document picker\n    const addButton = this.contextArea.container.querySelector('.context-add-button') as HTMLButtonElement;\n    if (addButton) {\n      addButton.click();\n    }\n  }\n\n  private copyEntireChat(): void {\n    const messages = this.plugin.currentSession?.messages || [];\n    const chatText = messages\n      .map(msg => `${msg.role === 'user' ? 'You' : 'Assistant'}: ${msg.content}`)\n      .join('\\n\\n');\n    \n    navigator.clipboard.writeText(chatText).then(() => {\n      new Notice('Chat copied to clipboard');\n    }).catch(() => {\n      new Notice('Failed to copy chat');\n    });\n  }\n\n  private clearChat(): void {\n    if (this.plugin.currentSession) {\n      this.plugin.currentSession.messages = [];\n      this.refresh();\n      new Notice('Chat cleared');\n    }\n  }\n\n  private handleModelChange(model: string): void {\n    console.log('Model changed to:', model);\n    // Here you would update the current model setting\n    new Notice(`Model changed to ${model}`);\n  }\n\n  private handlePromptChange(prompt: string): void {\n    console.log('Prompt template selected:', prompt);\n    // Here you would apply the prompt template\n    new Notice(`Prompt template: ${prompt}`);\n    \n    // Update token counter after prompt selection\n    if (this.chatToolbar?.updateTokenCounterFromModel) {\n      this.chatToolbar.updateTokenCounterFromModel();\n    }\n  }\n\n  async onClose() {\n    // Clean up components\n    this.chatHeader?.destroy();\n    this.messageList?.destroy();\n    this.contextArea?.destroy();\n    this.chatInput?.destroy();\n    this.sessionManager?.destroy();\n  }\n}", "import { ChatComponent, ComponentOptions } from './types';\nimport WriterrlChatPlugin from '../main';\n\nexport abstract class BaseComponent implements ChatComponent {\n  container: HTMLElement;\n  plugin: WriterrlChatPlugin;\n\n  constructor(options: ComponentOptions) {\n    this.container = options.container;\n    this.plugin = options.plugin;\n  }\n\n  abstract render(): void | Promise<void>;\n\n  destroy(): void {\n    this.container.empty();\n  }\n\n  protected createElement(\n    tag: string,\n    options: {\n      cls?: string | string[];\n      text?: string;\n      attrs?: Record<string, string>;\n      styles?: Record<string, string>;\n      tooltip?: string;\n    } = {}\n  ): HTMLElement {\n    const el = this.container.createEl(tag);\n    \n    if (options.cls) {\n      if (Array.isArray(options.cls)) {\n        el.addClasses(options.cls);\n      } else {\n        el.addClass(options.cls);\n      }\n    }\n    \n    if (options.text) {\n      el.textContent = options.text;\n    }\n    \n    if (options.attrs) {\n      Object.entries(options.attrs).forEach(([key, value]) => {\n        el.setAttribute(key, value);\n      });\n    }\n    \n    if (options.styles) {\n      el.style.cssText = Object.entries(options.styles)\n        .map(([key, value]) => `${key}: ${value}`)\n        .join('; ');\n    }\n\n    if (options.tooltip) {\n      this.addTooltip(el, options.tooltip);\n    }\n    \n    return el;\n  }\n\n  protected addHoverEffect(element: HTMLElement, hoverStyles: Record<string, string>) {\n    const originalStyles: Record<string, string> = {};\n    \n    element.addEventListener('mouseenter', () => {\n      Object.entries(hoverStyles).forEach(([key, value]) => {\n        originalStyles[key] = element.style[key as any];\n        element.style[key as any] = value;\n      });\n    });\n    \n    element.addEventListener('mouseleave', () => {\n      Object.entries(originalStyles).forEach(([key, value]) => {\n        element.style[key as any] = value;\n      });\n    });\n  }\n\n  protected addTooltip(element: HTMLElement, text: string, delay = 700): void {\n    // Dynamic import to avoid circular dependencies\n    import('../utils/tooltips').then(({ addTooltipToComponent }) => {\n      addTooltipToComponent(element, text);\n    });\n  }\n}", "import { MarkdownRenderer, Component } from 'obsidian';\nimport { ChatMessage } from '@shared/types';\nimport { BaseComponent } from './BaseComponent';\nimport { ComponentOptions, MessageActionHandler } from './types';\nimport { Icons, ICON_STYLES } from '../utils/icons';\n\ninterface MessageBubbleOptions extends ComponentOptions {\n  message: ChatMessage;\n  actionHandler: MessageActionHandler;\n}\n\nexport class MessageBubble extends BaseComponent {\n  private message: ChatMessage;\n  private actionHandler: MessageActionHandler;\n  private messageEl: HTMLElement;\n  private actionsEl: HTMLElement;\n\n  constructor(options: MessageBubbleOptions) {\n    super(options);\n    this.message = options.message;\n    this.actionHandler = options.actionHandler;\n  }\n\n  render(): void {\n    this.createMessageElement();\n    this.createAvatar();\n    this.createContent();\n    this.createActions();\n    this.createTimestamp();\n    this.addInteractions();\n  }\n\n  private createMessageElement(): void {\n    const isUser = this.message.role === 'user';\n    \n    this.messageEl = this.createElement('div', {\n      cls: ['chat-message', `chat-message-${this.message.role}`],\n      styles: {\n        display: 'flex',\n        margin: '16px 0',\n        gap: '12px',\n        position: 'relative',\n        alignItems: 'flex-start',\n        ...(isUser ? { 'flex-direction': 'row-reverse' } : {})\n      }\n    });\n  }\n\n  private createAvatar(): void {\n    const isUser = this.message.role === 'user';\n    const avatar = this.messageEl.createEl('div', { cls: 'writerr-message-icon' });\n\n    if (isUser) {\n      // User icon using centralized icon system\n      avatar.innerHTML = Icons.user({ \n        className: 'writerr-message-avatar', \n        width: 20, \n        height: 20 \n      });\n    } else {\n      // AI icon using centralized icon system\n      avatar.innerHTML = Icons.bot({ \n        className: 'writerr-message-avatar', \n        width: 20, \n        height: 20 \n      });\n    }\n  }\n\n  private createContent(): void {\n    const isUser = this.message.role === 'user';\n    const contentWrapper = this.messageEl.createEl('div', { cls: 'message-content-wrapper' });\n    contentWrapper.style.cssText = `\n      flex: 1;\n      min-width: 0;\n      max-width: calc(100% - 120px);\n    `;\n\n    const bubble = contentWrapper.createEl('div', { cls: 'message-bubble' });\n    bubble.style.cssText = `\n      padding: 12px 16px;\n      border-radius: 18px;\n      position: relative;\n      word-wrap: break-word;\n      ${isUser \n        ? `\n          background: var(--background-primary);\n          color: var(--text-normal);\n          border: 2px solid var(--background-modifier-border);\n          border-bottom-right-radius: 6px;\n        `\n        : `\n          background: var(--background-secondary);\n          color: var(--text-normal);\n          border: 1px solid var(--background-modifier-border);\n          border-bottom-left-radius: 6px;\n        `\n      }\n      transition: all 0.2s ease;\n    `;\n\n    if (this.plugin.settings.enableMarkdown && !isUser) {\n      this.renderMarkdownContent(bubble);\n    } else {\n      bubble.textContent = this.message.content;\n    }\n\n    // Add subtle shadow on hover\n    this.addHoverEffect(bubble, {\n      'box-shadow': '0 4px 12px rgba(0, 0, 0, 0.1)',\n      'transform': 'translateY(-1px)'\n    });\n  }\n\n  private async renderMarkdownContent(bubble: HTMLElement): Promise<void> {\n    try {\n      const component = new Component();\n      await MarkdownRenderer.renderMarkdown(\n        this.message.content,\n        bubble,\n        '',\n        component\n      );\n    } catch (error) {\n      console.error('Error rendering markdown:', error);\n      bubble.textContent = this.message.content;\n    }\n  }\n\n  private createActions(): void {\n    const isUser = this.message.role === 'user';\n    \n    // Create actions container directly in the content wrapper, below the bubble\n    const contentWrapper = this.messageEl.querySelector('.message-content-wrapper') as HTMLElement;\n    this.actionsEl = contentWrapper.createEl('div', { cls: 'writerr-message-actions' });\n\n    // Align actions to the right for user messages, left for AI messages\n    if (isUser) {\n      this.actionsEl.style.justifyContent = 'flex-end';\n    } else {\n      this.actionsEl.style.justifyContent = 'flex-start';\n    }\n\n    if (isUser) {\n      // User message actions: copy and info (hover-only)\n      this.createActionButton('copy', 'Copy message', \n        Icons.copy({ className: 'writerr-action-icon', ...ICON_STYLES.action }), \n        () => this.actionHandler.onCopy(this.message)\n      );\n\n      // Info button for user messages - hover-only tooltip with timestamp\n      this.createInfoHoverButton(true);\n    } else {\n      // AI message actions: retry, copy, and info (hover-only)\n      this.createActionButton('retry', 'Retry this response', \n        Icons.refresh({ className: 'writerr-action-icon', ...ICON_STYLES.action }), \n        () => this.actionHandler.onRetry(this.message)\n      );\n\n      this.createActionButton('copy', 'Copy message', \n        Icons.copy({ className: 'writerr-action-icon', ...ICON_STYLES.action }), \n        () => this.actionHandler.onCopy(this.message)\n      );\n\n      // Info button for AI messages - hover-only tooltip with timestamp and model\n      this.createInfoHoverButton(false);\n    }\n  }\n\n  private createActionButton(type: string, tooltip: string, icon: string, onClick: () => void): void {\n    const btn = this.actionsEl.createEl('button', { cls: `message-action-btn action-${type}` });\n    btn.innerHTML = icon;\n    btn.onclick = onClick;\n\n    btn.style.cssText = `\n      background: transparent !important;\n      border: none !important;\n      box-shadow: none !important;\n      padding: 4px !important;\n      border-radius: 4px !important;\n      cursor: pointer !important;\n      color: var(--text-faint) !important;\n      display: flex !important;\n      align-items: center !important;\n      justify-content: center !important;\n      transition: all 0.2s ease !important;\n      width: 24px !important;\n      height: 24px !important;\n      opacity: 0.6 !important;\n    `;\n\n    // Add unified tooltip\n    this.addTooltip(btn, tooltip);\n\n    // Force reflow\n    btn.offsetHeight;\n\n    this.addHoverEffect(btn, {\n      'color': 'var(--text-muted)',\n      'opacity': '1'\n    });\n  }\n\n  private createInfoHoverButton(isUser: boolean): void {\n    const btn = this.actionsEl.createEl('button', { cls: `message-action-btn action-info` });\n    btn.innerHTML = Icons.info({ className: 'writerr-action-icon', ...ICON_STYLES.action });\n\n    btn.style.cssText = `\n      background: transparent !important;\n      border: none !important;\n      box-shadow: none !important;\n      padding: 4px !important;\n      border-radius: 4px !important;\n      cursor: default !important;\n      color: var(--text-faint) !important;\n      display: flex !important;\n      align-items: center !important;\n      justify-content: center !important;\n      transition: all 0.2s ease !important;\n      width: 24px !important;\n      height: 24px !important;\n      opacity: 0.6 !important;\n    `;\n\n    // Format timestamp\n    const timestamp = new Date(this.message.timestamp).toLocaleString();\n    \n    // Create tooltip text based on message type\n    let tooltipText = `[${timestamp}]`;\n    if (!isUser) {\n      // For AI messages, add model info if available from metadata\n      const model = this.message.metadata?.selectedModel || \n                   this.message.metadata?.model || \n                   'AI Assistant';\n      tooltipText = `[${timestamp}] \u2022 [${model}]`;\n    }\n\n    // Add hover-only tooltip (no click handler)\n    this.addTooltip(btn, tooltipText);\n\n    // Force reflow\n    btn.offsetHeight;\n\n    this.addHoverEffect(btn, {\n      'color': 'var(--text-muted)',\n      'opacity': '1'\n    });\n  }\n\n  private createTimestamp(): void {\n    // No timestamps - info is available via the eye icon\n    return;\n  }\n\n  private addInteractions(): void {\n    // Actions are always visible, no hover needed\n  }\n}", "/**\n * Centralized Lucide icon system for Writerr Chat\n * Uses direct SVG paths for consistent rendering across all components\n */\n\nexport interface IconConfig {\n  viewBox?: string;\n  width?: number;\n  height?: number;\n  strokeWidth?: number;\n  className?: string;\n}\n\nconst DEFAULT_CONFIG: Required<IconConfig> = {\n  viewBox: '0 0 24 24',\n  width: 16,\n  height: 16,\n  strokeWidth: 2,\n  className: 'writerr-icon'\n};\n\n/**\n * Lucide icon paths - direct from lucide.dev\n */\nexport const ICON_PATHS = {\n  // Communication & Actions\n  send: ['m22 2-7 20-4-9-9-4z', 'M22 2 11 13'],\n  messageCircle: ['M7.9 20A9 9 0 1 0 4 16.1L2 22z'],\n  messageSquare: ['M21 15V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h11l5 3z'],\n  bot: ['path d=\"M12 6V2H8\"', 'path d=\"m8 18-4 4V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2Z\"', 'path d=\"M2 12h2\"', 'path d=\"M9 11v2\"', 'path d=\"M15 11v2\"', 'path d=\"M20 12h2\"'],\n  user: ['M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2', 'circle cx=\"12\" cy=\"7\" r=\"4\"'],\n  \n  // File & Document Actions  \n  filePlus2: ['M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z', 'M14 2v6h6', 'M12 12v6', 'M9 15h6'],\n  copy: ['rect width=\"14\" height=\"14\" x=\"8\" y=\"8\" rx=\"2\" ry=\"2\"', 'path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"'],\n  plus: ['M12 5v14', 'M5 12h14'],\n  \n  // Editing & Cleanup\n  paintbrush: ['M18.37 2.63 14 7l-1.59-1.59a2 2 0 0 0-2.82 0L8 7l9 9 1.59-1.59a2 2 0 0 0 0-2.82L17 10l4.37-4.37a2.12 2.12 0 1 0-3-3Z', 'M9 8c-2 3-4 3.5-7 4l8 10c2-1 6-5 6-7', 'M14.5 17.5L4.5 15'],\n  \n  // Navigation & UI\n  chevronDown: ['m6 9 6 6 6-6'],\n  chevronUp: ['m18 15-6-6-6 6'], \n  chevronLeft: ['m15 18-6-6 6-6'],\n  chevronRight: ['m9 18 6-6-6-6'],\n  x: ['M18 6 6 18', 'M6 6l12 12'],\n  \n  // Information & Actions\n  eye: ['path d=\"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-3-7-10-7Z\"', 'circle cx=\"12\" cy=\"12\" r=\"3\"'],\n  info: ['circle cx=\"12\" cy=\"12\" r=\"10\"', 'path d=\"m12 16v-4\"', 'path d=\"m12 8h.01\"'],\n  settings: ['circle cx=\"12\" cy=\"12\" r=\"3\"', 'path d=\"M12 1v6m0 6v6m-3-9h6m-6 6h6'],\n  \n  // Loading & Status\n  loader: ['path d=\"M21 12a9 9 0 11-6.219-8.56\"'],\n  \n  // Content Actions\n  refresh: ['path d=\"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\"', 'path d=\"M21 3v5h-5\"', 'path d=\"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\"', 'path d=\"M8 16H3v5\"'],\n  trash: ['path d=\"M3 6h18\"', 'path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"', 'path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"'],\n  \n  // Text & Editing\n  type: ['polyline points=\"4,7 4,4 20,4 20,7\"', 'line x1=\"9\" y1=\"20\" x2=\"15\" y2=\"20\"', 'line x1=\"12\" y1=\"4\" x2=\"12\" y2=\"20\"'],\n  edit3: ['path d=\"M12 20h9\"', 'path d=\"M16.5 3.5a2.12 2.12 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z\"']\n} as const;;;\n\nexport type IconName = keyof typeof ICON_PATHS;\n\n/**\n * Generate SVG element string for an icon\n */\nexport function createIcon(name: IconName, config: Partial<IconConfig> = {}): string {\n  const { viewBox, width, height, strokeWidth, className } = { ...DEFAULT_CONFIG, ...config };\n  const paths = ICON_PATHS[name];\n  \n  if (!paths) {\n    console.warn(`Icon \"${name}\" not found`);\n    return createIcon('info', config); // Fallback to info icon\n  }\n  \n  const pathElements = Array.isArray(paths) \n    ? paths.map(path => {\n        // Handle different path types\n        if (path.startsWith('M') || path.startsWith('m') || path.startsWith('L') || path.startsWith('path d=')) {\n          const d = path.startsWith('path d=') ? path.slice(8, -1) : path;\n          return `<path d=\"${d}\"/>`;\n        } else if (path.includes('cx') || path.includes('cy') || path.includes('r')) {\n          return `<${path}/>`;\n        } else if (path.includes('width') || path.includes('height') || path.includes('x') || path.includes('y')) {\n          return `<${path}/>`;\n        } else if (path.includes('x1') || path.includes('y1') || path.includes('x2') || path.includes('y2')) {\n          return `<${path}/>`;\n        } else if (path.includes('points')) {\n          return `<${path}/>`;\n        } else {\n          return `<path d=\"${path}\"/>`;\n        }\n      }).join('')\n    : `<path d=\"${paths}\"/>`;\n  \n  return `\n    <svg \n      class=\"${className}\" \n      width=\"${width}\" \n      height=\"${height}\" \n      viewBox=\"${viewBox}\" \n      fill=\"none\" \n      stroke=\"currentColor\" \n      stroke-width=\"${strokeWidth}\"\n    >\n      ${pathElements}\n    </svg>\n  `.trim();\n}\n\n/**\n * Create icon element (HTMLElement)\n */\nexport function createIconElement(name: IconName, config: Partial<IconConfig> = {}): HTMLElement {\n  const div = document.createElement('div');\n  div.innerHTML = createIcon(name, config);\n  return div.firstElementChild as HTMLElement;\n}\n\n/**\n * Set icon on existing element\n */\nexport function setIconHTML(element: HTMLElement, name: IconName, config: Partial<IconConfig> = {}): void {\n  element.innerHTML = createIcon(name, config);\n}\n\n/**\n * Icon size presets for common use cases\n */\nexport const ICON_SIZES = {\n  xs: { width: 14, height: 14 },    // Was 12x12\n  sm: { width: 16, height: 16 },    // Was 14x14  \n  md: { width: 20, height: 20 },    // Was 16x16 - for avatars\n  lg: { width: 24, height: 24 },    // Was 18x18\n  xl: { width: 28, height: 28 }     // Was 20x20\n} as const;;\n\n/**\n * Icon style presets\n */\nexport const ICON_STYLES = {\n  toolbar: { className: 'writerr-toolbar-icon', ...ICON_SIZES.md },\n  action: { className: 'writerr-action-icon', ...ICON_SIZES.md },\n  context: { className: 'writerr-context-action-icon', ...ICON_SIZES.md },\n  send: { className: 'writerr-send-icon', ...ICON_SIZES.md },\n  message: { className: 'writerr-message-icon', ...ICON_SIZES.xl }\n} as const;;\n\nexport type IconStyle = keyof typeof ICON_STYLES;\n\n/**\n * Create icon with predefined style\n */\nexport function createStyledIcon(name: IconName, style: IconStyle): string {\n  return createIcon(name, ICON_STYLES[style]);\n}\n\n/**\n * Quick icon creation helpers\n */\nexport const Icons = {\n  send: (config?: Partial<IconConfig>) => createIcon('send', config),\n  bot: (config?: Partial<IconConfig>) => createIcon('bot', config),\n  user: (config?: Partial<IconConfig>) => createIcon('user', config),\n  copy: (config?: Partial<IconConfig>) => createIcon('copy', config),\n  paintbrush: (config?: Partial<IconConfig>) => createIcon('paintbrush', config),\n  filePlus2: (config?: Partial<IconConfig>) => createIcon('filePlus2', config),\n  plus: (config?: Partial<IconConfig>) => createIcon('plus', config),\n  chevronDown: (config?: Partial<IconConfig>) => createIcon('chevronDown', config),\n  eye: (config?: Partial<IconConfig>) => createIcon('eye', config),\n  loader: (config?: Partial<IconConfig>) => createIcon('loader', config),\n  trash: (config?: Partial<IconConfig>) => createIcon('trash', config),\n  refresh: (config?: Partial<IconConfig>) => createIcon('refresh', config),\n  edit3: (config?: Partial<IconConfig>) => createIcon('edit3', config),\n  x: (config?: Partial<IconConfig>) => createIcon('x', config),\n  info: (config?: Partial<IconConfig>) => createIcon('info', config)\n};", "import { Menu, MenuItem, Component } from 'obsidian';\n\n/**\n * WriterMenu - Unified menu system for Writerr Platform\n * \n * A wrapper around Obsidian's native Menu class providing:\n * - Consistent theming and behavior across all menus\n * - Support for nested hierarchies and separators  \n * - Fluent API for easy menu construction\n * - Proper keyboard navigation and accessibility\n * - Extension points for platform-specific features\n */\n\nexport interface WriterMenuOptions {\n  className?: string;\n  minWidth?: number;\n  maxHeight?: number;\n  style?: 'default' | 'refined' | 'minimal';\n  spacing?: 'compact' | 'comfortable' | 'spacious';\n}\n\nexport interface WriterMenuItem {\n  title: string;\n  icon?: string;\n  disabled?: boolean;\n  checked?: boolean;\n  submenu?: WriterMenuItem[];\n  callback?: () => void;\n  separator?: boolean;\n}\n\nexport class WriterMenu {\n  private menu: Menu;\n  private options: WriterMenuOptions;\n  private currentSelection?: string;\n  private lastShowPosition?: { x: number; y: number };\n\n  constructor(options: WriterMenuOptions = {}) {\n  this.menu = new Menu();\n  this.options = {\n    style: 'refined',\n    spacing: 'comfortable',\n    minWidth: 280,\n    ...options\n  };\n  \n  // Build refined class names\n  const styleClass = `writerr-menu-${this.options.style}`;\n  const spacingClass = `writerr-menu-${this.options.spacing}`;\n  const customClass = this.options.className || '';\n  \n  this.options.className = [styleClass, spacingClass, customClass]\n    .filter(Boolean)\n    .join(' ');\n    \n  // Only hook styling on main menus, not submenus\n  const isSubmenu = customClass.includes('writerr-submenu');\n  if (!isSubmenu) {\n    // Hook into menu show events to apply clean styling\n    const originalShow = this.menu.showAtMouseEvent.bind(this.menu);\n    const originalShowAtPosition = this.menu.showAtPosition.bind(this.menu);\n    \n    this.menu.showAtMouseEvent = (event: MouseEvent) => {\n      const result = originalShow(event);\n      this.applyRefinedStyling();\n      return result;\n    };\n    \n    this.menu.showAtPosition = (position: { x: number; y: number }) => {\n      const result = originalShowAtPosition(position);\n      this.applyRefinedStyling();\n      return result;\n    };\n  }\n}\n  /**\n   * Enhanced debug method to identify actual menu DOM elements\n   */\n  private applyRefinedStyling(): void {\n  // Remove all the crazy JavaScript styling - let CSS snippets handle it\n  console.log('\uD83C\uDFA8 Menu styling removed - using clean defaults');\n}\n\n\n  /**\n   * Add a menu item with optional callback\n   */\n  addItem(title: string, callback?: () => void): WriterMenu {\n    this.menu.addItem((item: MenuItem) => {\n      item.setTitle(title);\n      if (callback) {\n        item.onClick(callback);\n      }\n      \n      // Note: Highlighting will be handled by Obsidian's native menu selection\n    });\n    return this;\n  }\n\n  /**\n   * Add a menu item with an icon\n   */\n  addItemWithIcon(title: string, icon?: string, callback?: () => void): WriterMenu {\n    this.menu.addItem((item: MenuItem) => {\n      item.setTitle(title);\n      if (icon) {\n        item.setIcon(icon);\n      }\n      if (callback) {\n        item.onClick(callback);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Add a checked menu item (for current selections)\n   */\n  addCheckedItem(title: string, checked: boolean = false, callback?: () => void): WriterMenu {\n    this.menu.addItem((item: MenuItem) => {\n      item.setTitle(title);\n      if (checked) {\n        item.setChecked(true);\n      }\n      if (callback) {\n        item.onClick(callback);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Add a submenu with nested items (simplified for now)\n   * Note: Full nested submenus may require a different approach with Obsidian's API\n   */\n  /**\n   * Add a submenu with nested items using Obsidian's native setSubmenu() API\n   */\n  addSubmenu(title: string, builder: (submenu: WriterMenu) => void): WriterMenu {\n  this.menu.addItem((item: MenuItem) => {\n    item.setTitle(title);\n    \n    // Use Obsidian's native submenu API\n    const obsidianSubmenu = item.setSubmenu();\n    \n    // Create WriterMenu wrapper for the submenu\n    const writerSubmenu = new WriterMenu({\n      ...this.options,\n      className: `${this.options.className || ''} writerr-submenu`.trim()\n    });\n    \n    // Replace the wrapper's menu with the actual Obsidian submenu\n    writerSubmenu.menu = obsidianSubmenu;\n    \n    // Build submenu items\n    builder(writerSubmenu);\n    \n    // Fix submenu positioning to not cover parent menu\n    setTimeout(() => {\n      const submenuElement = (writerSubmenu.menu as any).dom;\n      if (submenuElement instanceof HTMLElement) {\n        // Force submenu to appear to the right of parent, not overlapping\n        submenuElement.style.setProperty('position', 'absolute', 'important');\n        submenuElement.style.setProperty('left', '100%', 'important');\n        submenuElement.style.setProperty('top', '0', 'important');\n        submenuElement.style.setProperty('margin-left', '2px', 'important');\n        console.log('\uD83D\uDD27 Fixed submenu positioning to prevent overlap');\n      }\n    }, 0);\n  });\n  \n  return this;\n}\n\n  /**\n   * Add a separator line\n   */\n  addSeparator(): WriterMenu {\n    this.menu.addSeparator();\n    return this;\n  }\n\n  /**\n   * Add a disabled item (for category headers or unavailable options)\n   */\n  addDisabledItem(title: string): WriterMenu {\n    this.menu.addItem((item: MenuItem) => {\n      item.setTitle(title);\n      item.setDisabled(true);\n      // Note: Disabled styling will be handled by Obsidian's native disabled state\n    });\n    return this;\n  }\n\n  /**\n   * Set the currently selected item (will be highlighted)\n   */\n  setCurrentSelection(selection: string): WriterMenu {\n    this.currentSelection = selection;\n    return this;\n  }\n\n  /**\n   * Show menu at mouse cursor position\n   */\n  /**\n   * Show menu at mouse cursor position\n   */\n  showAtMouseEvent(event: MouseEvent): void {\n    this.lastShowPosition = { x: event.clientX, y: event.clientY };\n    this.menu.showAtMouseEvent(event);\n  }\n\n  /**\n   * Show menu at a specific position\n   */\n  /**\n   * Show menu at a specific position\n   */\n  showAtPosition(x: number, y: number): void {\n    this.lastShowPosition = { x, y };\n    this.menu.showAtPosition({ x, y });\n  }\n\n  /**\n   * Show menu relative to an element\n   */\n  showAtElement(element: HTMLElement, options?: {\n    placement?: 'bottom-start' | 'bottom-end' | 'top-start' | 'top-end' | 'right-start' | 'right-end';\n    offset?: { x: number; y: number };\n  }): void {\n    const rect = element.getBoundingClientRect();\n    const placement = options?.placement || 'bottom-start';\n    const offset = options?.offset || { x: 0, y: 0 };\n    \n    let x = rect.left + offset.x;\n    let y = rect.bottom + offset.y;\n    \n    switch (placement) {\n      case 'bottom-start':\n        x = rect.left + offset.x;\n        y = rect.bottom + offset.y;\n        break;\n      case 'bottom-end':\n        x = rect.right + offset.x;\n        y = rect.bottom + offset.y;\n        break;\n      case 'top-start':\n        x = rect.left + offset.x;\n        y = rect.top + offset.y;\n        break;\n      case 'top-end':\n        x = rect.right + offset.x;\n        y = rect.top + offset.y;\n        break;\n      case 'right-start':\n        x = rect.right + offset.x;\n        y = rect.top + offset.y;\n        break;\n      case 'right-end':\n        x = rect.right + offset.x;\n        y = rect.bottom + offset.y;\n        break;\n    }\n    \n    this.menu.showAtPosition({ x, y });\n  }\n\n  /**\n   * Hide the menu\n   */\n  hide(): void {\n    this.menu.hide();\n  }\n\n  /**\n   * Get the underlying Obsidian Menu instance (for advanced usage)\n   */\n  getObsidianMenu(): Menu {\n    return this.menu;\n  }\n\n  /**\n   * Get the current menu position (helper for submenu positioning)\n   */\n  private getMenuPosition(): { x: number; y: number } | null {\n    return this.lastShowPosition || null;\n  }\n\n  /**\n   * Static helper to create a menu from a configuration object\n   */\n  static fromConfig(items: WriterMenuItem[], options?: WriterMenuOptions): WriterMenu {\n    const menu = new WriterMenu(options);\n    \n    const buildItems = (menuItems: WriterMenuItem[], targetMenu: WriterMenu) => {\n      for (const item of menuItems) {\n        if (item.separator) {\n          targetMenu.addSeparator();\n        } else if (item.submenu) {\n          targetMenu.addSubmenu(item.title, (submenu) => {\n            buildItems(item.submenu!, submenu);\n          });\n        } else if (item.disabled) {\n          targetMenu.addDisabledItem(item.title);\n        } else if (item.icon) {\n          targetMenu.addItemWithIcon(item.title, item.icon, item.callback);\n        } else {\n          targetMenu.addItem(item.title, item.callback);\n        }\n      }\n    };\n    \n    buildItems(items, menu);\n    return menu;\n  }\n}\n\n/**\n * Factory functions for common menu types\n */\nexport class WriterMenuFactory {\n  \n  /**\n   * Create a model selection menu with Provider \u2192 Family \u2192 Model hierarchy\n   */\n  /**\n   * Create a model selection menu with Provider \u2192 Family \u2192 Model hierarchy\n   */\n  static createModelMenu(\n    providers: Record<string, Record<string, string[]>>,\n    currentSelection?: string,\n    onSelect?: (provider: string, model: string) => void\n  ): WriterMenu {\n    const menu = new WriterMenu({ \n      style: 'refined',\n      spacing: 'comfortable',\n      className: 'writerr-model-menu'\n    });\n    \n    if (currentSelection) {\n      menu.setCurrentSelection(currentSelection);\n    }\n    \n    for (const [providerName, families] of Object.entries(providers)) {\n      menu.addSubmenu(providerName, (providerSubmenu) => {\n        for (const [familyName, models] of Object.entries(families)) {\n          providerSubmenu.addSubmenu(`${familyName}`, (modelSubmenu) => {\n            models.forEach(model => {\n              const isSelected = currentSelection === `${providerName}:${model}`;\n              modelSubmenu.addCheckedItem(model, isSelected, () => {\n                onSelect?.(providerName, model);\n              });\n            });\n          });\n        }\n      });\n    }\n    \n    return menu;\n  }\n\n  /**\n   * Create a simple prompt selection menu\n   */\n  /**\n   * Create a simple prompt selection menu\n   */\n  static createPromptMenu(\n    prompts: { name: string; path: string; description?: string }[],\n    currentSelection?: string,\n    onSelect?: (path: string) => void\n  ): WriterMenu {\n    const menu = new WriterMenu({ \n      style: 'refined',\n      spacing: 'comfortable',\n      className: 'writerr-prompt-menu'\n    });\n    \n    if (currentSelection) {\n      menu.setCurrentSelection(currentSelection);\n    }\n    \n    prompts.forEach(prompt => {\n      const isSelected = currentSelection === prompt.path;\n      menu.addCheckedItem(prompt.name, isSelected, () => {\n        onSelect?.(prompt.path);\n      });\n    });\n    \n    return menu;\n  }\n}", "import { BaseComponent } from './BaseComponent';\nimport { ComponentOptions, HeaderEvents } from './types';\n\nimport { WriterMenu } from './menus/WriterMenu';\n\ninterface ChatHeaderOptions extends ComponentOptions {\n  events: HeaderEvents;\n}\n\nexport class ChatHeader extends BaseComponent {\n  private events: HeaderEvents;\n  private modeButton: HTMLElement;\n  private statusIndicator: HTMLElement;\n  private currentMode: string = 'chat';\n\n  constructor(options: ChatHeaderOptions) {\n    super(options);\n    this.events = options.events;\n  }\n\n  render(): void {\n    this.createHeader();\n    this.createLeftSection();\n    this.createRightSection();\n  }\n\n  private createHeader(): void {\n    this.container.style.cssText = `\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 16px;\n      border-bottom: 1px solid var(--background-modifier-border);\n      height: 60px;\n      background: var(--background-primary);\n    `;\n  }\n\n  private createLeftSection(): void {\n    const leftContainer = this.createElement('div', { cls: 'writerr-chat-header-left' });\n\n    // Create the new WriterMenu mode button (replacing old select)\n    this.createNewModeButton(leftContainer);\n  }\n\n  private createRightSection(): void {\n    const rightContainer = this.createElement('div', { cls: 'chat-header-controls' });\n\n    this.createHistoryButton(rightContainer);\n    this.createSettingsButton(rightContainer);\n    // Status indicator moved to bottom toolbar\n  }\n\n  private createHistoryButton(parent: HTMLElement): void {\n    const historyButton = parent.createEl('button', { cls: 'chat-control-button' });\n    historyButton.innerHTML = `\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\"/>\n        <path d=\"M3 3v5h5\"/>\n        <path d=\"M12 7v5l4 2\"/>\n      </svg>\n    `;\n    historyButton.onclick = (e) => this.showHistoryMenu(e);\n\n    // Add unified tooltip\n    this.addTooltip(historyButton, 'Chat History');\n\n    this.styleControlButton(historyButton);\n  }\n\n  private createSettingsButton(parent: HTMLElement): void {\n    const settingsButton = parent.createEl('button', { cls: 'chat-control-button' });\n    settingsButton.innerHTML = `\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n      </svg>\n    `;\n    settingsButton.onclick = () => this.events.onSettingsClick();\n\n    // Add unified tooltip\n    this.addTooltip(settingsButton, 'Chat Settings');\n\n    this.styleControlButton(settingsButton);\n  }\n\n  private createStatusIndicator(parent: HTMLElement): void {\n    this.statusIndicator = parent.createEl('div', { cls: 'chat-status-indicator' });\n    this.updateStatusIndicator();\n  }\n\n  private styleControlButton(button: HTMLButtonElement): void {\n    // No inline styles needed - CSS class handles everything\n    \n    // Update SVG icons to be larger (18px instead of 16px)\n    const svg = button.querySelector('svg');\n    if (svg) {\n      svg.setAttribute('width', '18');\n      svg.setAttribute('height', '18');\n    }\n\n    // Add tooltip positioning style to appear above with VERY high z-index\n    button.addEventListener('mouseenter', () => {\n      const tooltip = button.getAttribute('title');\n      if (tooltip) {\n        button.style.position = 'relative';\n        button.setAttribute('data-tooltip', tooltip);\n        button.removeAttribute('title');\n        \n        // Add tooltip styles if not already added - with EXTREMELY high z-index\n        if (!document.querySelector('#header-tooltip-styles')) {\n          const style = document.createElement('style');\n          style.id = 'header-tooltip-styles';\n          style.textContent = `\n            [data-tooltip]:hover::before {\n              content: attr(data-tooltip) !important;\n              position: absolute !important;\n              bottom: calc(100% + 8px) !important;\n              left: 50% !important;\n              transform: translateX(-50%) !important;\n              background: var(--background-primary) !important;\n              color: var(--text-normal) !important;\n              border: 1px solid var(--background-modifier-border) !important;\n              border-radius: 4px !important;\n              padding: 4px 8px !important;\n              font-size: 11px !important;\n              white-space: nowrap !important;\n              z-index: 9999999 !important;\n              box-shadow: 0 2px 8px rgba(0,0,0,0.3) !important;\n              pointer-events: none !important;\n            }\n          `;\n          document.head.appendChild(style);\n        }\n      }\n    });\n  }\n\n\n  public updateStatusIndicator(): void {\n    if (!this.statusIndicator) return;\n\n    // Check Editorial Engine availability\n    const hasEditorialEngine = !!window.Writerr?.editorial;\n    const hasTrackEdits = !!window.WriterrlAPI?.trackEdits;\n    \n    // Track previous status to detect changes\n    const previousStatus = this.statusIndicator.getAttribute('data-status');\n    \n    let status = 'ready';\n    let color = 'var(--color-green)';\n    \n    if (!hasEditorialEngine && !hasTrackEdits) {\n      status = 'limited';\n      color = 'var(--color-yellow)';\n    } else if (!hasEditorialEngine || !hasTrackEdits) {\n      status = 'partial';\n      color = 'var(--color-orange)';\n    }\n    \n    this.statusIndicator.style.cssText = `\n      width: 8px;\n      height: 8px;\n      border-radius: 50%;\n      background: ${color};\n      transition: background-color 0.3s ease;\n    `;\n    \n    this.statusIndicator.setAttribute('title', \n      status === 'ready' ? 'All systems ready' :\n      status === 'partial' ? 'Some features unavailable' :\n      'Limited functionality - Editorial Engine and Track Edits not available'\n    );\n    \n    this.statusIndicator.setAttribute('data-status', status);\n    \n    // Refresh mode options if Editorial Engine status changed\n    if (previousStatus !== status && hasEditorialEngine) {\n      this.refreshModeOptions();\n    }\n  }\n\n  public getSelectedMode(): string {\n    return this.currentMode;\n  }\n\n  public setMode(mode: string): void {\n    this.currentMode = mode;\n    if (this.modeButton) {\n      const textNode = Array.from(this.modeButton.childNodes).find(node => node.nodeType === Node.TEXT_NODE);\n      if (textNode) {\n        textNode.textContent = this.getCurrentModeDisplayName();\n      }\n    }\n  }\n\n  public refreshModeOptions(): void {\n    // Update the mode button text with current mode\n    if (this.modeButton) {\n      const textNode = Array.from(this.modeButton.childNodes).find(node => node.nodeType === Node.TEXT_NODE);\n      if (textNode) {\n        textNode.textContent = this.getCurrentModeDisplayName();\n      }\n    }\n  }\n\n\n  private showHistoryMenu(event: MouseEvent): void {\n    const historyMenu = new WriterMenu();\n    const sessions = this.plugin.getChatSessions();\n    \n    if (sessions.length === 0) {\n      historyMenu.addDisabledItem('No chat sessions yet');\n      historyMenu.addSeparator();\n      historyMenu.addItem('Start New Session', () => {\n        this.events.onNewSession?.();\n      });\n    } else {\n      // Add current sessions\n      sessions.forEach(session => {\n        const sessionTitle = session.title || `Session ${sessions.indexOf(session) + 1}`;\n        const messageCount = session.messages?.length || 0;\n        const isCurrentSession = this.plugin.currentSession?.id === session.id;\n        \n        // Format: \"Session Title \u2022 5 messages\"\n        const displayTitle = `${sessionTitle}${messageCount > 0 ? ` \u2022 ${messageCount} msg${messageCount !== 1 ? 's' : ''}` : ''}`;\n        \n        if (isCurrentSession) {\n          historyMenu.addCheckedItem(displayTitle, true, () => {\n            // Current session - just close menu\n          });\n        } else {\n          historyMenu.addItem(displayTitle, () => {\n            this.events.onSessionSelect?.(session.id);\n          });\n        }\n      });\n      \n      historyMenu.addSeparator();\n      historyMenu.addItem('New Session', () => {\n        this.events.onNewSession?.();\n      });\n    }\n    \n    historyMenu.showAtMouseEvent(event);\n  }\n\n  private getTimeAgo(date: Date): string {\n    const now = new Date();\n    const diffInMs = now.getTime() - date.getTime();\n    const diffInMinutes = Math.floor(diffInMs / 60000);\n    \n    if (diffInMinutes < 1) return 'now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m`;\n    \n    const diffInHours = Math.floor(diffInMinutes / 60);\n    if (diffInHours < 24) return `${diffInHours}h`;\n    \n    const diffInDays = Math.floor(diffInHours / 24);\n    if (diffInDays < 7) return `${diffInDays}d`;\n    \n    return date.toLocaleDateString();\n  }\n\n  private createNewModeButton(parent: HTMLElement): void {\n    const modeButton = parent.createEl('button', { cls: 'writerr-mode-button' });\n    modeButton.textContent = this.getCurrentModeDisplayName();\n    modeButton.style.cssText = `\n      background: transparent;\n      border: none;\n      padding: 4px 8px;\n      color: var(--text-normal);\n      cursor: pointer;\n      font-size: 18px;\n      font-weight: 400;\n      display: flex;\n      align-items: center;\n      gap: 6px;\n      transition: color 0.2s ease;\n      min-width: auto;\n      justify-content: flex-start;\n      box-shadow: none;\n    `;\n\n    // Add chevron down icon\n    const chevron = modeButton.createEl('span');\n    chevron.innerHTML = `\n      <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <polyline points=\"6,9 12,15 18,9\"/>\n      </svg>\n    `;\n\n    modeButton.onclick = (e) => this.showModeMenu(e, modeButton);\n\n    // Store reference for updating (now the main mode selector)\n    this.modeButton = modeButton;\n\n    // Simple hover effect - just color change\n    modeButton.addEventListener('mouseenter', () => {\n      modeButton.style.color = 'var(--text-accent)';\n    });\n\n    modeButton.addEventListener('mouseleave', () => {\n      modeButton.style.color = 'var(--text-normal)';\n    });\n  }\n\n  private getCurrentModeDisplayName(): string {\n    if (this.currentMode === 'chat') {\n      return 'Chat Mode';\n    }\n\n    // Try to get the display name from Editorial Engine\n    if (window.Writerr?.editorial && this.currentMode !== 'editorial-loading' && this.currentMode !== 'editorial-unavailable') {\n      try {\n        const modes = window.Writerr.editorial.getEnabledModes();\n        const mode = modes.find(m => m.id === this.currentMode);\n        return mode?.name || this.currentMode;\n      } catch (error) {\n        console.warn('Failed to get mode display name:', error);\n      }\n    }\n\n    return this.currentMode;\n  }\n\n  private showModeMenu(event: MouseEvent, button: HTMLElement): void {\n    const modeMenu = new WriterMenu();\n\n    // Always add Chat Mode first\n    if (this.currentMode === 'chat') {\n      modeMenu.addCheckedItem('Chat Mode', true, () => {\n        this.selectMode('chat', 'Chat Mode', button);\n      });\n    } else {\n      modeMenu.addItem('Chat Mode', () => {\n        this.selectMode('chat', 'Chat Mode', button);\n      });\n    }\n\n    // Add Editorial Engine modes if available\n    if (window.Writerr?.editorial) {\n      try {\n        const modes = window.Writerr.editorial.getEnabledModes();\n        \n        if (modes.length > 0) {\n          modeMenu.addSeparator();\n          \n          modes.forEach(mode => {\n            if (this.currentMode === mode.id) {\n              modeMenu.addCheckedItem(mode.name, true, () => {\n                this.selectMode(mode.id, mode.name, button);\n              });\n            } else {\n              modeMenu.addItem(mode.name, () => {\n                this.selectMode(mode.id, mode.name, button);\n              });\n            }\n          });\n        }\n      } catch (error) {\n        console.warn('Failed to load Editorial Engine modes for menu:', error);\n        modeMenu.addSeparator();\n        modeMenu.addDisabledItem('Editorial Engine Unavailable');\n      }\n    } else {\n      modeMenu.addSeparator();\n      modeMenu.addDisabledItem('Editorial Engine Loading...');\n    }\n\n    modeMenu.showAtMouseEvent(event);\n  }\n\n  private selectMode(modeId: string, displayName: string, button: HTMLElement): void {\n    // Update current mode\n    this.currentMode = modeId;\n    \n    // Update the button text\n    const textNode = Array.from(button.childNodes).find(node => node.nodeType === Node.TEXT_NODE);\n    if (textNode) {\n      textNode.textContent = displayName;\n    }\n\n    // Trigger the change event\n    this.events.onModeChange(modeId);\n  }\n}", "import { BaseComponent } from './BaseComponent';\nimport { ComponentOptions, ContextAreaEvents, DocumentContext } from './types';\nimport { Icons, ICON_STYLES } from '../utils/icons';\nimport { WriterMenu } from './menus/WriterMenu';\n\ninterface ContextAreaOptions extends ComponentOptions {\n  events: ContextAreaEvents;\n}\n\nexport class ContextArea extends BaseComponent {\n  private events: ContextAreaEvents;\n  private documentsContainer: HTMLElement;\n  private contextHeader: HTMLElement;\n  private clearButton: HTMLElement | null = null; // Add reference to clear button\n  private isCollapsed: boolean = false;\n  private documents: DocumentContext[] = [];\n\n  constructor(options: ContextAreaOptions) {\n    super(options);\n    this.events = options.events;\n    this.isCollapsed = true; // Default to closed\n  }\n\n  render(): void {\n    this.createContextArea();\n    this.createHeader();\n    this.createDocumentsContainer();\n    this.createFooter();\n    \n    // Start empty and collapsed - no demo documents\n  }\n\n  private createContextArea(): void {\n    this.container.style.cssText = `\n      transition: all 0.3s ease;\n      overflow: visible;\n      border-top: 1px solid var(--background-modifier-border);\n      margin: 0;\n      width: 100%;\n      max-width: 100%;\n      box-sizing: border-box;\n      position: relative;\n    `;\n    this.updateContextAreaStyling();\n  }\n\n  private updateContextAreaStyling(): void {\n    // Never show background - always transparent\n    this.container.style.background = 'transparent';\n    \n    if (this.isCollapsed) {\n      this.container.style.borderTop = 'none';\n    } else {\n      this.container.style.borderTop = '1px solid var(--background-modifier-border)';\n    }\n  }\n\n  private createHeader(): void {\n    this.contextHeader = this.createElement('div', { cls: 'context-header' });\n    this.contextHeader.style.cssText = `\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 8px 16px;\n    `;\n\n    // LEFT SECTION - Toggle, label, and count badge\n    const leftSection = this.contextHeader.createEl('div');\n    leftSection.style.cssText = 'display: flex; align-items: center; gap: 8px; flex: 1;';\n\n    // Collapse/expand icon using centralized system\n    const collapseIcon = leftSection.createEl('div', { cls: 'context-collapse-icon' });\n    collapseIcon.innerHTML = Icons.chevronDown({ width: 14, height: 14 });\n    collapseIcon.style.cssText = `\n      transition: transform 0.3s ease;\n      color: var(--text-muted);\n      display: flex;\n      align-items: center;\n      transform: ${this.isCollapsed ? 'rotate(-90deg)' : 'rotate(0deg)'};\n    `;\n\n    const contextLabel = leftSection.createEl('span', { text: 'Context' });\n    contextLabel.style.cssText = `\n      font-size: 12px;\n      color: var(--text-muted);\n      font-weight: 500;\n    `;\n\n    // Document count badge\n    const countBadge = leftSection.createEl('span', { cls: 'context-count-badge' });\n    this.updateCountBadge(countBadge);\n\n    // RIGHT SECTION - Add button only\n    const rightSection = this.contextHeader.createEl('div');\n    rightSection.style.cssText = 'display: flex; align-items: center; flex-shrink: 0;';\n\n    // Add document button using PLUS icon\n    const addDocButton = rightSection.createEl('button', { cls: 'context-add-button' });\n    addDocButton.innerHTML = Icons.plus({ width: 16, height: 16 });\n    addDocButton.onclick = (e) => {\n      e.stopPropagation();\n      this.showDirectoryMenu(e as MouseEvent);\n    };\n    this.addTooltip(addDocButton, 'Add document to context');\n\n    // Header click to toggle collapse (but not on button)\n    this.contextHeader.onclick = (e) => {\n      if (e.target !== addDocButton && !addDocButton.contains(e.target as Node)) {\n        this.toggleCollapse();\n      }\n    };\n\n    this.addHoverEffect(this.contextHeader, {\n      'background-color': 'var(--background-modifier-hover)'\n    });\n  }\n\n  private createDocumentsContainer(): void {\n    this.documentsContainer = this.createElement('div', {\n      cls: 'context-documents'\n    });\n\n    // Use CSS Grid with normal padding (no clear button here)\n    this.documentsContainer.style.cssText = `\n      padding: 0 16px 12px 16px;\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(120px, 180px));\n      gap: 8px;\n      width: 100%;\n      transition: all 0.3s ease;\n      position: relative;\n      height: ${this.isCollapsed ? '0' : 'auto'};\n      overflow: ${this.isCollapsed ? 'hidden' : 'visible'};\n      box-sizing: border-box;\n    `;\n\n    if (this.isCollapsed) {\n      this.documentsContainer.style.padding = '0 16px';\n    }\n  }\n\n  private createFooter(): void {\n    const footer = this.createElement('div', { cls: 'context-footer' });\n    footer.style.cssText = `\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n      padding: 8px 16px;\n      background: transparent;\n      border: none;\n      transition: all 0.3s ease;\n      height: ${this.isCollapsed || this.documents.length === 0 ? '0' : 'auto'};\n      overflow: ${this.isCollapsed || this.documents.length === 0 ? 'hidden' : 'visible'};\n      opacity: ${this.isCollapsed || this.documents.length === 0 ? '0' : '1'};\n      min-height: ${this.isCollapsed || this.documents.length === 0 ? '0' : '36px'};\n    `;\n\n    // Create clear button in footer\n    this.createClearButton(footer);\n  }\n\n  private createClearButton(container: HTMLElement): void {\n    // Create clear button in the footer\n    this.clearButton = container.createEl('button', { cls: 'writerr-context-action' });\n    this.clearButton.onclick = (e) => {\n      e.stopPropagation();\n      this.clearAllDocuments();\n    };\n\n    this.clearButton.style.cssText = `\n      background: transparent;\n      border: none;\n      cursor: pointer;\n      color: var(--text-muted);\n      padding: 6px;\n      border-radius: 6px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: all 0.2s ease;\n      width: 28px;\n      height: 28px;\n    `;\n\n    // Add icon only (no text)\n    this.clearButton.innerHTML = Icons.paintbrush({ width: 18, height: 18 });\n\n    this.addTooltip(this.clearButton, 'Clear all context');\n    \n    this.addHoverEffect(this.clearButton, {\n      'background-color': 'var(--background-modifier-hover)',\n      'color': 'var(--text-normal)'\n    });\n    \n    // Set initial state\n    this.updateClearButtonState();\n  }\n\n  private styleActionButton(button: HTMLButtonElement): void {\n    button.style.cssText = `\n      background: transparent;\n      border: none;\n      cursor: pointer;\n      color: var(--text-muted);\n      padding: 4px;\n      border-radius: 4px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: all 0.2s ease;\n    `;\n\n    this.addHoverEffect(button, {\n      'background-color': 'var(--background-modifier-hover)',\n      'color': 'var(--text-normal)'\n    });\n  }\n\n  public addDocument(doc: DocumentContext): void {\n    // Check if document already exists\n    if (this.documents.some(d => d.path === doc.path)) return;\n\n    this.documents.push(doc);\n    this.createDocumentChip(doc);\n    this.updateCountBadge();\n    this.events.onDocumentAdd(doc);\n\n    // Update clear button state\n    this.updateClearButtonState();\n\n    // Removed auto-expand - let user control collapse state manually\n  }\n\n  public removeDocumentByPath(doc: DocumentContext): void {\n    // Find the document chip element\n    const chipElements = Array.from(this.documentsContainer.children)\n      .filter(child => child !== this.clearButton) as HTMLElement[];\n    \n    // Find the chip that corresponds to this document\n    const chipEl = chipElements.find(chip => {\n      const docName = chip.querySelector('span:nth-child(2)')?.textContent;\n      return docName === doc.name;\n    });\n    \n    if (chipEl) {\n      this.removeDocument(doc, chipEl);\n    } else {\n      // Fallback: just remove from array if chip not found\n      this.documents = this.documents.filter(d => d.path !== doc.path);\n      this.updateCountBadge();\n      this.updateClearButtonState();\n      this.events.onDocumentRemove(doc);\n    }\n  }\n\n  private createDocumentChip(doc: DocumentContext): void {\n    const docChip = this.documentsContainer.createEl('div', { cls: 'context-document-chip' });\n    docChip.style.cssText = `\n      display: flex;\n      align-items: center;\n      gap: 6px;\n      padding: 6px 10px;\n      background: var(--background-primary);\n      border: 1px solid var(--background-modifier-border);\n      border-radius: 16px;\n      font-size: 12px;\n      color: var(--text-normal);\n      cursor: pointer;\n      transition: all 0.2s ease;\n      animation: slideIn 0.3s ease;\n      box-sizing: border-box;\n      width: 100%;\n      min-height: 32px;\n    `;\n\n    // Add slideIn animation\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes slideIn {\n        from {\n          opacity: 0;\n          transform: translateY(-10px) scale(0.9);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0) scale(1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n\n    const docIcon = docChip.createEl('span');\n    docIcon.innerHTML = Icons.filePlus2({ width: 12, height: 12 });\n    docIcon.style.cssText = 'color: var(--text-muted); flex-shrink: 0;';\n\n    const docName = docChip.createEl('span', { text: doc.name });\n    docName.style.cssText = `\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      flex: 1;\n      min-width: 0;\n    `;\n\n    const removeBtn = docChip.createEl('button');\n    removeBtn.innerHTML = Icons.x({ width: 12, height: 12 });\n    removeBtn.style.cssText = `\n      background: none;\n      border: none;\n      cursor: pointer;\n      color: var(--text-muted);\n      padding: 2px;\n      width: 16px;\n      height: 16px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: 50%;\n      flex-shrink: 0;\n      transition: all 0.2s ease;\n    `;\n\n    // Document chip interactions\n    docChip.onclick = (e) => {\n      if (e.target !== removeBtn && !removeBtn.contains(e.target as Node)) {\n        this.events.onDocumentOpen(doc);\n      }\n    };\n\n    removeBtn.onclick = (e) => {\n      e.stopPropagation();\n      this.removeDocument(doc, docChip);\n    };\n\n    // Hover effects - lighter/more opaque background\n    this.addHoverEffect(docChip, {\n      'background-color': 'var(--background-secondary)',\n      'transform': 'translateY(-1px)',\n      'box-shadow': '0 2px 8px rgba(0, 0, 0, 0.08)',\n      'border-color': 'var(--background-modifier-border-hover)'\n    });\n\n    this.addHoverEffect(removeBtn, {\n      'background-color': 'var(--background-modifier-error)',\n      'color': 'var(--text-on-accent)'\n    });\n  }\n\n  private removeDocument(doc: DocumentContext, chipEl: HTMLElement): void {\n    // Remove from documents array\n    this.documents = this.documents.filter(d => d.path !== doc.path);\n    \n    // Animate out and remove\n    chipEl.style.animation = 'slideOut 0.2s ease forwards';\n    \n    const slideOutStyle = document.createElement('style');\n    slideOutStyle.textContent = `\n      @keyframes slideOut {\n        from {\n          opacity: 1;\n          transform: translateY(0) scale(1);\n        }\n        to {\n          opacity: 0;\n          transform: translateY(-10px) scale(0.8);\n        }\n      }\n    `;\n    document.head.appendChild(slideOutStyle);\n\n    setTimeout(() => {\n      chipEl.remove();\n      document.head.removeChild(slideOutStyle);\n    }, 200);\n\n    this.updateCountBadge();\n    this.updateClearButtonState();\n    this.events.onDocumentRemove(doc);\n  }\n\n  private clearAllDocuments(): void {\n    // Only remove document chips, not the clear button itself\n    const chips = Array.from(this.documentsContainer.children)\n      .filter(child => child !== this.clearButton);\n    \n    chips.forEach((chip, index) => {\n      setTimeout(() => {\n        chip.remove();\n      }, index * 50);\n    });\n\n    this.documents.forEach(doc => {\n      this.events.onDocumentRemove(doc);\n    });\n\n    this.documents = [];\n    this.updateCountBadge();\n    \n    // Gray out clear button when no documents remain\n    this.updateClearButtonState();\n  }\n\n  private updateCountBadge(badgeEl?: HTMLElement): void {\n    const badge = badgeEl || this.container.querySelector('.context-count-badge') as HTMLElement;\n    if (!badge) {\n      console.warn('Context count badge element not found');\n      return;\n    }\n\n    const count = this.documents.length;\n    console.log(`Updating context count badge: ${count} documents`);\n    \n    if (count > 0) {\n      badge.textContent = count.toString();\n      badge.style.cssText = `\n        display: inline-block !important;\n        background: var(--interactive-accent);\n        color: white !important;\n        font-size: 10px;\n        padding: 2px 6px;\n        border-radius: 8px;\n        font-weight: 500;\n        min-width: 16px;\n        text-align: center;\n      `;\n    } else {\n      badge.textContent = '';\n      badge.style.cssText = 'display: none;';\n    }\n  }\n\n  private updateClearButtonState(): void {\n    console.log('updateClearButtonState called, documents:', this.documents.length);\n    console.log('clearButton exists:', !!this.clearButton);\n    \n    if (!this.clearButton) return;\n    \n    const hasDocuments = this.documents.length > 0;\n    const footer = this.container.querySelector('.context-footer') as HTMLElement;\n    \n    if (hasDocuments) {\n      // Enable button - normal appearance\n      console.log('Enabling clear button');\n      this.clearButton.style.opacity = '1';\n      this.clearButton.style.cursor = 'pointer';\n      this.clearButton.style.pointerEvents = 'auto';\n      \n      // Show footer\n      if (footer && !this.isCollapsed) {\n        footer.style.height = 'auto';\n        footer.style.minHeight = '36px';\n        footer.style.opacity = '1';\n        footer.style.overflow = 'visible';\n      }\n    } else {\n      // Disable button - grayed out\n      console.log('Disabling clear button (gray out)');\n      this.clearButton.style.opacity = '0.5';\n      this.clearButton.style.cursor = 'not-allowed';\n      this.clearButton.style.pointerEvents = 'none';\n      \n      // Hide footer\n      if (footer) {\n        footer.style.height = '0';\n        footer.style.minHeight = '0';\n        footer.style.opacity = '0';\n        footer.style.overflow = 'hidden';\n      }\n    }\n  }\n\n  private toggleCollapse(): void {\n    console.log('toggleCollapse called, isCollapsed:', this.isCollapsed, '-> will be:', !this.isCollapsed);\n    \n    this.isCollapsed = !this.isCollapsed;\n    \n    const collapseIcon = this.contextHeader.querySelector('.context-collapse-icon') as HTMLElement;\n    const footer = this.container.querySelector('.context-footer') as HTMLElement;\n    \n    if (this.isCollapsed) {\n      console.log('Collapsing context area - hiding footer');\n      this.documentsContainer.style.height = '0';\n      this.documentsContainer.style.padding = '0 16px';\n      this.documentsContainer.style.overflow = 'hidden';\n      this.documentsContainer.style.opacity = '0';\n      collapseIcon.style.transform = 'rotate(-90deg)';\n      if (footer) {\n        footer.style.height = '0';\n        footer.style.overflow = 'hidden';\n        footer.style.opacity = '0';\n      }\n    } else {\n      console.log('Expanding context area - showing footer');\n      this.documentsContainer.style.height = 'auto';\n      this.documentsContainer.style.padding = '0 16px 12px 16px';\n      this.documentsContainer.style.overflow = 'visible';\n      this.documentsContainer.style.opacity = '1';\n      collapseIcon.style.transform = 'rotate(0deg)';\n      if (footer) {\n        footer.style.height = 'auto';\n        footer.style.overflow = 'visible';\n        footer.style.opacity = '1';\n      }\n    }\n\n    // Update background/border styling based on collapsed state\n    this.updateContextAreaStyling();\n  }\n\n  private showDocumentPicker(): void {\n    // Create document picker modal\n    const overlay = this.container.createEl('div', { cls: 'document-picker-overlay' });\n    overlay.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: rgba(0, 0, 0, 0.5);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 1000;\n      backdrop-filter: blur(4px);\n    `;\n\n    const modal = overlay.createEl('div', { cls: 'document-picker-modal' });\n    modal.style.cssText = `\n      background: var(--background-primary);\n      border: 1px solid var(--background-modifier-border);\n      border-radius: 12px;\n      padding: 24px;\n      min-width: 400px;\n      max-height: 500px;\n      overflow-y: auto;\n      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);\n      animation: modalSlideIn 0.3s ease;\n    `;\n\n    // Add modal animation\n    const modalStyle = document.createElement('style');\n    modalStyle.textContent = `\n      @keyframes modalSlideIn {\n        from {\n          opacity: 0;\n          transform: translateY(-20px) scale(0.95);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0) scale(1);\n        }\n      }\n    `;\n    document.head.appendChild(modalStyle);\n\n    this.createDocumentPickerContent(modal, overlay, modalStyle);\n\n    overlay.onclick = (e) => {\n      if (e.target === overlay) {\n        overlay.remove();\n        document.head.removeChild(modalStyle);\n      }\n    };\n  }\n\n  private showDirectoryMenu(event: MouseEvent): void {\n    try {\n      console.log('\uD83D\uDD0D Building directory menu for file selection');\n      \n      // Build directory structure from vault files\n      const directoryMap = this.buildDirectoryMap();\n      \n      if (Object.keys(directoryMap).length === 0) {\n        console.log('No directories found in vault');\n        return;\n      }\n\n      // Create WriterMenu with Directory \u2192 Subdirectory \u2192 File hierarchy\n      const menu = this.createDirectoryMenu(directoryMap);\n      \n      menu.showAtMouseEvent(event);\n    } catch (error) {\n      console.error('WriterMenu: Error showing directory menu:', error);\n      // Fallback to original modal if WriterMenu fails\n      this.showDocumentPicker();\n    }\n  }\n\n  private buildDirectoryMap(): Record<string, string[]> {\n    const directoryMap: Record<string, string[]> = {};\n    \n    // Get all files from vault (not just markdown)\n    console.log('\uD83C\uDFDB\uFE0F Vault info:', this.plugin.app.vault.getName());\n    console.log('\uD83C\uDFDB\uFE0F Vault adapter:', this.plugin.app.vault.adapter.constructor.name);\n    \n    const allFiles = this.plugin.app.vault.getAllLoadedFiles();\n    \n    // Define supported file extensions\n    const supportedExtensions = [\n      // Documents\n      '.md', '.txt', '.pdf', '.doc', '.docx', '.rtf', '.odt',\n      // Spreadsheets  \n      '.xls', '.xlsx', '.csv',\n      // Code files\n      '.js', '.ts', '.json', '.html', '.css', '.scss', '.less',\n      '.py', '.java', '.cpp', '.c', '.h', '.php', '.rb', '.go',\n      '.rs', '.swift', '.kt', '.scala', '.sh', '.bash', '.zsh',\n      '.xml', '.yaml', '.yml', '.toml', '.ini', '.env',\n      // Creative writing\n      '.highland', '.fountain', '.celtx',\n      // Other\n      '.log', '.config'\n    ];\n    \n    // Filter for supported file types (exclude directories)\n    const supportedFiles = allFiles.filter(file => {\n      // Skip directories (they don't have extensions)\n      if (!file.path.includes('.')) return false;\n      \n      const extension = '.' + file.path.split('.').pop()?.toLowerCase();\n      return supportedExtensions.includes(extension);\n    });\n    \n    console.log(`\uD83D\uDD0D Processing ${supportedFiles.length} supported files from ${allFiles.length} total files`);\n    console.log('\uD83D\uDCCB Supported extensions:', supportedExtensions);\n    console.log('\uD83D\uDCCB Sample files:', supportedFiles.slice(0, 10).map(f => f.path));\n    \n    for (const file of supportedFiles) {\n      const pathParts = file.path.split('/');\n      console.log(`   Processing: ${file.path} -> ${pathParts.length} parts:`, pathParts);\n      \n      if (pathParts.length === 1) {\n        // Root level file\n        if (!directoryMap['Root']) {\n          directoryMap['Root'] = [];\n        }\n        directoryMap['Root'].push(file.path);\n        console.log(`     Added to Root: ${file.path}`);\n      } else {\n        // File in directory - use the full directory path as the key\n        const directoryPath = pathParts.slice(0, -1).join('/');\n        \n        if (!directoryMap[directoryPath]) {\n          directoryMap[directoryPath] = [];\n          console.log(`     Created new directory: ${directoryPath}`);\n        }\n        \n        directoryMap[directoryPath].push(file.path);\n        console.log(`     Added to ${directoryPath}: ${file.path}`);\n      }\n    }\n    \n    console.log('\uD83D\uDDC2\uFE0F FINAL directory map with', Object.keys(directoryMap).length, 'directories');\n    console.log('\uD83D\uDCC1 ALL Directories found:');\n    Object.keys(directoryMap).forEach(dir => {\n      console.log(`   ${dir}: ${directoryMap[dir].length} files`);\n      console.log(`      Files:`, directoryMap[dir].slice(0, 3), directoryMap[dir].length > 3 ? '...' : '');\n    });\n    return directoryMap;\n  }\n\n\n  private createDirectoryMenu(directoryMap: Record<string, string[]>): WriterMenu {\n    const menu = new WriterMenu({\n      style: 'refined',\n      spacing: 'comfortable',\n      className: 'writerr-directory-menu'\n    });\n\n    console.log(`\uD83C\uDFA8 Creating menu with ${Object.keys(directoryMap).length} directories`);\n\n    // Build Directory \u2192 File hierarchy (like Provider \u2192 Model)\n    for (const [directoryName, files] of Object.entries(directoryMap)) {\n      console.log(`   \uD83C\uDFA8 Adding directory submenu: ${directoryName} (${files.length} files)`);\n      \n      menu.addSubmenu(directoryName, (fileSubmenu) => {\n        files.forEach(filePath => {\n          const fileName = filePath.split('/').pop() || filePath;\n          \n          console.log(`      \uD83D\uDCC4 Adding file item: ${fileName} -> ${filePath}`);\n          \n          fileSubmenu.addItem(fileName, async () => {\n            console.log(`\uD83D\uDCC4 Selected file: ${filePath}`);\n            await this.addDocumentFromPath(filePath);\n          });\n        });\n      });\n    }\n\n    console.log('\uD83C\uDFA8 Menu creation completed');\n    return menu;\n  }\n\n  private async addDocumentFromPath(filePath: string): Promise<void> {\n    // Find the TFile object for this path\n    const file = this.plugin.app.vault.getAbstractFileByPath(filePath);\n    \n    if (!file) {\n      console.error('File not found:', filePath);\n      return;\n    }\n\n    try {\n      // Read the file content\n      const fileContent = await this.plugin.app.vault.read(file);\n      \n      // Create DocumentContext object with actual content\n      const doc: DocumentContext = {\n        path: file.path,\n        name: file.name.replace('.md', ''),\n        content: fileContent\n      };\n\n      // Add to context using existing method\n      this.addDocument(doc);\n    } catch (error) {\n      console.error('Failed to read file content:', error);\n    }\n  }\n\n  private createDocumentPickerContent(modal: HTMLElement, overlay: HTMLElement, styleEl: HTMLStyleElement): void {\n    const header = modal.createEl('div');\n    header.style.cssText = 'display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;';\n    \n    const title = header.createEl('h3', { text: 'Attach Document' });\n    title.style.cssText = 'margin: 0; color: var(--text-normal);';\n\n    const closeButton = header.createEl('button');\n    closeButton.innerHTML = `\n      <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M18 6L6 18\"/>\n        <path d=\"M6 6l12 12\"/>\n      </svg>\n    `;\n    closeButton.style.cssText = `\n      background: none;\n      border: none;\n      cursor: pointer;\n      color: var(--text-muted);\n      padding: 4px;\n      border-radius: 4px;\n      transition: all 0.2s ease;\n    `;\n    closeButton.onclick = () => {\n      overlay.remove();\n      document.head.removeChild(styleEl);\n    };\n\n    this.addHoverEffect(closeButton, {\n      'background-color': 'var(--background-modifier-hover)',\n      'color': 'var(--text-normal)'\n    });\n\n    // Search input\n    const searchInput = modal.createEl('input', { \n      type: 'text',\n      placeholder: 'Search documents...'\n    });\n    searchInput.style.cssText = `\n      width: 100%;\n      padding: 10px 12px;\n      border: 1px solid var(--background-modifier-border);\n      border-radius: 8px;\n      background: var(--background-primary);\n      color: var(--text-normal);\n      margin-bottom: 16px;\n      font-family: inherit;\n      outline: none;\n      transition: border-color 0.2s ease;\n    `;\n\n    searchInput.addEventListener('focus', () => {\n      searchInput.style.borderColor = 'var(--interactive-accent)';\n    });\n\n    searchInput.addEventListener('blur', () => {\n      searchInput.style.borderColor = 'var(--background-modifier-border)';\n    });\n\n    // Document list\n    const docList = modal.createEl('div');\n    \n    // Get vault files\n    const files = this.plugin.app.vault.getMarkdownFiles();\n    const recentFiles = files.slice(0, 10);\n\n    recentFiles.forEach(file => {\n      const docItem = docList.createEl('div');\n      docItem.style.cssText = `\n        padding: 12px;\n        border: 1px solid var(--background-modifier-border);\n        border-radius: 8px;\n        margin-bottom: 8px;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        gap: 12px;\n        transition: all 0.2s ease;\n      `;\n\n      docItem.innerHTML = `\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"/>\n          <path d=\"M14 2v6h6\"/>\n        </svg>\n        <div>\n          <div style=\"font-weight: 500; color: var(--text-normal);\">${file.basename}</div>\n          <div style=\"font-size: 12px; color: var(--text-muted);\">${file.path}</div>\n        </div>\n      `;\n\n      docItem.onclick = () => {\n        this.addDocument({ name: file.basename + '.md', path: file.path });\n        overlay.remove();\n        document.head.removeChild(styleEl);\n      };\n\n      this.addHoverEffect(docItem, {\n        'background-color': 'var(--background-modifier-hover)',\n        'border-color': 'var(--interactive-accent)',\n        'transform': 'translateY(-1px)'\n      });\n    });\n\n    searchInput.focus();\n  }\n\n  public getDocuments(): DocumentContext[] {\n    return [...this.documents];\n  }\n}", "import { BaseComponent } from './BaseComponent';\nimport { ComponentOptions, ChatInputEvents } from './types';\nimport { Icons } from '../utils/icons';\n\ninterface ChatInputOptions extends ComponentOptions {\n  events: ChatInputEvents;\n}\n\nexport class ChatInput extends BaseComponent {\n  private events: ChatInputEvents;\n  private messageInput: HTMLTextAreaElement;\n  private sendButton: HTMLButtonElement;\n  private isProcessing: boolean = false;\n\n  constructor(options: ChatInputOptions) {\n    super(options);\n    this.events = options.events;\n  }\n\n  render(): void {\n    this.createInputContainer();\n    this.createMessageInput();\n    this.createSendButton();\n    this.setupKeyboardShortcuts();\n  }\n\n  private createInputContainer(): void {\n    this.container.style.cssText = `\n      padding: 8px;\n      background: var(--background-primary);\n      position: relative;\n    `;\n  }\n\n  private createMessageInput(): void {\n    this.messageInput = this.container.createEl('textarea', { \n      cls: 'chat-message-input',\n      attr: { \n        placeholder: 'Type your message...',\n        rows: '3'\n      }\n    });\n\n    this.messageInput.style.cssText = `\n      width: 100%;\n      min-height: 80px;\n      max-height: 200px;\n      padding: 12px 52px 12px 12px;\n      border: 2px solid var(--background-modifier-border);\n      border-radius: 12px;\n      background: var(--background-primary);\n      color: var(--text-normal);\n      resize: none;\n      font-family: inherit;\n      font-size: 14px;\n      line-height: 1.4;\n      outline: none;\n      transition: all 0.2s ease;\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n      box-sizing: border-box;\n      overflow: hidden;\n      overflow-wrap: break-word;\n      word-wrap: break-word;\n      white-space: pre-wrap;\n    `;\n\n    this.setupAutoResize();\n    this.setupInputEvents();\n  }\n\n  private createSendButton(): void {\n    this.sendButton = this.container.createEl('button', { \n      cls: 'writerr-send-button',\n      attr: {\n        'type': 'submit',\n        'aria-label': 'Send message'\n      }\n    });\n    \n    // Use centralized icon system\n    this.sendButton.innerHTML = Icons.send({ className: 'writerr-send-icon', width: 16, height: 16 });\n    \n    this.setupSendButtonEvents();\n  }\n\n  private setupAutoResize(): void {\n    const autoResize = () => {\n      this.messageInput.style.height = '60px';\n      const scrollHeight = this.messageInput.scrollHeight;\n      const maxHeight = 160;\n      const newHeight = Math.min(Math.max(scrollHeight, 60), maxHeight);\n      this.messageInput.style.height = newHeight + 'px';\n    };\n\n    this.messageInput.addEventListener('input', autoResize);\n    \n    // Initial resize\n    setTimeout(autoResize, 0);\n  }\n\n  private setupInputEvents(): void {\n    // Focus/blur effects\n    this.messageInput.addEventListener('focus', () => {\n      this.messageInput.style.borderColor = 'var(--interactive-accent)';\n      this.messageInput.style.boxShadow = '0 2px 8px rgba(0, 0, 0, 0.1), 0 0 0 1px var(--interactive-accent)';\n    });\n    \n    this.messageInput.addEventListener('blur', () => {\n      this.messageInput.style.borderColor = 'var(--background-modifier-border)';\n      this.messageInput.style.boxShadow = '0 1px 3px rgba(0, 0, 0, 0.05)';\n    });\n\n    // Input validation\n    this.messageInput.addEventListener('input', () => {\n      this.updateSendButtonState();\n    });\n  }\n\n  private setupSendButtonEvents(): void {\n    this.sendButton.onclick = () => this.sendMessage();\n    \n    // Light hover effects\n    this.sendButton.addEventListener('mouseenter', () => {\n      if (!this.isProcessing) {\n        this.sendButton.style.backgroundColor = 'var(--background-modifier-hover)';\n        this.sendButton.style.color = 'var(--interactive-accent)';\n        this.sendButton.style.opacity = '1';\n        this.sendButton.style.transform = 'scale(1.05)';\n      }\n    });\n    \n    this.sendButton.addEventListener('mouseleave', () => {\n      if (!this.isProcessing) {\n        this.sendButton.style.backgroundColor = 'transparent';\n        this.sendButton.style.color = 'var(--text-muted)';\n        this.sendButton.style.opacity = this.messageInput.value.trim() ? '1' : '0.6';\n        this.sendButton.style.transform = 'scale(1)';\n      }\n    });\n\n    // Simple click effect\n    this.sendButton.addEventListener('click', () => {\n      if (!this.isProcessing) {\n        this.sendButton.style.transform = 'scale(0.95)';\n        setTimeout(() => {\n          if (!this.isProcessing) {\n            this.sendButton.style.transform = 'scale(1)';\n          }\n        }, 100);\n      }\n    });\n  }\n\n  private setupKeyboardShortcuts(): void {\n    this.messageInput.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n        this.sendMessage();\n      } else if (e.key === 'Enter' && e.shiftKey) {\n        // Allow Shift+Enter for new line (default behavior)\n        return;\n      } else if (e.key === 'Escape') {\n        this.messageInput.blur();\n      }\n      // Note: Plain Enter now creates new line (default textarea behavior)\n    });\n  }\n\n  private updateSendButtonState(): void {\n    const hasContent = this.messageInput.value.trim().length > 0;\n    \n    if (hasContent && !this.isProcessing) {\n      this.sendButton.style.opacity = '1';\n      this.sendButton.style.cursor = 'pointer';\n      this.sendButton.disabled = false;\n      this.sendButton.style.color = 'var(--interactive-accent)';\n    } else {\n      this.sendButton.style.opacity = this.isProcessing ? '0.8' : '0.6';\n      this.sendButton.style.cursor = this.isProcessing ? 'default' : 'not-allowed';\n      this.sendButton.style.color = 'var(--text-muted)';\n      this.sendButton.disabled = !this.isProcessing;\n    }\n  }\n\n  private sendMessage(): void {\n    const message = this.messageInput.value.trim();\n    if (!message || this.isProcessing) return;\n\n    // Get current mode (would be passed from parent in real implementation)\n    const mode = 'chat'; // This should be obtained from the header component\n    \n    this.events.onSend(message, mode);\n    this.clearInput();\n  }\n\n  public setProcessingState(processing: boolean): void {\n    this.isProcessing = processing;\n    \n    if (processing) {\n      this.sendButton.innerHTML = Icons.loader({ \n        className: 'writerr-send-icon', \n        width: 18, \n        height: 18 \n      });\n      this.sendButton.style.color = 'var(--text-muted)';\n      this.sendButton.style.cursor = 'default';\n      this.sendButton.style.opacity = '0.8';\n      // Add loading animation\n      this.sendButton.style.animation = 'spin 1s linear infinite';\n      \n      // Add spin animation if not exists\n      if (!document.querySelector('#spin-animation')) {\n        const style = document.createElement('style');\n        style.id = 'spin-animation';\n        style.textContent = `\n          @keyframes spin {\n            from { transform: rotate(0deg); }\n            to { transform: rotate(360deg); }\n          }\n        `;\n        document.head.appendChild(style);\n      }\n    } else {\n      this.sendButton.innerHTML = Icons.send({ \n        className: 'writerr-send-icon', \n        width: 18, \n        height: 18 \n      });\n      this.sendButton.style.animation = 'none';\n      this.sendButton.style.cursor = 'pointer';\n    }\n    \n    this.updateSendButtonState();\n  }\n\n  public clearInput(): void {\n    this.messageInput.value = '';\n    this.messageInput.style.height = '44px';\n    this.updateSendButtonState();\n  }\n\n  public focusInput(): void {\n    this.messageInput.focus();\n  }\n\n  public getValue(): string {\n    return this.messageInput.value;\n  }\n\n  public setValue(value: string): void {\n    this.messageInput.value = value;\n    this.updateSendButtonState();\n    \n    // Trigger auto-resize\n    this.messageInput.style.height = '44px';\n    const scrollHeight = this.messageInput.scrollHeight;\n    const maxHeight = 160;\n    const newHeight = Math.min(Math.max(scrollHeight, 44), maxHeight);\n    this.messageInput.style.height = newHeight + 'px';\n  }\n}", "import { BaseComponent, ComponentOptions } from './BaseComponent';\nimport { Icons, createStyledIcon } from '../utils/icons';\n\ninterface ChatToolbarOptions extends ComponentOptions {\n  events: ChatToolbarEvents;\n}\n\nexport interface ChatToolbarEvents {\n  onAddDocument: () => void;\n  onCopyChat: () => void;\n  onClearChat: () => void;\n  onModelChange: (model: string) => void;\n  onPromptChange: (prompt: string) => void;\n  onModelProviderReady?: () => void;\n}\n\nimport { BaseComponent, ComponentOptions } from './BaseComponent';\nimport { Icons, createStyledIcon } from '../utils/icons';\nimport { WriterMenu, WriterMenuFactory } from './menus/WriterMenu';\n\ninterface ChatToolbarOptions extends ComponentOptions {\n  events: ChatToolbarEvents;\n}\n\nexport interface ChatToolbarEvents {\n  onAddDocument: () => void;\n  onCopyChat: () => void;\n  onClearChat: () => void;\n  onModelChange: (model: string) => void;\n  onPromptChange: (prompt: string) => void;\n  onModelProviderReady?: () => void;\n}\n\nexport class ChatToolbar extends BaseComponent {\n  private events: ChatToolbarEvents;\n  private statusIndicator: HTMLElement;\n  private modelSelect: HTMLSelectElement;\n  private modelButton: HTMLButtonElement;\n  private promptButton: HTMLButtonElement;  // NEW: WriterMenu button\n  private documentButton: HTMLButtonElement;  // NEW: Smart document button\n  private availablePrompts: { name: string; path: string }[] = [];  // NEW: Store loaded prompts\n  private tokenCounter: HTMLElement;\n\n  constructor(options: ChatToolbarOptions) {\n    super(options);\n    this.events = options.events;\n  }\n\n  render(): void {\n    this.createToolbarContainer();\n    this.createToolbarElements();\n  }\n\n  private createToolbarContainer(): void {\n    this.container.style.cssText = `\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 8px 12px;\n      border-top: 1px solid var(--background-modifier-border);\n      background: var(--background-primary);\n      font-size: 12px;\n      color: var(--text-muted);\n      min-height: 44px;\n      overflow: hidden;\n    `;\n  }\n\n  private createToolbarElements(): void {\n    // Update main container with clean styling from test toolbar\n    this.container.style.cssText = `\n      all: initial;\n      display: flex;\n      align-items: center;\n      gap: 12px;\n      padding: 8px 12px;\n      border-top: 1px solid var(--background-modifier-border);\n      background: var(--background-secondary);\n      font-size: 12px;\n      color: var(--text-muted);\n      min-height: 40px;\n      box-sizing: border-box;\n      font-family: var(--font-interface);\n    `;\n\n    // Add document button - using centralized icon system\n    this.createSmartDocumentButton(this.container, 'Add document to chat', \n      createStyledIcon('filePlus2', 'toolbar'), \n      () => this.events.onAddDocument()\n    );\n\n    // Copy chat button - using centralized icon system\n    this.createActionButton(this.container, 'Copy entire chat', \n      createStyledIcon('copy', 'toolbar'), \n      () => this.events.onCopyChat()\n    );\n\n    // Clear chat button - using centralized icon system\n    this.createActionButton(this.container, 'Clear chat', \n      createStyledIcon('paintbrush', 'toolbar'), \n      () => this.events.onClearChat()\n    );\n\n    // Add spacer to push right elements to the right\n    const spacer = this.container.createEl('div');\n    spacer.style.cssText = 'flex: 1; min-width: 20px;';\n\n    // Prompt dropdown\n    this.createPromptSelect(this.container);\n    \n    // Model dropdown\n    this.createModelSelect(this.container);\n    \n    // Token counter\n    this.createTokenCounter(this.container);\n  }\n\n  private createTestToolbar(): void {\n    // Create a completely fresh toolbar below the existing one\n    const testToolbar = this.container.parentElement.createEl('div');\n    testToolbar.style.cssText = `\n      display: flex;\n      align-items: center;\n      gap: 12px;\n      padding: 8px 12px;\n      border-top: 1px solid var(--background-modifier-border);\n      background: var(--background-secondary);\n      font-size: 12px;\n      color: var(--text-muted);\n      min-height: 40px;\n      margin-top: 4px;\n    `;\n\n    // Add label\n    const label = testToolbar.createEl('span');\n    label.textContent = 'TEST:';\n    label.style.cssText = 'font-weight: bold; color: var(--text-accent);';\n\n    // Create fresh prompt button with zero inheritance\n    const freshPromptButton = testToolbar.createEl('button');\n    freshPromptButton.style.cssText = `\n      all: initial;\n      font-family: inherit;\n      border: 1px solid var(--background-modifier-border);\n      background: var(--background-primary);\n      padding: 4px 8px;\n      font-size: 12px;\n      color: var(--text-normal);\n      cursor: pointer;\n      width: 120px;\n      text-align: left;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      border-radius: 4px;\n    `;\n    \n    freshPromptButton.textContent = 'casual-conversational';\n\n    // Add other elements for comparison\n    const freshModelButton = testToolbar.createEl('button');\n    freshModelButton.style.cssText = `\n      all: initial;\n      font-family: inherit;\n      border: 1px solid var(--background-modifier-border);\n      background: var(--background-primary);\n      padding: 4px 8px;\n      font-size: 12px;\n      color: var(--text-normal);\n      cursor: pointer;\n      width: 100px;\n      text-align: left;\n      border-radius: 4px;\n    `;\n    freshModelButton.textContent = 'claude-3.5-sonnet';\n\n    const freshTokens = testToolbar.createEl('span');\n    freshTokens.style.cssText = `\n      font-size: 12px;\n      color: var(--text-muted);\n    `;\n    freshTokens.textContent = '267 / unavailable';\n  }\n\n\n\n  private createActionButton(parent: HTMLElement, tooltip: string, icon: string, onClick: () => void): void {\n    const button = parent.createEl('button', { \n      cls: 'writerr-toolbar-button'\n    });\n    button.innerHTML = icon;\n    button.onclick = onClick;\n    \n    // Add unified tooltip\n    this.addTooltip(button, tooltip);\n  }\n\n  private createSmartDocumentButton(parent: HTMLElement, tooltip: string, icon: string, onClick: () => void): void {\n    const button = parent.createEl('button', { \n      cls: 'writerr-toolbar-button writerr-document-button'\n    });\n    button.innerHTML = icon;\n    \n    // Custom click handler that toggles current active document in/out of context\n    button.onclick = async () => {\n      const activeFile = this.plugin.app.workspace.getActiveFile();\n      if (!activeFile) return;\n\n      // Get the chat view using the same pattern as main plugin\n      const chatLeaf = this.plugin.app.workspace.getLeavesOfType('writerr-chat-view')[0];\n      const chatView = chatLeaf?.view;\n      const contextArea = chatView?.contextArea;\n      \n      if (!contextArea) {\n        console.error('ChatToolbar: Context area not found');\n        return;\n      }\n\n      // Check if document is already in context\n      const documentsInContext = contextArea.getDocuments() || [];\n      const existingDoc = documentsInContext.find((doc: any) => doc.path === activeFile.path);\n\n      if (!existingDoc) {\n        // Add document to context\n        try {\n          const fileContent = await this.plugin.app.vault.read(activeFile);\n          const documentContext = {\n            name: activeFile.name,\n            path: activeFile.path,\n            content: fileContent\n          };\n          console.log('ChatToolbar: Adding document to context:', documentContext);\n          contextArea.addDocument(documentContext);\n          // Update token counter after adding document\n          await this.updateTokenCounterFromModel();\n        } catch (error) {\n          console.error('Failed to read file content:', error);\n        }\n      } else {\n        // Remove document from context\n        console.log('ChatToolbar: Removing document from context:', activeFile.name);\n        contextArea.removeDocumentByPath(existingDoc);\n        // Update token counter after removing document\n        await this.updateTokenCounterFromModel();\n      }\n      \n      // Update button state to reflect the change\n      this.updateDocumentButtonState();\n    };\n    \n    // Store reference for updates\n    this.documentButton = button;\n    \n    // Listen for active file changes to update button state\n    this.plugin.registerEvent(\n      this.plugin.app.workspace.on('active-leaf-change', () => {\n        // Small delay to ensure file is fully loaded\n        setTimeout(() => this.updateDocumentButtonState(), 100);\n      })\n    );\n    \n    // Update visual state based on active document\n    this.updateDocumentButtonState();\n    \n    // Don't add tooltip here - it will be set dynamically in updateDocumentButtonState\n  }\n\n  private createModelSelect(parent: HTMLElement): void {\n    const modelButton = parent.createEl('button');\n    modelButton.style.cssText = `\n      background: transparent;\n      border: none;\n      padding: 6px 24px 6px 8px;\n      font-size: 12px;\n      color: var(--text-muted);\n      cursor: pointer;\n      border-radius: 4px;\n      max-width: 140px;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      position: relative;\n      font-family: inherit;\n    `;\n\n    modelButton.addEventListener('mouseenter', () => {\n      modelButton.style.background = 'var(--background-modifier-hover)';\n      modelButton.style.color = 'var(--text-normal)';\n    });\n    \n    modelButton.addEventListener('mouseleave', () => {\n      modelButton.style.background = 'transparent';\n      modelButton.style.color = 'var(--text-muted)';\n    });\n\n    modelButton.textContent = 'AI Models';\n\n    const caret = modelButton.createEl('span');\n    caret.innerHTML = Icons.chevronDown({ width: 10, height: 10 });\n    caret.style.cssText = `\n      position: absolute;\n      right: 6px;\n      top: 50%;\n      transform: translateY(-50%);\n      pointer-events: none;\n      color: var(--text-faint);\n    `;\n\n    this.modelButton = modelButton;\n\n    modelButton.addEventListener('click', (event) => {\n      this.showModelMenu(event);\n    });\n\n    if (this.plugin.settings.selectedModel) {\n      this.updateModelButtonText(this.plugin.settings.selectedModel);\n    }\n  }\n\n  private showModelMenu(event: MouseEvent): void {\n    try {\n      // Get available providers and models using the working logic we already had\n      const app = (window as any).app;\n      const plugins = app?.plugins?.plugins;\n      const aiProvidersPlugin = plugins?.['ai-providers'];\n      \n      if (!aiProvidersPlugin) {\n        console.log('WriterMenu: No AI providers available');\n        return;\n      }\n\n      const aiProviders = aiProvidersPlugin.aiProviders;\n      if (!aiProviders?.providers) {\n        console.log('WriterMenu: No providers array found');\n        return;\n      }\n\n      // Build provider map - keep ORIGINAL provider objects for reliable lookup\n      const providerMap: Record<string, Record<string, string[]>> = {};\n      const providersByDisplayName: Record<string, any> = {}; // Store actual provider objects\n      \n      for (const provider of aiProviders.providers) {\n        const providerId = provider.id || provider.name || provider.type || 'unknown';\n        \n        // Pass the full provider object to getProviderDisplayName for better inference\n        const displayName = this.getProviderDisplayName(providerId, provider);\n        \n        // Store actual provider object (not just ID mapping)\n        providersByDisplayName[displayName] = provider;\n        \n        const models = provider.models || provider.availableModels || provider.supportedModels || [];\n        \n        if (models.length > 0) {\n          const families = this.organizeModelsByFamily(models);\n          if (Object.keys(families).length > 0) {\n            providerMap[displayName] = families;\n            console.log(`WriterMenu: Added provider \"${displayName}\" with ${models.length} models`);\n          }\n        }\n      }\n\n      if (Object.keys(providerMap).length === 0) {\n        console.log('WriterMenu: No providers with models available');\n        return;\n      }\n\n      // Create WriterMenu with provider \u2192 family \u2192 model hierarchy\n      const menu = WriterMenuFactory.createModelMenu(\n        providerMap,\n        this.plugin.settings.selectedModel,\n        (providerDisplayName: string, model: string) => {\n          // Get the actual provider object directly (no fragile reverse lookup!)\n          const provider = providersByDisplayName[providerDisplayName];\n          const providerId = provider.id || provider.name || provider.type || 'unknown';\n          \n          const selection = `${providerId}:${model}`;\n          console.log(`WriterMenu: Selected ${providerDisplayName} - ${model} (${selection})`);\n          console.log(`WriterMenu: Using provider ID: ${providerId} from provider:`, provider);\n\n          this.plugin.settings.selectedModel = selection;\n          this.plugin.saveSettings();\n          this.updateModelButtonText(selection);\n          this.updateTokenCounterFromModel(); // Refresh token counter for new model\n          this.events.onModelChange(selection);\n        }\n      );\n\n      menu.showAtMouseEvent(event);\n    } catch (error) {\n      console.error('WriterMenu: Error showing model menu:', error);\n    }\n  }\n\n  private updateModelButtonText(selection: string): void {\n    if (!this.modelButton) return;\n    \n    let displayName = '';\n    if (selection && selection.includes(':')) {\n      const [, model] = selection.split(':', 2);\n      displayName = model;\n    } else {\n      displayName = 'AI Models';\n    }\n    \n    // Manual truncation to match prompt button behavior\n    const maxLength = 15; // Approximate characters that fit in 140px\n    let finalText = displayName;\n    let showCaret = true;\n    \n    if (displayName.length > maxLength) {\n      finalText = displayName.substring(0, maxLength - 3) + '...';\n      showCaret = false; // Don't show caret when we have ellipsis\n    }\n    \n    this.modelButton.textContent = finalText;\n    \n    // Show/hide caret based on whether we manually truncated\n    const caret = this.modelButton.querySelector('span');\n    if (caret) {\n      caret.style.display = showCaret ? 'block' : 'none';\n    }\n  }\n\n  private getAvailableProvidersAndModels(): Record<string, Record<string, string[]>> {\n    // This method is no longer used - keeping for compatibility\n    return {};\n  }\n\n  private createPromptSelect(parent: HTMLElement): void {\n    // Create WriterMenu prompt button directly without wrapper container\n    this.createPromptMenuButton(parent);\n  }\n\n  private createPromptMenuButton(parent: HTMLElement): void {\n    this.promptButton = parent.createEl('button');\n    this.promptButton.style.cssText = `\n      background: transparent;\n      border: none;\n      padding: 6px 24px 6px 8px;\n      font-size: 12px;\n      color: var(--text-muted);\n      cursor: pointer;\n      border-radius: 4px;\n      max-width: 140px;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      position: relative;\n      font-family: inherit;\n    `;\n\n    this.promptButton.addEventListener('mouseenter', () => {\n      this.promptButton.style.background = 'var(--background-modifier-hover)';\n      this.promptButton.style.color = 'var(--text-normal)';\n    });\n    \n    this.promptButton.addEventListener('mouseleave', () => {\n      this.promptButton.style.background = 'transparent';\n      this.promptButton.style.color = 'var(--text-muted)';\n    });\n\n    this.promptButton.textContent = 'Prompts';\n\n    const caret = this.promptButton.createEl('span');\n    caret.innerHTML = Icons.chevronDown({ width: 10, height: 10 });\n    caret.style.cssText = `\n      position: absolute;\n      right: 6px;\n      top: 50%;\n      transform: translateY(-50%);\n      pointer-events: none;\n      color: var(--text-faint);\n    `;\n    \n    (this.promptButton as any).caret = caret;\n\n    this.promptButton.addEventListener('click', (event) => {\n      this.showPromptMenu(event);\n    });\n\n    this.loadPromptsForMenu();\n  }\n\n  private showPromptMenu(event: MouseEvent): void {\n    try {\n      if (this.availablePrompts.length === 0) {\n        console.log('WriterMenu: No prompts available');\n        return;\n      }\n\n      console.log(`WriterMenu: Showing menu with ${this.availablePrompts.length} prompts`);\n\n      // Create WriterMenu using the factory method\n      const menu = WriterMenuFactory.createPromptMenu(\n        this.availablePrompts,\n        this.plugin.settings.selectedPrompt,\n        (promptPath: string) => {\n          console.log(`WriterMenu: Selected prompt ${promptPath}`);\n          \n          // Update settings and button text\n          this.plugin.settings.selectedPrompt = promptPath;\n          this.plugin.saveSettings();\n          this.updatePromptButtonText(promptPath);\n          this.events.onPromptChange(promptPath);\n        }\n      );\n\n      menu.showAtMouseEvent(event);\n    } catch (error) {\n      console.error('WriterMenu: Error showing prompt menu:', error);\n    }\n  }\n\n  private updatePromptButtonText(selection: string): void {\n    if (!this.promptButton) return;\n    \n    let displayName = '';\n    if (selection) {\n      // Find the prompt name from the path\n      const prompt = this.availablePrompts.find(p => p.path === selection);\n      displayName = prompt ? prompt.name : selection.split('/').pop()?.replace('.md', '') || 'Prompt';\n    } else {\n      displayName = 'WriterMenu Prompts';\n    }\n    \n    // Manual truncation - if text is too long, truncate it ourselves\n    const maxLength = 15; // Approximate characters that fit in 120px\n    let finalText = displayName;\n    let showCaret = true;\n    \n    if (displayName.length > maxLength) {\n      finalText = displayName.substring(0, maxLength - 3) + '...';\n      showCaret = false; // Don't show caret when we have ellipsis\n    }\n    \n    this.promptButton.textContent = finalText;\n    \n    // Show/hide caret based on whether we manually truncated\n    const caret = (this.promptButton as any).caret;\n    if (caret) {\n      caret.style.display = showCaret ? 'block' : 'none';\n    }\n  }\n\n  private updatePromptCaretVisibility(): void {\n    if (!this.promptButton) return;\n    \n    const caret = (this.promptButton as any).caret;\n    if (!caret) return;\n    \n    // Use requestAnimationFrame for more reliable DOM measurement timing\n    requestAnimationFrame(() => {\n      // Force a reflow to ensure accurate measurements\n      this.promptButton.offsetWidth;\n      \n      // Calculate available text space accounting for padding and caret space\n      const buttonWidth = this.promptButton.clientWidth;\n      const buttonStyle = getComputedStyle(this.promptButton);\n      const paddingLeft = parseFloat(buttonStyle.paddingLeft);\n      const paddingRight = parseFloat(buttonStyle.paddingRight);\n      const availableTextWidth = buttonWidth - paddingLeft - paddingRight;\n      \n      // Create a temporary span to measure actual text width\n      const tempSpan = document.createElement('span');\n      tempSpan.style.cssText = `\n        font-size: ${buttonStyle.fontSize};\n        font-family: ${buttonStyle.fontFamily};\n        font-weight: ${buttonStyle.fontWeight};\n        visibility: hidden;\n        position: absolute;\n        white-space: nowrap;\n      `;\n      tempSpan.textContent = this.promptButton.textContent;\n      document.body.appendChild(tempSpan);\n      \n      const textWidth = tempSpan.offsetWidth;\n      document.body.removeChild(tempSpan);\n      \n      // Determine if text is truncated based on actual measurements\n      const isTextTruncated = textWidth > availableTextWidth;\n      \n      if (isTextTruncated) {\n        // Text is truncated (ellipsis will show) - hide caret to avoid visual clutter\n        caret.style.display = 'none';\n      } else {\n        // Text fits completely - show caret to indicate dropdown functionality\n        caret.style.display = 'flex';\n      }\n    });\n  }\n\n  private async loadPromptsForMenu(): Promise<void> {\n    try {\n      const pluginDir = this.plugin.manifest.dir;\n      const promptsPath = `${pluginDir}/prompts`;\n      \n      console.log(`\uD83D\uDD0D WriterMenu: Loading prompts from: ${promptsPath}`);\n      \n      // Use file system adapter (same as existing method)\n      const adapter = this.plugin.app.vault.adapter;\n      const promptsDirExists = await adapter.exists(promptsPath);\n      \n      if (promptsDirExists) {\n        const promptFiles = await adapter.list(promptsPath);\n        \n        if (promptFiles.files && promptFiles.files.length > 0) {\n          const mdFiles = promptFiles.files.filter(file => file.endsWith('.md'));\n          \n          // Build prompts array for WriterMenu\n          this.availablePrompts = [];\n          mdFiles.forEach(filePath => {\n            const fileName = filePath.split('/').pop() || filePath;\n            const baseName = fileName.replace('.md', '');\n            this.availablePrompts.push({ name: baseName, path: filePath });\n          });\n          \n          console.log(`\u2705 WriterMenu: Loaded ${this.availablePrompts.length} prompts:`, this.availablePrompts);\n          \n          // Update button text if we have a current selection\n          if (this.plugin.settings.selectedPrompt) {\n            this.updatePromptButtonText(this.plugin.settings.selectedPrompt);\n          }\n          return;\n        }\n      }\n      \n      console.log(`\u274C WriterMenu: No prompts found at ${promptsPath}`);\n      this.availablePrompts = [];\n      \n    } catch (error) {\n      console.error('\u274C WriterMenu: Error loading prompts:', error);\n      this.availablePrompts = [];\n    }\n  }\n\n  private createTokenCounter(parent: HTMLElement): void {\n    this.tokenCounter = parent.createEl('span', { cls: 'writerr-token-count' });\n    // Initialize with dynamic model-based calculation using token-count service\n    this.updateTokenCounterFromModel();\n  }\n\n  public async updateTokenCounterFromModel(): Promise<void> {\n    if (!this.tokenCounter) return;\n\n    // Always calculate current context usage\n    const contextTokens = await this.calculateContextTokens();\n\n    // Get selected model info\n    const selectedModel = this.plugin.settings.selectedModel;\n    \n    if (!selectedModel || !selectedModel.includes(':')) {\n      this.tokenCounter.textContent = `${contextTokens.toLocaleString()} / no model`;\n      this.tokenCounter.style.color = 'var(--text-muted)';\n      return;\n    }\n\n    // Get model token limits from token-count service\n    const [providerId, modelName] = selectedModel.split(':', 2);\n    const modelTokenLimit = this.getModelTokenLimit(providerId, modelName);\n    \n    if (!modelTokenLimit) {\n      this.tokenCounter.textContent = `${contextTokens.toLocaleString()} / unavailable`;\n      this.tokenCounter.style.color = 'var(--text-muted)';\n      return;\n    }\n\n    // Update display with both values\n    this.updateTokenCounter(contextTokens, modelTokenLimit);\n  }\n\n  private getModelTokenLimit(providerId: string, modelName: string): number | null {\n    // Use token-count service instead of broken AI Providers logic\n    const tokenCountPlugin = this.plugin.app.plugins.plugins['token-count'];\n    if (tokenCountPlugin?.api) {\n      // Try exact model name first\n      let tokenLimit = tokenCountPlugin.api.getTokenLimit(modelName);\n      \n      // If no match, try without provider prefix (e.g., \"gpt-4\" instead of \"openai/gpt-4\")\n      if (!tokenLimit && modelName.includes('/')) {\n        const modelOnly = modelName.split('/').pop();\n        tokenLimit = tokenCountPlugin.api.getTokenLimit(modelOnly);\n      }\n      \n      return tokenLimit;\n    }\n    \n    // Fallback: return null (honest \"unavailable\")\n    return null;\n  }\n\n  // Removed: No hardcoded token limits - only real data or \"unavailable\"\n\n  private async calculateContextTokens(): Promise<number> {\n    let totalTokens = 0;\n    \n    try {\n      // Get chat view and current session\n      const chatLeaf = this.plugin.app.workspace.getLeavesOfType('writerr-chat-view')[0];\n      const chatView = chatLeaf?.view;\n      \n      if (!chatView) {\n        console.log('\uD83D\uDD22 No chat view found');\n        return 0;\n      }\n\n      // Get model name for sophisticated tokenization\n      const selectedModel = this.plugin.settings.selectedModel;\n      const [, modelName] = selectedModel?.split(':', 2) || ['', ''];\n      console.log('\uD83D\uDD22 Calculating tokens for model:', modelName);\n\n      // Use token-count service for accurate tokenization\n      const tokenCountPlugin = this.plugin.app.plugins.plugins['token-count'];\n      if (tokenCountPlugin?.api) {\n        console.log('\uD83D\uDD22 Using token-count service');\n        \n        // Count tokens from conversation history\n        const currentSession = this.plugin.currentSession;\n        if (currentSession?.messages) {\n          console.log('\uD83D\uDD22 Processing', currentSession.messages.length, 'messages');\n          for (const msg of currentSession.messages) {\n            const analysis = tokenCountPlugin.api.analyzeText(msg.content, modelName);\n            totalTokens += analysis.tokenCount;\n          }\n        }\n\n        // Count tokens from selected prompt template\n        const selectedPrompt = this.plugin.settings.selectedPrompt;\n        if (selectedPrompt) {\n          console.log('\uD83D\uDD22 Selected prompt template:', selectedPrompt);\n          try {\n            // Use the same adapter approach as loadPromptsForMenu()\n            const adapter = this.plugin.app.vault.adapter;\n            const promptContent = await adapter.read(selectedPrompt);\n            console.log('\uD83D\uDD22 Prompt content found, length:', promptContent.length);\n            const analysis = tokenCountPlugin.api.analyzeText(promptContent, modelName);\n            console.log('\uD83D\uDD22 Prompt tokens:', analysis.tokenCount);\n            totalTokens += analysis.tokenCount;\n          } catch (error) {\n            console.log('\uD83D\uDD22 Failed to read prompt file:', error);\n          }\n        }\n\n        // Count tokens from context documents\n        const contextArea = chatView.contextArea;\n        if (contextArea) {\n          const documents = contextArea.getDocuments();\n          console.log('\uD83D\uDD22 Processing', documents.length, 'documents');\n          for (const doc of documents) {\n            console.log('\uD83D\uDD22 Document:', doc.name, 'content length:', doc.content?.length || 0);\n            // Use sophisticated tokenization instead of rough estimates\n            const analysis = tokenCountPlugin.api.analyzeText(doc.content || '', modelName);\n            console.log('\uD83D\uDD22 Document tokens:', analysis.tokenCount);\n            totalTokens += analysis.tokenCount;\n          }\n        }\n\n        // Count tokens from current input\n        const inputArea = chatView.chatInput;\n        if (inputArea && inputArea.getValue) {\n          const currentInput = inputArea.getValue();\n          if (currentInput) {\n            console.log('\uD83D\uDD22 Current input length:', currentInput.length);\n            const analysis = tokenCountPlugin.api.analyzeText(currentInput, modelName);\n            console.log('\uD83D\uDD22 Input tokens:', analysis.tokenCount);\n            totalTokens += analysis.tokenCount;\n          }\n        }\n      } else {\n        console.log('\uD83D\uDD22 Token-count service not available, using fallback');\n        // Fallback: basic estimation if token-count service unavailable\n        const currentSession = this.plugin.currentSession;\n        if (currentSession?.messages) {\n          totalTokens += currentSession.messages.reduce((sum, msg) => {\n            return sum + this.estimateTokens(msg.content);\n          }, 0);\n        }\n\n        const contextArea = chatView.contextArea;\n        if (contextArea) {\n          const documents = contextArea.getDocuments();\n          totalTokens += documents.length * 1000; // Rough estimate per document\n        }\n\n        const inputArea = chatView.chatInput;\n        if (inputArea && inputArea.getValue) {\n          const currentInput = inputArea.getValue();\n          totalTokens += this.estimateTokens(currentInput);\n        }\n      }\n\n      console.log('\uD83D\uDD22 Total context tokens:', totalTokens);\n\n    } catch (error) {\n      console.warn('Error calculating context tokens:', error);\n    }\n\n    return totalTokens;\n  }\n\n  private estimateTokens(text: string): number {\n    if (!text) return 0;\n    \n    // Get current selected model to use appropriate tokenizer\n    const selectedModel = this.plugin.settings.selectedModel;\n    if (!selectedModel || !selectedModel.includes(':')) {\n      return this.fallbackTokenizer(text);\n    }\n\n    const [, modelName] = selectedModel.split(':', 2);\n    return this.calculateTokensForModel(text, modelName);\n  }\n\n  private calculateTokensForModel(text: string, modelName: string): number {\n    // Clean and normalize text\n    const normalizedText = text.trim();\n    if (!normalizedText) return 0;\n\n    // Determine tokenizer type based on model\n    const tokenizerType = this.getTokenizerType(modelName);\n    \n    switch (tokenizerType) {\n      case 'cl100k':\n        return this.cl100kTokenizer(normalizedText);\n      case 'p50k':\n        return this.p50kTokenizer(normalizedText);\n      case 'gemini':\n        return this.geminiTokenizer(normalizedText);\n      case 'claude':\n        return this.claudeTokenizer(normalizedText);\n      default:\n        return this.fallbackTokenizer(normalizedText);\n    }\n  }\n\n  private getTokenizerType(modelName: string): string {\n    // OpenAI GPT-4, GPT-4o, GPT-5, o1, o3, o4 use cl100k_base\n    if (modelName.includes('gpt-4') || modelName.includes('gpt-5') || \n        modelName.includes('gpt-4o') || modelName.includes('o1') || \n        modelName.includes('o3') || modelName.includes('o4')) {\n      return 'cl100k';\n    }\n    \n    // OpenAI GPT-3.5 and older use p50k_base\n    if (modelName.includes('gpt-3') || modelName.includes('davinci') || \n        modelName.includes('babbage') || modelName.includes('curie')) {\n      return 'p50k';\n    }\n    \n    // Google Gemini models\n    if (modelName.includes('gemini') || modelName.includes('models/gemini')) {\n      return 'gemini';\n    }\n    \n    // Anthropic Claude models\n    if (modelName.includes('claude')) {\n      return 'claude';\n    }\n    \n    return 'cl100k'; // Default to most common modern tokenizer\n  }\n\n  private cl100kTokenizer(text: string): number {\n    // cl100k_base tokenizer approximation for GPT-4/GPT-4o/GPT-5/o1/o3/o4\n    // This is more sophisticated than simple character counting\n    \n    // Step 1: Handle special tokens and patterns\n    let tokenCount = 0;\n    \n    // Count newlines (each newline is typically 1 token)\n    const newlines = (text.match(/\\n/g) || []).length;\n    tokenCount += newlines;\n    \n    // Remove newlines for further processing\n    let processedText = text.replace(/\\n/g, ' ');\n    \n    // Step 2: Split on whitespace and punctuation\n    const words = processedText.split(/\\s+/).filter(word => word.length > 0);\n    \n    for (const word of words) {\n      // Handle punctuation-heavy text\n      if (/^[^\\w\\s]+$/.test(word)) {\n        // Pure punctuation - usually 1 token per character or small group\n        tokenCount += Math.ceil(word.length / 2);\n      } else if (word.length <= 3) {\n        // Short words are typically 1 token\n        tokenCount += 1;\n      } else if (word.length <= 7) {\n        // Medium words are typically 1-2 tokens\n        tokenCount += Math.ceil(word.length / 4);\n      } else {\n        // Long words get split more\n        tokenCount += Math.ceil(word.length / 3.5);\n      }\n    }\n    \n    return Math.max(1, tokenCount);\n  }\n\n  private p50kTokenizer(text: string): number {\n    // p50k_base tokenizer approximation for GPT-3.5 and older\n    // Slightly less efficient than cl100k\n    \n    const words = text.split(/\\s+/).filter(word => word.length > 0);\n    let tokenCount = 0;\n    \n    for (const word of words) {\n      if (word.length <= 4) {\n        tokenCount += 1;\n      } else {\n        // p50k is less efficient, so slightly higher token count\n        tokenCount += Math.ceil(word.length / 3.8);\n      }\n    }\n    \n    // Add newline tokens\n    tokenCount += (text.match(/\\n/g) || []).length;\n    \n    return Math.max(1, tokenCount);\n  }\n\n  private geminiTokenizer(text: string): number {\n    // Google Gemini tokenizer approximation\n    // Generally more efficient than GPT tokenizers\n    \n    const words = text.split(/\\s+/).filter(word => word.length > 0);\n    let tokenCount = 0;\n    \n    for (const word of words) {\n      if (word.length <= 4) {\n        tokenCount += 1;\n      } else {\n        // Gemini is typically more efficient\n        tokenCount += Math.ceil(word.length / 4.2);\n      }\n    }\n    \n    // Handle newlines\n    tokenCount += (text.match(/\\n/g) || []).length * 0.8; // Gemini handles newlines more efficiently\n    \n    return Math.max(1, Math.ceil(tokenCount));\n  }\n\n  private claudeTokenizer(text: string): number {\n    // Anthropic Claude tokenizer approximation\n    // Similar efficiency to GPT-4 family\n    \n    const words = text.split(/\\s+/).filter(word => word.length > 0);\n    let tokenCount = 0;\n    \n    for (const word of words) {\n      if (word.length <= 3) {\n        tokenCount += 1;\n      } else {\n        tokenCount += Math.ceil(word.length / 3.7);\n      }\n    }\n    \n    // Handle newlines\n    tokenCount += (text.match(/\\n/g) || []).length;\n    \n    return Math.max(1, tokenCount);\n  }\n\n  private fallbackTokenizer(text: string): number {\n    // Conservative fallback estimation\n    return Math.ceil(text.length / 4);\n  }\n\n  private getProviderDisplayName(providerId: string, provider?: any): string {\n    // First, try to get a display name from the provider object itself\n    if (provider) {\n      // Check if provider has a display name or readable name\n      if (provider.displayName && typeof provider.displayName === 'string') {\n        return provider.displayName;\n      }\n      \n      if (provider.name && typeof provider.name === 'string' && !provider.name.startsWith('id-')) {\n        return provider.name;\n      }\n      \n      // Check if the provider type gives us a clue\n      if (provider.type && typeof provider.type === 'string') {\n        const displayNames: Record<string, string> = {\n          'openai': 'OpenAI',\n          'anthropic': 'Anthropic', \n          'google': 'Google',\n          'ollama': 'Local/Ollama',\n          'azure': 'Azure OpenAI'\n        };\n        \n        const typeDisplayName = displayNames[provider.type.toLowerCase()];\n        if (typeDisplayName) {\n          return typeDisplayName;\n        }\n      }\n    }\n    \n    // Fallback to static ID mapping\n    const displayNames: Record<string, string> = {\n      'openai': 'OpenAI',\n      'anthropic': 'Anthropic', \n      'google': 'Google',\n      'ollama': 'Local/Ollama',\n      'azure': 'Azure OpenAI'\n    };\n    \n    const staticResult = displayNames[providerId.toLowerCase()];\n    if (staticResult) {\n      return staticResult;\n    }\n    \n    // If providerId looks like a dynamic ID (starts with \"id-\"), try to infer from context\n    if (providerId.startsWith('id-') && provider) {\n      // Try to find patterns in the provider object to guess the type\n      const providerStr = JSON.stringify(provider).toLowerCase();\n      \n      if (providerStr.includes('openai') || providerStr.includes('gpt')) {\n        console.log('WriterMenu: Inferred OpenAI from provider content for ID:', providerId);\n        return 'OpenAI';\n      } else if (providerStr.includes('anthropic') || providerStr.includes('claude')) {\n        console.log('WriterMenu: Inferred Anthropic from provider content for ID:', providerId);\n        return 'Anthropic';\n      } else if (providerStr.includes('google') || providerStr.includes('gemini')) {\n        console.log('WriterMenu: Inferred Google from provider content for ID:', providerId);\n        return 'Google';\n      } else if (providerStr.includes('ollama')) {\n        console.log('WriterMenu: Inferred Local/Ollama from provider content for ID:', providerId);\n        return 'Local/Ollama';\n      }\n      \n      console.log('WriterMenu: Could not infer provider type for ID:', providerId);\n    }\n    \n    // Return the original providerId as fallback\n    return providerId;\n  }\n\n  private organizeModelsByFamily(models: string[]): Record<string, string[]> {\n    const families: Record<string, string[]> = {};\n    \n    for (const model of models) {\n        let family = 'Other';\n        const modelLower = model.toLowerCase();\n        \n        // Organize models by family based on naming patterns\n        if (modelLower.includes('gpt-4o')) {\n            family = 'GPT-4o';\n        } else if (modelLower.includes('gpt-4')) {\n            family = 'GPT-4';\n        } else if (modelLower.includes('gpt-3.5')) {\n            family = 'GPT-3.5';\n        } else if (modelLower.includes('claude-3-5')) {\n            family = 'Claude 3.5';\n        } else if (modelLower.includes('claude-3')) {\n            family = 'Claude 3';\n        } else if (modelLower.includes('claude-2')) {\n            family = 'Claude 2';\n        } else if (modelLower.includes('claude')) {\n            family = 'Claude';\n        } else if (modelLower.includes('gemini-pro')) {\n            family = 'Gemini Pro';\n        } else if (modelLower.includes('gemini')) {\n            family = 'Gemini';\n        } else if (modelLower.includes('llama-3')) {\n            family = 'Llama 3';\n        } else if (modelLower.includes('llama')) {\n            family = 'Llama';\n        } else if (modelLower.includes('mistral')) {\n            family = 'Mistral';\n        } else if (modelLower.includes('codellama')) {\n            family = 'Code Llama';\n        } else if (modelLower.includes('phi')) {\n            family = 'Phi';\n        } else if (modelLower.includes('qwen')) {\n            family = 'Qwen';\n        } else if (modelLower.includes('mixtral')) {\n            family = 'Mixtral';\n        }\n        \n        if (!families[family]) {\n            families[family] = [];\n        }\n        families[family].push(model);\n    }\n    \n    return families;\n  }\n\n\n  public updateStatusIndicator(): void {\n    // Status indicator removed - method kept for compatibility\n    return;\n  }\n\n  public updateTokenCounter(used: number, total: number): void {\n    if (!this.tokenCounter) return;\n\n    // Show how much context we've loaded vs total capacity\n    const percentage = (used / total) * 100;\n    \n    // Dynamic color based on percentage - works for any model capacity\n    let color = 'var(--text-muted)';  // Default: plenty of room\n    \n    if (percentage >= 95) {\n      color = 'var(--color-red)';      // Critical: 95%+ full\n    } else if (percentage >= 85) {\n      color = 'var(--color-orange)';   // Warning: 85%+ full  \n    } else if (percentage >= 70) {\n      color = 'var(--color-yellow)';   // Caution: 70%+ full\n    } else if (percentage >= 50) {\n      color = 'var(--text-normal)';    // Active: 50%+ full\n    }\n    // Below 50% stays muted gray\n\n    // Show \"used / total\" - how much context loaded vs capacity\n    this.tokenCounter.textContent = `${used.toLocaleString()} / ${total.toLocaleString()}`;\n    this.tokenCounter.style.color = color;\n  }\n\n  public refreshModelOptions(): void {\n    // Re-populate model options - no longer needed with WriterMenu approach\n    console.log('Model options refresh requested - using WriterMenu system');\n  }\n\n  public setSelectedModel(providerAndModel: string): void {\n    this.plugin.settings.selectedModel = providerAndModel;\n    this.updateModelButtonText(providerAndModel);\n  }\n\n  public getSelectedModel(): { provider: string; model: string } | null {\n    const value = this.plugin.settings.selectedModel;\n    if (!value || !value.includes(':')) {\n      return null;\n    }\n    \n    const [provider, model] = value.split(':', 2);\n    return { provider, model };\n  }\n\n  public refreshAvailableModels(): void {\n    // Called when AI Providers plugin becomes available or providers change\n    console.log('Available models refresh requested - using WriterMenu system');\n  }\n\n  private updateDocumentButtonState(): void {\n    if (!this.documentButton) return;\n    \n    // Get active document\n    const activeFile = this.plugin.app.workspace.getActiveFile();\n    \n    if (!activeFile) {\n      // No active document - gray out button\n      this.documentButton.style.cssText += `\n        color: var(--text-faint) !important;\n        opacity: 0.5 !important;\n      `;\n      // Remove old tooltip and add new one using the same system as other buttons\n      this.documentButton.removeAttribute('title');\n      this.addTooltip(this.documentButton, 'No active document');\n      return;\n    }\n\n    // Check if active document is already in context using same pattern as click handler\n    const chatLeaf = this.plugin.app.workspace.getLeavesOfType('writerr-chat-view')[0];\n    const chatView = chatLeaf?.view;\n    const contextArea = chatView?.contextArea;\n    const documentsInContext = contextArea?.getDocuments() || [];\n    const isInContext = documentsInContext.some((doc: any) => doc.path === activeFile.path);\n    \n    const docName = activeFile.basename; // Use basename to remove .md extension\n    \n    // Remove old tooltip first\n    this.documentButton.removeAttribute('title');\n    \n    if (isInContext) {\n      // Document already in context - HIGHLIGHTED state\n      this.documentButton.style.cssText += `\n        color: var(--interactive-accent) !important;\n        opacity: 1 !important;\n      `;\n      this.addTooltip(this.documentButton, `Remove ${docName} from chat`);\n    } else {\n      // Active document not in context - NORMAL state (ready to add)\n      this.documentButton.style.cssText += `\n        color: var(--text-muted) !important;\n        opacity: 0.8 !important;\n      `;\n      this.addTooltip(this.documentButton, `Add ${docName} to chat`);\n    }\n  }\n\n  // Public method for external updates\n  public refreshDocumentButton(): void {\n    this.updateDocumentButtonState();\n  }\n}", "import { ChatMessage } from '@shared/types';\nimport { BaseComponent } from './BaseComponent';\nimport { ComponentOptions, MessageActionHandler } from './types';\nimport { MessageBubble } from './MessageBubble';\n\ninterface MessageListOptions extends ComponentOptions {\n  actionHandler: MessageActionHandler;\n}\n\nexport class MessageList extends BaseComponent {\n  private actionHandler: MessageActionHandler;\n  private messages: ChatMessage[] = [];\n  private messageBubbles: MessageBubble[] = [];\n\n  constructor(options: MessageListOptions) {\n    super(options);\n    this.actionHandler = options.actionHandler;\n  }\n\n  render(): void {\n    this.createMessageContainer();\n    this.showEmptyState();\n  }\n\n  private createMessageContainer(): void {\n    this.container.style.cssText = `\n      flex: 1;\n      overflow-y: auto;\n      padding: 20px;\n      min-height: 0;\n      scroll-behavior: smooth;\n      position: relative;\n    `;\n\n    // Custom scrollbar styling\n    this.container.addClass('custom-scrollbar');\n    \n    // Add custom scrollbar styles\n    if (!document.querySelector('#custom-scrollbar-styles')) {\n      const style = document.createElement('style');\n      style.id = 'custom-scrollbar-styles';\n      style.textContent = `\n        .custom-scrollbar::-webkit-scrollbar {\n          width: 6px;\n        }\n        .custom-scrollbar::-webkit-scrollbar-track {\n          background: transparent;\n        }\n        .custom-scrollbar::-webkit-scrollbar-thumb {\n          background: var(--scrollbar-thumb-bg);\n          border-radius: 3px;\n          opacity: 0;\n          transition: opacity 0.2s ease;\n        }\n        .custom-scrollbar:hover::-webkit-scrollbar-thumb {\n          opacity: 1;\n        }\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n          background: var(--scrollbar-thumb-hover);\n        }\n      `;\n      document.head.appendChild(style);\n    }\n  }\n\n  private showEmptyState(): void {\n    if (this.messages.length > 0) return;\n\n    const emptyState = this.container.createEl('div', { \n      cls: 'chat-empty-state'\n    });\n    emptyState.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100%;\n      text-align: center;\n      padding: 40px 20px;\n      color: var(--text-muted);\n      gap: 16px;\n    `;\n\n    // Empty state icon\n    const icon = emptyState.createEl('div');\n    icon.innerHTML = `\n      <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\">\n        <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"/>\n        <path d=\"M8 10h8\"/>\n        <path d=\"M8 14h4\"/>\n      </svg>\n    `;\n    icon.style.cssText = `\n      color: var(--text-faint);\n      opacity: 0.6;\n    `;\n\n    const title = emptyState.createEl('h3', { text: 'Start a conversation' });\n    title.style.cssText = `\n      font-size: 18px;\n      font-weight: 500;\n      margin: 0;\n      color: var(--text-muted);\n    `;\n\n    const description = emptyState.createEl('p', { \n      text: 'Type a message below to begin chatting. Select a mode from the header to customize the AI behavior.' \n    });\n    description.style.cssText = `\n      font-size: 14px;\n      margin: 0;\n      max-width: 300px;\n      line-height: 1.5;\n      color: var(--text-faint);\n    `;\n\n    // No starter prompts - just for chatting\n  }\n\n  private hideEmptyState(): void {\n    const emptyState = this.container.querySelector('.chat-empty-state');\n    if (emptyState) {\n      emptyState.remove();\n    }\n  }\n\n  public setMessages(messages: ChatMessage[]): void {\n    this.messages = messages;\n    this.renderMessages();\n  }\n\n  public addMessage(message: ChatMessage): void {\n    this.messages.push(message);\n    this.renderNewMessage(message);\n    this.scrollToBottom();\n  }\n\n  private renderMessages(): void {\n    this.clearMessages();\n    \n    if (this.messages.length === 0) {\n      this.showEmptyState();\n      return;\n    }\n\n    this.hideEmptyState();\n\n    this.messages.forEach(message => {\n      this.renderMessage(message);\n    });\n\n    this.scrollToBottom();\n  }\n\n  private renderNewMessage(message: ChatMessage): void {\n    this.hideEmptyState();\n    this.renderMessage(message, true);\n  }\n\n  private renderMessage(message: ChatMessage, animate: boolean = false): void {\n    const messageContainer = this.container.createEl('div');\n    \n    if (animate) {\n      messageContainer.style.opacity = '0';\n      messageContainer.style.transform = 'translateY(20px)';\n      messageContainer.style.transition = 'all 0.3s ease';\n      \n      // Animate in\n      setTimeout(() => {\n        messageContainer.style.opacity = '1';\n        messageContainer.style.transform = 'translateY(0)';\n      }, 50);\n    }\n\n    const messageBubble = new MessageBubble({\n      plugin: this.plugin,\n      container: messageContainer,\n      message,\n      actionHandler: this.actionHandler\n    });\n\n    messageBubble.render();\n    this.messageBubbles.push(messageBubble);\n  }\n\n  private clearMessages(): void {\n    // Destroy existing message bubbles\n    this.messageBubbles.forEach(bubble => bubble.destroy());\n    this.messageBubbles = [];\n    \n    // Clear container\n    this.container.empty();\n    this.createMessageContainer();\n  }\n\n  private scrollToBottom(smooth: boolean = true): void {\n    requestAnimationFrame(() => {\n      const scrollOptions: ScrollToOptions = {\n        top: this.container.scrollHeight,\n        behavior: smooth ? 'smooth' : 'auto'\n      };\n      this.container.scrollTo(scrollOptions);\n    });\n  }\n\n  public updateMessage(messageIndex: number, newMessage: ChatMessage): void {\n    if (messageIndex < 0 || messageIndex >= this.messages.length) return;\n\n    this.messages[messageIndex] = newMessage;\n    \n    // Re-render the specific message\n    const messageBubble = this.messageBubbles[messageIndex];\n    if (messageBubble) {\n      messageBubble.destroy();\n      \n      const messageContainer = this.container.children[messageIndex] as HTMLElement;\n      if (messageContainer) {\n        const newBubble = new MessageBubble({\n          plugin: this.plugin,\n          container: messageContainer,\n          message: newMessage,\n          actionHandler: this.actionHandler\n        });\n        \n        newBubble.render();\n        this.messageBubbles[messageIndex] = newBubble;\n      }\n    }\n  }\n\n  public removeMessage(messageIndex: number): void {\n    if (messageIndex < 0 || messageIndex >= this.messages.length) return;\n\n    // Remove from messages array\n    this.messages.splice(messageIndex, 1);\n    \n    // Remove bubble\n    const messageBubble = this.messageBubbles[messageIndex];\n    if (messageBubble) {\n      const messageContainer = messageBubble.container;\n      \n      // Animate out\n      messageContainer.style.animation = 'messageSlideOut 0.3s ease forwards';\n      \n      // Add animation styles\n      if (!document.querySelector('#message-animations')) {\n        const style = document.createElement('style');\n        style.id = 'message-animations';\n        style.textContent = `\n          @keyframes messageSlideOut {\n            from {\n              opacity: 1;\n              transform: translateX(0);\n              max-height: 200px;\n              margin: 16px 0;\n            }\n            to {\n              opacity: 0;\n              transform: translateX(100px);\n              max-height: 0;\n              margin: 0;\n            }\n          }\n        `;\n        document.head.appendChild(style);\n      }\n\n      setTimeout(() => {\n        messageBubble.destroy();\n        this.messageBubbles.splice(messageIndex, 1);\n        \n        if (this.messages.length === 0) {\n          this.showEmptyState();\n        }\n      }, 300);\n    }\n  }\n\n  public getMessages(): ChatMessage[] {\n    return [...this.messages];\n  }\n\n  public isEmpty(): boolean {\n    return this.messages.length === 0;\n  }\n\n  destroy(): void {\n    this.messageBubbles.forEach(bubble => bubble.destroy());\n    this.messageBubbles = [];\n    super.destroy();\n  }\n}", "import { BaseComponent } from './BaseComponent';\nimport { ComponentOptions } from './types';\nimport { ChatSession } from '@shared/types';\n\ninterface SessionManagerOptions extends ComponentOptions {\n  onSessionSelect: (sessionId: string) => void;\n  onSessionDelete: (sessionId: string) => void;\n  onNewSession: () => void;\n}\n\nexport class SessionManager extends BaseComponent {\n  private overlay: HTMLElement;\n  private modal: HTMLElement;\n  private onSessionSelect: (sessionId: string) => void;\n  private onSessionDelete: (sessionId: string) => void;\n  private onNewSession: () => void;\n\n  constructor(options: SessionManagerOptions) {\n    super(options);\n    this.onSessionSelect = options.onSessionSelect;\n    this.onSessionDelete = options.onSessionDelete;\n    this.onNewSession = options.onNewSession;\n  }\n\n  render(): void {\n    this.createOverlay();\n    this.createModal();\n    this.createHeader();\n    this.createSessionList();\n    this.createNewSessionButton();\n    this.setupEventHandlers();\n  }\n\n  private createOverlay(): void {\n    this.overlay = this.container.createEl('div', { cls: 'session-manager-overlay' });\n    this.overlay.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: rgba(0, 0, 0, 0.6);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 1000;\n      backdrop-filter: blur(4px);\n      animation: fadeIn 0.2s ease;\n    `;\n\n    // Add fade animation\n    if (!document.querySelector('#session-manager-animations')) {\n      const style = document.createElement('style');\n      style.id = 'session-manager-animations';\n      style.textContent = `\n        @keyframes fadeIn {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n        @keyframes modalSlideIn {\n          from {\n            opacity: 0;\n            transform: translateY(-20px) scale(0.95);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0) scale(1);\n          }\n        }\n        @keyframes sessionSlideIn {\n          from {\n            opacity: 0;\n            transform: translateX(-10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateX(0);\n          }\n        }\n      `;\n      document.head.appendChild(style);\n    }\n  }\n\n  private createModal(): void {\n    this.modal = this.overlay.createEl('div', { cls: 'session-manager-modal' });\n    this.modal.style.cssText = `\n      background: var(--background-primary);\n      border: 1px solid var(--background-modifier-border);\n      border-radius: 12px;\n      padding: 0;\n      min-width: 400px;\n      max-width: 500px;\n      max-height: 600px;\n      overflow: hidden;\n      box-shadow: 0 12px 32px rgba(0, 0, 0, 0.3);\n      animation: modalSlideIn 0.3s ease;\n      display: flex;\n      flex-direction: column;\n    `;\n  }\n\n  private createHeader(): void {\n    const header = this.modal.createEl('div', { cls: 'session-manager-header' });\n    header.style.cssText = `\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 20px 24px;\n      border-bottom: 1px solid var(--background-modifier-border);\n      background: var(--background-primary);\n    `;\n\n    const titleSection = header.createEl('div');\n    titleSection.style.cssText = 'display: flex; align-items: center; gap: 12px;';\n\n    const icon = titleSection.createEl('div');\n    icon.innerHTML = `\n      <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\"/>\n        <path d=\"M3 3v5h5\"/>\n        <path d=\"M12 7v5l4 2\"/>\n      </svg>\n    `;\n    icon.style.cssText = 'color: var(--interactive-accent);';\n\n    const title = titleSection.createEl('h3', { text: 'Chat Sessions' });\n    title.style.cssText = `\n      margin: 0;\n      color: var(--text-normal);\n      font-size: 18px;\n      font-weight: 500;\n    `;\n\n    const closeButton = header.createEl('button');\n    closeButton.innerHTML = `\n      <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M18 6L6 18\"/>\n        <path d=\"M6 6l12 12\"/>\n      </svg>\n    `;\n    closeButton.style.cssText = `\n      background: none;\n      border: none;\n      cursor: pointer;\n      color: var(--text-muted);\n      padding: 6px;\n      border-radius: 6px;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    `;\n    closeButton.onclick = () => this.close();\n\n    this.addHoverEffect(closeButton, {\n      'background-color': 'var(--background-modifier-hover)',\n      'color': 'var(--text-normal)'\n    });\n  }\n\n  private createSessionList(): void {\n    const sessionListContainer = this.modal.createEl('div', { cls: 'session-list-container' });\n    sessionListContainer.style.cssText = `\n      flex: 1;\n      overflow-y: auto;\n      padding: 16px 0;\n      max-height: 400px;\n    `;\n\n    const sessionsList = sessionListContainer.createEl('div', { cls: 'sessions-list' });\n    const sessions = this.plugin.getChatSessions();\n    \n    if (sessions.length === 0) {\n      this.createEmptySessionsState(sessionsList);\n    } else {\n      this.renderSessions(sessionsList, sessions);\n    }\n  }\n\n  private createEmptySessionsState(container: HTMLElement): void {\n    const emptyState = container.createEl('div', { cls: 'empty-sessions-state' });\n    emptyState.style.cssText = `\n      text-align: center;\n      padding: 40px 20px;\n      color: var(--text-muted);\n    `;\n\n    const icon = emptyState.createEl('div');\n    icon.innerHTML = `\n      <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\">\n        <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"/>\n      </svg>\n    `;\n    icon.style.cssText = `\n      color: var(--text-faint);\n      margin-bottom: 16px;\n      opacity: 0.6;\n    `;\n\n    emptyState.createEl('p', { \n      text: 'No chat sessions yet. Start a conversation to create your first session.'\n    });\n  }\n\n  private renderSessions(container: HTMLElement, sessions: ChatSession[]): void {\n    sessions.forEach((session, index) => {\n      const sessionItem = container.createEl('div', { cls: 'session-item' });\n      sessionItem.style.cssText = `\n        padding: 16px 24px;\n        cursor: pointer;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        border-bottom: 1px solid var(--background-modifier-border-focus);\n        transition: all 0.2s ease;\n        position: relative;\n        animation: sessionSlideIn 0.3s ease forwards;\n        animation-delay: ${index * 0.05}s;\n        opacity: 0;\n      `;\n      \n      // Highlight current session\n      if (this.plugin.currentSession?.id === session.id) {\n        sessionItem.style.backgroundColor = 'var(--background-modifier-hover)';\n        sessionItem.style.borderLeft = '3px solid var(--interactive-accent)';\n        sessionItem.style.paddingLeft = '21px';\n      }\n\n      const sessionInfo = sessionItem.createEl('div', { cls: 'session-info' });\n      sessionInfo.style.cssText = 'flex: 1; min-width: 0;';\n\n      const sessionTitle = sessionInfo.createEl('div', { \n        text: session.title || `Session ${sessions.indexOf(session) + 1}`,\n        cls: 'session-title' \n      });\n      sessionTitle.style.cssText = `\n        font-weight: 500;\n        color: var(--text-normal);\n        margin-bottom: 4px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      `;\n\n      const sessionMeta = sessionInfo.createEl('div', { cls: 'session-meta' });\n      sessionMeta.style.cssText = `\n        display: flex;\n        align-items: center;\n        gap: 12px;\n        font-size: 12px;\n        color: var(--text-muted);\n      `;\n\n      const messageCount = session.messages?.length || 0;\n      const messageCountEl = sessionMeta.createEl('span', { \n        text: `${messageCount} message${messageCount !== 1 ? 's' : ''}`\n      });\n\n      if (session.messages && session.messages.length > 0) {\n        const lastMessage = session.messages[session.messages.length - 1];\n        const lastMessageTime = new Date(lastMessage.timestamp);\n        const timeAgo = this.getTimeAgo(lastMessageTime);\n        \n        sessionMeta.createEl('span', { text: '\u2022' });\n        sessionMeta.createEl('span', { text: timeAgo });\n      }\n\n      // Actions section\n      const actionsSection = sessionItem.createEl('div', { cls: 'session-actions' });\n      actionsSection.style.cssText = `\n        display: flex;\n        gap: 4px;\n        opacity: 0;\n        transition: opacity 0.2s ease;\n      `;\n\n      const deleteBtn = actionsSection.createEl('button', { cls: 'session-delete-btn' });\n      deleteBtn.innerHTML = `\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <polyline points=\"3 6 5 6 21 6\"/>\n          <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/>\n        </svg>\n      `;\n      deleteBtn.title = 'Delete session';\n      deleteBtn.style.cssText = `\n        background: none;\n        border: none;\n        cursor: pointer;\n        color: var(--text-muted);\n        padding: 6px;\n        border-radius: 4px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: all 0.2s ease;\n      `;\n\n      // Event handlers\n      sessionItem.onclick = (e) => {\n        if (e.target === deleteBtn || deleteBtn.contains(e.target as Node)) return;\n        this.onSessionSelect(session.id);\n        this.close();\n      };\n\n      deleteBtn.onclick = (e) => {\n        e.stopPropagation();\n        this.confirmDeleteSession(session);\n      };\n\n      // Hover effects\n      sessionItem.addEventListener('mouseenter', () => {\n        if (this.plugin.currentSession?.id !== session.id) {\n          sessionItem.style.backgroundColor = 'var(--background-modifier-hover)';\n        }\n        actionsSection.style.opacity = '1';\n      });\n\n      sessionItem.addEventListener('mouseleave', () => {\n        if (this.plugin.currentSession?.id !== session.id) {\n          sessionItem.style.backgroundColor = 'transparent';\n        }\n        actionsSection.style.opacity = '0';\n      });\n\n      this.addHoverEffect(deleteBtn, {\n        'background-color': 'var(--background-modifier-error)',\n        'color': 'var(--text-on-accent)'\n      });\n    });\n  }\n\n  private createNewSessionButton(): void {\n    const buttonContainer = this.modal.createEl('div');\n    buttonContainer.style.cssText = `\n      padding: 16px 24px;\n      border-top: 1px solid var(--background-modifier-border);\n      background: var(--background-primary);\n    `;\n\n    const newSessionBtn = buttonContainer.createEl('button', { cls: 'new-session-button' });\n    newSessionBtn.innerHTML = `\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M12 5v14\"/>\n        <path d=\"M5 12h14\"/>\n      </svg>\n      <span>New Session</span>\n    `;\n    newSessionBtn.style.cssText = `\n      width: 100%;\n      padding: 12px 16px;\n      background: var(--interactive-accent);\n      color: var(--text-on-accent);\n      border: none;\n      border-radius: 8px;\n      cursor: pointer;\n      font-weight: 500;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 8px;\n      transition: all 0.2s ease;\n    `;\n\n    newSessionBtn.onclick = () => {\n      this.onNewSession();\n      this.close();\n    };\n\n    this.addHoverEffect(newSessionBtn, {\n      'transform': 'translateY(-1px)',\n      'box-shadow': '0 4px 12px rgba(0, 0, 0, 0.15)'\n    });\n  }\n\n  private confirmDeleteSession(session: ChatSession): void {\n    const messageCount = session.messages?.length || 0;\n    const confirmMessage = `Delete \"${session.title || 'Untitled Session'}\"?\\n\\nThis will permanently delete ${messageCount} message${messageCount !== 1 ? 's' : ''}.`;\n    \n    if (confirm(confirmMessage)) {\n      this.onSessionDelete(session.id);\n      // Refresh the session list\n      this.modal.empty();\n      this.createModal();\n      this.createHeader();\n      this.createSessionList();\n      this.createNewSessionButton();\n    }\n  }\n\n  private setupEventHandlers(): void {\n    this.overlay.onclick = (e) => {\n      if (e.target === this.overlay) {\n        this.close();\n      }\n    };\n\n    // ESC key to close\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  private handleKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      this.close();\n    }\n  };\n\n  private getTimeAgo(date: Date): string {\n    const now = new Date();\n    const diffInMs = now.getTime() - date.getTime();\n    const diffInMinutes = Math.floor(diffInMs / 60000);\n    \n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    \n    const diffInHours = Math.floor(diffInMinutes / 60);\n    if (diffInHours < 24) return `${diffInHours}h ago`;\n    \n    const diffInDays = Math.floor(diffInHours / 24);\n    if (diffInDays < 7) return `${diffInDays}d ago`;\n    \n    return date.toLocaleDateString();\n  }\n\n  public show(): void {\n    this.render();\n  }\n\n  public close(): void {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    \n    // Animate out\n    this.overlay.style.animation = 'fadeOut 0.2s ease forwards';\n    \n    // Add fadeOut animation\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes fadeOut {\n        from { opacity: 1; }\n        to { opacity: 0; }\n      }\n    `;\n    document.head.appendChild(style);\n\n    setTimeout(() => {\n      this.destroy();\n      document.head.removeChild(style);\n    }, 200);\n  }\n\n  destroy(): void {\n    if (this.overlay && this.overlay.parentNode) {\n      this.overlay.parentNode.removeChild(this.overlay);\n    }\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n}"],
  "mappings": "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",
  "names": ["import_obsidian", "import_obsidian", "addTooltipToComponent", "import_obsidian", "import_obsidian", "_a", "_b", "displayNames", "_a", "generateId", "_a"]
}
