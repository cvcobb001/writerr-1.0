{
  "version": 3,
  "sources": ["../../shared/utils/index.ts", "src/main.ts", "src/settings.ts", "src/chat-view.ts", "src/components/BaseComponent.ts", "src/components/MessageBubble.ts", "src/components/ChatHeader.ts", "src/components/ContextArea.ts", "src/components/ChatInput.ts", "src/components/ChatToolbar.ts", "src/components/MessageList.ts", "src/components/SessionManager.ts"],
  "sourcesContent": ["// Shared utilities for all Writerr Obsidian plugins\n\nexport function generateId(): string {\n  return Math.random().toString(36).substr(2, 9);\n}\n\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: NodeJS.Timeout;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n}\n\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): (...args: Parameters<T>) => void {\n  let inThrottle: boolean;\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n}\n\nexport function formatTimestamp(timestamp: number): string {\n  return new Date(timestamp).toLocaleString();\n}\n\nexport function getWordCount(text: string): number {\n  return text.trim().split(/\\s+/).filter(word => word.length > 0).length;\n}\n\nexport function getCharacterCount(text: string): number {\n  return text.length;\n}\n\nexport function sanitizeFilename(filename: string): string {\n  return filename.replace(/[^a-z0-9]/gi, '_').toLowerCase();\n}\n\nexport function exportToJSON(data: any): string {\n  return JSON.stringify(data, null, 2);\n}\n\nexport function parseMarkdown(content: string): { frontmatter: Record<string, any>; body: string } {\n  const frontmatterRegex = /^---\\s*\\n(.*?)\\n---\\s*\\n(.*)$/s;\n  const match = content.match(frontmatterRegex);\n  \n  if (match) {\n    try {\n      const frontmatter = JSON.parse(match[1]);\n      return { frontmatter, body: match[2] };\n    } catch {\n      // If JSON parsing fails, treat as YAML or plain text\n      return { frontmatter: {}, body: content };\n    }\n  }\n  \n  return { frontmatter: {}, body: content };\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}", "import { Plugin, WorkspaceLeaf, TFile, Notice, Modal } from 'obsidian';\nimport { WriterrlChatSettingsTab } from './settings';\nimport { ChatView, VIEW_TYPE_CHAT } from './chat-view';\nimport { ChatSession, ChatMessage, AIProvider, WriterrlGlobalAPI, IntakePayload } from '@shared/types';\nimport { generateId } from '@shared/utils';\n\n// Enhanced types for Editorial Engine integration\ninterface ParsedMessage {\n  originalContent: string;\n  intent: 'chat' | 'edit' | 'improve' | 'analyze';\n  mode: string;\n  selection?: string;\n  hasEditingRequest: boolean;\n}\n\ninterface WriterrlChatSettings {\n  defaultProvider: string;\n  providers: AIProvider[];\n  chatPosition: 'right' | 'left' | 'floating';\n  autoSaveChats: boolean;\n  contextLines: number;\n  maxTokens: number;\n  temperature: number;\n  enableMarkdown: boolean;\n  showTimestamps: boolean;\n  theme: 'default' | 'compact' | 'minimal';\n}\n\nconst DEFAULT_SETTINGS: WriterrlChatSettings = {\n  defaultProvider: 'openai',\n  providers: [\n    {\n      id: 'openai',\n      name: 'OpenAI',\n      model: 'gpt-4',\n      baseUrl: 'https://api.openai.com/v1',\n      apiKey: ''\n    }\n  ],\n  chatPosition: 'right',\n  autoSaveChats: true,\n  contextLines: 10,\n  maxTokens: 2000,\n  temperature: 0.7,\n  enableMarkdown: true,\n  showTimestamps: true,\n  theme: 'default'\n};\n\n// Build verification system\nconst BUILD_TIMESTAMP = Date.now();\nconst BUILD_VERSION = \"v2.0.1-fix-ai-providers\";\nconsole.log(`\uD83D\uDD27 Writerr Chat Build: ${BUILD_VERSION} (${new Date(BUILD_TIMESTAMP).toISOString()})`);\n\nexport default class WriterrlChatPlugin extends Plugin {\n  settings: WriterrlChatSettings;\n  currentSession: ChatSession | null = null;\n  chatSessions: Map<string, ChatSession> = new Map();\n\n  async onload() {\n    console.log(`\uD83D\uDE80 LOADING Writerr Chat ${BUILD_VERSION} - Build: ${new Date(BUILD_TIMESTAMP).toISOString()}`);\n    \n    await this.loadSettings();\n\n    // Force load CSS styles\n    this.loadCustomStyles();\n\n    // Initialize global API\n    this.initializeGlobalAPI();\n\n    // Register view\n    this.registerView(VIEW_TYPE_CHAT, (leaf) => new ChatView(leaf, this));\n\n    // Add commands\n    this.addCommands();\n\n    // Add ribbon icon\n    this.addRibbonIcon('message-circle', 'Open Writerr Chat', () => {\n      this.openChat();\n    });\n\n    // Add settings tab\n    this.addSettingTab(new WriterrlChatSettingsTab(this.app, this));\n\n    // Load chat sessions\n    await this.loadChatSessions();\n\n    // Listen for Editorial Engine availability\n    this.listenForEditorialEngine();\n\n    console.log(`\u2705 LOADED Writerr Chat ${BUILD_VERSION} successfully`);\n  }\n\n  private loadCustomStyles(): void {\n    const styles = `\n/* Nuclear CSS - Override EVERYTHING */\n.writerr-send-button,\n.writerr-toolbar-button,\n.writerr-context-action,\n.context-add-button,\n.writerr-message-actions button,\n.chat-control-button {\n  background: none !important;\n  border: none !important;\n  box-shadow: none !important;\n  outline: none !important;\n  padding: 0 !important;\n  margin: 0 !important;\n  cursor: pointer !important;\n  color: var(--text-muted) !important;\n  transition: color 0.2s ease !important;\n}\n\n/* Send Button - Lifted off the edges */\n.writerr-send-button {\n  position: absolute !important;\n  right: 16px !important;\n  bottom: 16px !important;\n  padding: 8px !important;\n  border-radius: var(--radius-s) !important;\n}\n\n.writerr-send-button:hover:not(:disabled) {\n  color: var(--interactive-accent) !important;\n  background: var(--background-modifier-hover) !important;\n}\n\n.writerr-send-button:disabled {\n  color: var(--text-faint) !important;\n  cursor: not-allowed !important;\n}\n\n.writerr-send-icon {\n  width: 16px !important;\n  height: 16px !important;\n  stroke-width: 2 !important;\n}\n\n/* Bottom Toolbar - Larger Icons, Closer Together */\n.writerr-toolbar-left {\n  display: flex !important;\n  align-items: center !important;\n  gap: 8px !important;\n  margin-left: 8px !important;\n}\n\n/* Toolbar Right - Adjusted spacing for dropdowns */\n.toolbar-right {\n  display: flex !important;\n  align-items: center !important;\n  gap: 6px !important;\n  margin-right: 8px !important;\n}\n\n.writerr-toolbar-button {\n  padding: 8px !important;\n  border-radius: var(--radius-s) !important;\n}\n\n.writerr-toolbar-button:hover {\n  color: var(--text-normal) !important;\n  background: var(--background-modifier-hover) !important;\n}\n\n.writerr-toolbar-icon {\n  width: 18px !important;\n  height: 18px !important;\n  stroke-width: 2 !important;\n}\n\n/* Chat Input Container - NO BORDERS */\n.chat-input-container {\n  border-top: none !important;\n  border-bottom: none !important;\n  border: none !important;\n}\n\n.chat-message-input {\n  border: 1px solid var(--background-modifier-border) !important;\n  padding-right: 60px !important;\n}\n\n/* Context Area - Light Border Above */\n.context-header {\n  border-top: 1px solid var(--background-modifier-border) !important;\n  padding-top: 8px !important;\n}\n\n/* Header - NO CARET */\n.writerr-chat-header-left {\n  display: flex !important;\n  align-items: center !important;\n  gap: 12px !important;\n}\n\n.writerr-mode-select-wrapper {\n  display: flex !important;\n  align-items: center !important;\n  cursor: pointer !important;\n}\n\n.writerr-mode-select {\n  background: none !important;\n  border: none !important;\n  padding: 0 !important;\n  margin: 0 !important;\n  font-size: 18px !important;\n  font-weight: 500 !important;\n  color: var(--text-normal) !important;\n  cursor: pointer !important;\n  outline: none !important;\n  box-shadow: none !important;\n  appearance: none !important;\n  -webkit-appearance: none !important;\n  -moz-appearance: none !important;\n}\n\n/* REMOVE THE CARET COMPLETELY */\n.writerr-mode-caret {\n  display: none !important;\n}\n\n/* Token Counter - Force Monospace */\n.writerr-token-count {\n  font-size: var(--font-ui-smaller) !important;\n  color: var(--text-muted) !important;\n  font-variant-numeric: tabular-nums !important;\n  font-family: var(--font-monospace) !important;\n  font-feature-settings: \"tnum\" !important;\n  margin-right: 8px !important;\n}\n\n/* Context Add Button - Clean Plus */\n.context-add-button {\n  padding: 4px !important;\n  border-radius: var(--radius-s) !important;\n}\n\n.context-add-button:hover {\n  color: var(--text-normal) !important;\n  background: var(--background-modifier-hover) !important;\n}\n\n/* Context Action Button */\n.writerr-context-action {\n  padding: 4px !important;\n  position: absolute !important;\n  top: 8px !important;\n  right: 16px !important;\n  z-index: 10 !important;\n  border-radius: var(--radius-s) !important;\n}\n\n.writerr-context-action:hover {\n  color: var(--text-normal) !important;\n  background: var(--background-modifier-hover) !important;\n}\n\n.writerr-context-action:disabled {\n  opacity: 0.5 !important;\n  cursor: not-allowed !important;\n  pointer-events: none !important;\n}\n\n.writerr-context-action-icon {\n  width: 14px !important;\n  height: 14px !important;\n  stroke-width: 2 !important;\n}\n\n/* Message Icons */\n.writerr-message-icon {\n  display: flex !important;\n  align-items: center !important;\n  justify-content: center !important;\n  width: 32px !important;\n  height: 32px !important;\n  flex-shrink: 0 !important;\n  color: var(--text-muted) !important;\n}\n\n.writerr-message-avatar {\n  width: 20px !important;\n  height: 20px !important;\n  stroke-width: 2 !important;\n}\n\n/* Message Actions */\n.writerr-message-actions {\n  display: flex !important;\n  gap: 4px !important;\n  margin-top: 6px !important;\n  opacity: 1 !important;\n  pointer-events: auto !important;\n}\n\n.writerr-message-actions button {\n  padding: 4px !important;\n  border-radius: var(--radius-s) !important;\n}\n\n.writerr-message-actions button:hover {\n  color: var(--text-normal) !important;\n  background: var(--background-modifier-hover) !important;\n}\n\n.writerr-action-icon {\n  width: 14px !important;\n  height: 14px !important;\n  stroke-width: 2 !important;\n}\n\n/* Chat Control Buttons - Header Icons */\n.chat-control-button {\n  padding: 8px !important;\n  border-radius: var(--radius-s) !important;\n}\n\n.chat-control-button:hover {\n  color: var(--text-normal) !important;\n  background: var(--background-modifier-hover) !important;\n}\n`;\n\n    // Remove any existing styles first\n    const existing = document.getElementById('writerr-chat-styles');\n    if (existing) existing.remove();\n\n    const styleEl = document.createElement('style');\n    styleEl.id = 'writerr-chat-styles';\n    styleEl.textContent = styles;\n    document.head.appendChild(styleEl);\n    \n    console.log('Writerr Chat: Fixed context button positioning and send icon spacing');\n  }\n\n  onunload() {\n    this.cleanupGlobalAPI();\n    console.log('Writerr Chat plugin unloaded');\n  }\n\n  async loadSettings() {\n    this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());\n  }\n\n  async saveSettings() {\n    await this.saveData(this.settings);\n    // Note: Settings now used directly with AI Providers plugin\n  }\n\n  private initializeGlobalAPI() {\n    if (!window.WriterrlAPI) {\n      window.WriterrlAPI = {} as WriterrlGlobalAPI;\n    }\n\n    window.WriterrlAPI.chat = {\n      openChat: () => this.openChat(),\n      sendMessage: (message: string, context?: string) => this.sendMessage(message, context),\n      getCurrentSession: () => this.currentSession\n    };\n  }\n\n  private cleanupGlobalAPI() {\n    if (window.WriterrlAPI && window.WriterrlAPI.chat) {\n      delete window.WriterrlAPI.chat;\n    }\n  }\n\n  private addCommands() {\n    this.addCommand({\n      id: 'open-chat',\n      name: 'Open chat',\n      callback: () => this.openChat()\n    });\n\n    this.addCommand({\n      id: 'new-chat-session',\n      name: 'New chat session',\n      callback: () => this.newChatSession()\n    });\n\n    this.addCommand({\n      id: 'chat-with-selection',\n      name: 'Chat with selected text',\n      editorCallback: (editor) => {\n        const selection = editor.getSelection();\n        if (selection) {\n          this.chatWithSelection(selection);\n        } else {\n          new Notice('No text selected');\n        }\n      }\n    });\n\n    this.addCommand({\n      id: 'quick-chat',\n      name: 'Quick chat',\n      callback: () => this.quickChat()\n    });\n  }\n\n  async openChat() {\n    const existingLeaf = this.app.workspace.getLeavesOfType(VIEW_TYPE_CHAT)[0];\n    \n    if (existingLeaf) {\n      this.app.workspace.revealLeaf(existingLeaf);\n      return;\n    }\n\n    try {\n      // Open in right sidebar as per design reference\n      const leaf = this.app.workspace.getRightLeaf(false);\n      \n      if (leaf) {\n        await leaf.setViewState({\n          type: VIEW_TYPE_CHAT,\n          active: true\n        });\n        this.app.workspace.revealLeaf(leaf);\n        return;\n      }\n\n      // Fallback: Create new leaf in right sidebar\n      const rightLeaf = this.app.workspace.getLeaf('split', 'right');\n      if (rightLeaf) {\n        await rightLeaf.setViewState({\n          type: VIEW_TYPE_CHAT,\n          active: true\n        });\n        this.app.workspace.revealLeaf(rightLeaf);\n        return;\n      }\n\n      console.error('Failed to create chat view in sidebar');\n\n    } catch (error) {\n      console.error('Error opening chat view:', error);\n    }\n  }\n\n  newChatSession() {\n    this.currentSession = {\n      id: generateId(),\n      title: `Chat ${new Date().toLocaleDateString()}`,\n      messages: [],\n      createdAt: Date.now(),\n      updatedAt: Date.now()\n    };\n\n    this.chatSessions.set(this.currentSession.id, this.currentSession);\n    this.saveChatSessions();\n  }\n\n  async chatWithSelection(selectedText: string) {\n    await this.openChat();\n    \n    if (!this.currentSession) {\n      this.newChatSession();\n    }\n\n    const contextMessage = `Here's the selected text I'd like to discuss:\\n\\n${selectedText}\\n\\nWhat would you like to know about this text?`;\n    await this.sendMessage(contextMessage);\n  }\n\n  async quickChat() {\n    const modal = new QuickChatModal(this.app, async (message: string) => {\n      if (!this.currentSession) {\n        this.newChatSession();\n      }\n      await this.sendMessage(message);\n    });\n    modal.open();\n  }\n\n  async sendMessage(content: string, selectedMode?: string, context?: string): Promise<void> {\n    if (!this.currentSession) {\n      this.newChatSession();\n    }\n\n    if (!this.currentSession) return;\n\n    // Parse message for intent and mode selection\n    const parsedMessage = this.parseMessageIntent(content);\n    \n    // Override mode if explicitly provided from UI\n    if (selectedMode && selectedMode !== 'chat') {\n      parsedMessage.mode = selectedMode;\n    }\n\n    // Add user message\n    const userMessage: ChatMessage = {\n      id: generateId(),\n      role: 'user',\n      content,\n      timestamp: Date.now(),\n      metadata: {\n        intent: parsedMessage.intent,\n        requestedMode: parsedMessage.mode,\n        selectedMode: selectedMode,\n        hasSelection: !!parsedMessage.selection\n      }\n    };\n\n    this.currentSession.messages.push(userMessage);\n\n    // Get context from current file if requested\n    let fullContext = context;\n    if (!fullContext && this.settings.contextLines > 0) {\n      fullContext = await this.getDocumentContext();\n    }\n\n    try {\n      // Route based on selected mode from UI\n      if (selectedMode && selectedMode !== 'chat') {\n        // Use Editorial Engine for specific modes\n        await this.processWithEditorialEngine(parsedMessage, fullContext);\n      } else if (parsedMessage.intent === 'edit' || parsedMessage.intent === 'improve') {\n        // Fallback: Use Editorial Engine for detected editing intent\n        await this.processWithEditorialEngine(parsedMessage, fullContext);\n      } else {\n        // Standard chat processing (Chat mode or general conversation)\n        await this.processWithAIProvider(parsedMessage, fullContext);\n      }\n\n      this.currentSession.updatedAt = Date.now();\n\n      if (this.settings.autoSaveChats) {\n        await this.saveChatSessions();\n      }\n\n      // Refresh chat view if open\n      this.refreshChatView();\n\n      // Emit chat event\n      if (window.Writerr?.events) {\n        window.Writerr.events.emit('chat.response-ready', {\n          requestId: userMessage.id,\n          response: this.currentSession.messages[this.currentSession.messages.length - 1]\n        });\n      }\n\n    } catch (error) {\n      new Notice(`Error sending message: ${error.message}`);\n      console.error('Chat error:', error);\n      \n      // Add error message to chat\n      const errorMessage: ChatMessage = {\n        id: generateId(),\n        role: 'assistant',\n        content: `I encountered an error: ${error.message}. Please try again.`,\n        timestamp: Date.now(),\n        metadata: {\n          error: true,\n          errorMessage: error.message\n        }\n      };\n      \n      this.currentSession.messages.push(errorMessage);\n      this.refreshChatView();\n    }\n  }    // Get context from current file if requested\\n    let fullContext = context;\\n    if (!fullContext && this.settings.contextLines > 0) {\\n      fullContext = await this.getDocumentContext();\\n    }\\n\\n    try {\\n      // Check if this should be processed through Editorial Engine\\n      if (parsedMessage.intent === 'edit' || parsedMessage.intent === 'improve') {\\n        await this.processWithEditorialEngine(parsedMessage, fullContext);\\n      } else {\\n        // Standard chat processing\\n        await this.processWithAIProvider(parsedMessage, fullContext);\\n      }\\n\\n      this.currentSession.updatedAt = Date.now();\\n\\n      if (this.settings.autoSaveChats) {\\n        await this.saveChatSessions();\\n      }\\n\\n      // Refresh chat view if open\\n      this.refreshChatView();\\n\\n      // Emit chat event\\n      if (window.Writerr?.events) {\\n        window.Writerr.events.emit('chat.response-ready', {\\n          requestId: userMessage.id,\\n          response: this.currentSession.messages[this.currentSession.messages.length - 1]\\n        });\\n      }\\n\\n    } catch (error) {\\n      new Notice(`Error sending message: ${error.message}`);\\n      console.error('Chat error:', error);\\n      \\n      // Add error message to chat\\n      const errorMessage: ChatMessage = {\\n        id: generateId(),\\n        role: 'assistant',\\n        content: `I encountered an error: ${error.message}. Please try again.`,\\n        timestamp: Date.now(),\\n        metadata: {\\n          error: true,\\n          errorMessage: error.message\\n        }\\n      };\\n      \\n      this.currentSession.messages.push(errorMessage);\\n      this.refreshChatView();\\n    }\\n  }\n\n  private parseMessageIntent(content: string): ParsedMessage {\n    const lowerContent = content.toLowerCase();\n    \n    // Extract potential text selection (common patterns)\n    const selectionMatch = content.match(/[\"']([^\"']+)[\"']|`([^`]+)`/);\n    const selection = selectionMatch?.[1] || selectionMatch?.[2];\n    \n    // Extract mode requests\n    const modeMatch = content.match(/(?:use|with|in)\\s+(proofreader|copy-editor|developmental-editor|creative-writing-assistant)\\s+mode/i);\n    const requestedMode = modeMatch?.[1];\n    \n    // Determine intent based on keywords\n    let intent: 'chat' | 'edit' | 'improve' | 'analyze' = 'chat';\n    \n    if (lowerContent.includes('edit') || lowerContent.includes('fix') || lowerContent.includes('correct')) {\n      intent = 'edit';\n    } else if (lowerContent.includes('improve') || lowerContent.includes('enhance') || lowerContent.includes('rewrite')) {\n      intent = 'improve';\n    } else if (lowerContent.includes('analyze') || lowerContent.includes('review') || lowerContent.includes('check')) {\n      intent = 'analyze';\n    }\n    \n    return {\n      originalContent: content,\n      intent,\n      mode: requestedMode || this.settings.defaultMode || 'proofreader',\n      selection,\n      hasEditingRequest: intent !== 'chat'\n    };\n  }\n\n  private async processWithEditorialEngine(parsedMessage: ParsedMessage, context?: string): Promise<void> {\n    // Check if Editorial Engine is available\n    if (!window.Writerr?.editorial) {\n      throw new Error('Editorial Engine is not available. Please ensure the Editorial Engine plugin is loaded.');\n    }\n\n    // Emit processing event\n    if (window.Writerr.events) {\n      window.Writerr.events.emit('chat.request-processing', {\n        requestId: this.currentSession!.messages[this.currentSession!.messages.length - 1].id,\n        message: this.currentSession!.messages[this.currentSession!.messages.length - 1],\n        mode: parsedMessage.mode\n      });\n    }\n\n    try {\n      // Prepare Editorial Engine payload\n      const payload: IntakePayload = {\n        id: generateId(),\n        text: parsedMessage.selection || context || parsedMessage.originalContent,\n        originalText: parsedMessage.selection || context,\n        mode: parsedMessage.mode,\n        constraints: await this.getConstraintsForMode(parsedMessage.mode),\n        metadata: {\n          source: 'writerr-chat',\n          intent: parsedMessage.intent,\n          timestamp: Date.now(),\n          sessionId: this.currentSession!.id\n        }\n      };\n\n      // Process through Editorial Engine\n      const result = await window.Writerr.editorial.process(payload);\n\n      if (result.success) {\n        // Create assistant response with Editorial Engine results\n        const assistantMessage: ChatMessage = {\n          id: generateId(),\n          role: 'assistant',\n          content: this.formatEditorialEngineResponse(result, parsedMessage),\n          timestamp: Date.now(),\n          metadata: {\n            editorialEngineResult: true,\n            jobId: result.jobId,\n            mode: parsedMessage.mode,\n            processingTime: result.processingTime\n          }\n        };\n\n        this.currentSession!.messages.push(assistantMessage);\n      } else {\n        throw new Error(`Editorial Engine processing failed: ${result.errors?.map(e => e.message).join(', ')}`);\n      }\n    } catch (error) {\n      console.error('Editorial Engine processing error:', error);\n      throw error;\n    }\n  }\n\n  private async processWithAIProvider(parsedMessage: ParsedMessage, context?: string): Promise<void> {\n    console.log(`\uD83C\uDFAF [${BUILD_VERSION}] processWithAIProvider ENTRY - Using provider OBJECT method`);\n    \n    // Get AI Providers plugin and SDK - use the same pattern as the toolbar\n    const aiProvidersPlugin = (this.app as any).plugins?.plugins?.['ai-providers'];\n    if (!aiProvidersPlugin) {\n      throw new Error('AI Providers plugin not found. Please install and enable the AI Providers plugin.');\n    }\n\n    // Access the aiProviders SDK object (same as toolbar)\n    const aiProviders = aiProvidersPlugin.aiProviders;\n    if (!aiProviders) {\n      throw new Error('AI Providers SDK not available.');\n    }\n\n    // Get the selected model from toolbar (if available)\n    const chatLeaf = this.app.workspace.getLeavesOfType(VIEW_TYPE_CHAT)[0];\n    let selectedProvider = this.settings.defaultProvider;\n    let selectedModel = 'gpt-4'; // fallback\n    let providerObject = null; // Store the actual provider object\n    \n    if (chatLeaf && chatLeaf.view instanceof ChatView) {\n      // Try to get selected model from chat view toolbar\n      const toolbar = (chatLeaf.view as any).chatToolbar;\n      if (toolbar) {\n        const modelSelection = toolbar.getSelectedModel();\n        if (modelSelection) {\n          selectedProvider = modelSelection.provider;\n          selectedModel = modelSelection.model;\n        }\n      }\n    }\n\n    // Find the actual provider object from the providers array\n    if (aiProviders.providers && Array.isArray(aiProviders.providers)) {\n      providerObject = aiProviders.providers.find((p: any) => \n        p.id === selectedProvider || p.name === selectedProvider || p.type === selectedProvider\n      );\n      \n      if (providerObject) {\n        console.log(`\uD83C\uDFAF [${BUILD_VERSION}] Found provider OBJECT:`, providerObject);\n      } else {\n        console.warn(`\uD83C\uDFAF [${BUILD_VERSION}] Provider object not found for: ${selectedProvider}`);\n        // Fallback to first available provider\n        providerObject = aiProviders.providers[0];\n        console.log(`\uD83C\uDFAF [${BUILD_VERSION}] Using fallback provider OBJECT:`, providerObject);\n      }\n    }\n\n    if (!providerObject) {\n      throw new Error('No providers available in AI Providers plugin.');\n    }\n\n    // Add context to the prompt if available\n    let prompt = parsedMessage.originalContent;\n    if (context) {\n      prompt = `Context from document:\\n${context}\\n\\nUser request: ${prompt}`;\n    }\n\n    try {\n      console.log(`\uD83C\uDFAF [${BUILD_VERSION}] EXECUTE with provider OBJECT (not string):`, {\n        provider: providerObject,\n        model: selectedModel,\n        buildVersion: BUILD_VERSION\n      });\n      \n      // Use AI Providers SDK with the actual provider object\n      const response = await aiProviders.execute({\n        provider: providerObject, // Pass the actual provider object\n        prompt: prompt,\n        model: selectedModel, // Also pass the specific model\n        onProgress: (chunk: string, full: string) => {\n          console.log(`\uD83C\uDFAF [${BUILD_VERSION}] Streaming chunk:`, chunk.length, 'chars');\n        }\n      });\n\n      console.log(`\uD83C\uDFAF [${BUILD_VERSION}] AI response SUCCESS:`, response?.length || 0, 'characters');\n\n      const assistantMessage: ChatMessage = {\n        id: generateId(),\n        role: 'assistant',\n        content: response,\n        timestamp: Date.now(),\n        metadata: {\n          provider: selectedProvider,\n          providerType: providerObject.type || 'unknown',\n          model: selectedModel,\n          aiProvidersUsed: true,\n          buildVersion: BUILD_VERSION\n        }\n      };\n\n      this.currentSession!.messages.push(assistantMessage);\n    } catch (error) {\n      console.error(`\uD83C\uDFAF [${BUILD_VERSION}] AI Providers ERROR:`, error);\n      throw new Error(`AI processing failed: ${error.message}`);\n    }\n  }\n\n  private formatEditorialEngineResponse(result: any, parsedMessage: ParsedMessage): string {\n    let response = '';\n\n    // Add mode indicator\n    response += `**${parsedMessage.mode.replace('-', ' ').replace(/\\b\\w/g, l => l.toUpperCase())} Analysis:**\\n\\n`;\n\n    if (result.result?.processedText) {\n      response += '**Processed Text:**\\n';\n      response += `> ${result.result.processedText}\\n\\n`;\n    }\n\n    if (result.result?.changes && result.result.changes.length > 0) {\n      response += '**Changes Made:**\\n';\n      for (const change of result.result.changes.slice(0, 5)) { // Limit to first 5 changes\n        response += `- **${change.type}** at position ${change.from}-${change.to}: \"${change.text || change.removedText}\"\\n`;\n      }\n      \n      if (result.result.changes.length > 5) {\n        response += `- *... and ${result.result.changes.length - 5} more changes*\\n`;\n      }\n      response += '\\n';\n    }\n\n    if (result.metadata?.trackEditsSession) {\n      response += `*Changes have been applied to your document and are being tracked in session ${result.metadata.trackEditsSession}.*\\n\\n`;\n      response += '*You can accept or reject individual changes using the Track Edits side panel.*';\n    }\n\n    return response;\n  }\n\n  private async getConstraintsForMode(mode: string): Promise<any> {\n    // Get mode constraints from Editorial Engine\n    if (window.Writerr?.editorial) {\n      const modeDefinition = window.Writerr.editorial.getMode(mode);\n      return modeDefinition?.constraints || [];\n    }\n    return [];\n  }\n\n  private async getDocumentContext(): Promise<string | undefined> {\n    const activeFile = this.app.workspace.getActiveFile();\n    if (!activeFile) return undefined;\n\n    try {\n      const content = await this.app.vault.read(activeFile);\n      const lines = content.split('\\n');\n      \n      if (lines.length <= this.settings.contextLines * 2) {\n        return content;\n      }\n\n      // Get lines around cursor or selection\n      const editor = this.app.workspace.getActiveViewOfType(require('obsidian').MarkdownView)?.editor;\n      if (editor) {\n        const cursor = editor.getCursor();\n        const start = Math.max(0, cursor.line - this.settings.contextLines);\n        const end = Math.min(lines.length, cursor.line + this.settings.contextLines);\n        return lines.slice(start, end).join('\\n');\n      }\n\n      return lines.slice(0, this.settings.contextLines).join('\\n');\n    } catch (error) {\n      console.error('Error getting document context:', error);\n      return undefined;\n    }\n  }\n\n  private refreshChatView() {\n    const chatLeaf = this.app.workspace.getLeavesOfType(VIEW_TYPE_CHAT)[0];\n    if (chatLeaf && chatLeaf.view instanceof ChatView) {\n      chatLeaf.view.refresh();\n    }\n  }\n\n  private listenForEditorialEngine() {\n    // Check for Editorial Engine availability on startup\n    setTimeout(() => {\n      if (window.Writerr?.editorial) {\n        this.refreshChatModes();\n      }\n    }, 1000);\n\n    // Listen for Editorial Engine platform-ready event\n    if (window.Writerr?.events) {\n      window.Writerr.events.on('platform-ready', (data: any) => {\n        if (data.plugin === 'editorial-engine') {\n          console.log('Editorial Engine detected, refreshing chat modes...');\n          this.refreshChatModes();\n        }\n      });\n\n      window.Writerr.events.on('mode-registered', () => {\n        this.refreshChatModes();\n      });\n\n      window.Writerr.events.on('mode-updated', () => {\n        this.refreshChatModes();\n      });\n\n      window.Writerr.events.on('mode-removed', () => {\n        this.refreshChatModes();\n      });\n    }\n\n    // Fallback: periodic check for Editorial Engine\n    const checkInterval = setInterval(() => {\n      if (window.Writerr?.editorial) {\n        this.refreshChatModes();\n        clearInterval(checkInterval);\n      }\n    }, 3000);\n\n    // Clear interval after 30 seconds to avoid indefinite checking\n    setTimeout(() => {\n      clearInterval(checkInterval);\n    }, 30000);\n  }\n\n  private refreshChatModes() {\n    // Find and refresh chat view modes\n    const chatLeaves = this.app.workspace.getLeavesOfType(VIEW_TYPE_CHAT);\n    for (const leaf of chatLeaves) {\n      if (leaf.view instanceof ChatView) {\n        leaf.view.refreshModeOptions();\n      }\n    }\n  }\n\n  async loadChatSessions() {\n    try {\n      const data = await this.loadData();\n      if (data && data.chatSessions) {\n        for (const session of data.chatSessions) {\n          this.chatSessions.set(session.id, session);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to load chat sessions:', error);\n    }\n  }\n\n  async saveChatSessions() {\n    try {\n      const sessionsArray = Array.from(this.chatSessions.values());\n      const currentData = await this.loadData() || {};\n      currentData.chatSessions = sessionsArray;\n      await this.saveData(currentData);\n    } catch (error) {\n      console.error('Failed to save chat sessions:', error);\n    }\n  }\n\n  getChatSessions(): ChatSession[] {\n    return Array.from(this.chatSessions.values()).sort((a, b) => b.updatedAt - a.updatedAt);\n  }\n\n  deleteSession(sessionId: string) {\n    this.chatSessions.delete(sessionId);\n    if (this.currentSession && this.currentSession.id === sessionId) {\n      this.currentSession = null;\n    }\n    this.saveChatSessions();\n  }\n\n  setCurrentSession(sessionId: string) {\n    const session = this.chatSessions.get(sessionId);\n    if (session) {\n      this.currentSession = session;\n    }\n  }\n}\n\nclass QuickChatModal extends Modal {\n  private onSubmit: (message: string) => Promise<void>;\n  private inputEl: HTMLTextAreaElement;\n\n  constructor(app: any, onSubmit: (message: string) => Promise<void>) {\n    super(app);\n    this.onSubmit = onSubmit;\n  }\n\n  onOpen() {\n    const { contentEl } = this;\n    contentEl.empty();\n\n    contentEl.createEl('h2', { text: 'Quick Chat' });\n\n    this.inputEl = contentEl.createEl('textarea', {\n      attr: {\n        placeholder: 'Type your message here...',\n        rows: '4',\n        style: 'width: 100%; margin: 10px 0; padding: 8px; border: 1px solid var(--background-modifier-border); border-radius: 4px;'\n      }\n    });\n\n    const buttonContainer = contentEl.createEl('div', {\n      attr: { style: 'display: flex; justify-content: flex-end; gap: 10px; margin-top: 10px;' }\n    });\n\n    buttonContainer.createEl('button', {\n      text: 'Cancel',\n      attr: { style: 'padding: 6px 12px;' }\n    }).onclick = () => this.close();\n\n    const sendButton = buttonContainer.createEl('button', {\n      text: 'Send',\n      attr: { style: 'padding: 6px 12px; background: var(--interactive-accent); color: var(--text-on-accent); border: none; border-radius: 4px;' }\n    });\n    \n    sendButton.onclick = async () => {\n      const message = this.inputEl.value.trim();\n      if (message) {\n        await this.onSubmit(message);\n        this.close();\n      }\n    };\n\n    this.inputEl.focus();\n  }\n\n  onClose() {\n    const { contentEl } = this;\n    contentEl.empty();\n  }\n}", "import { App, PluginSettingTab, Setting } from 'obsidian';\nimport WriterrlChatPlugin from './main';\nimport { AIProvider } from '@shared/types';\nimport { generateId } from '@shared/utils';\n\nexport class WriterrlChatSettingsTab extends PluginSettingTab {\n  plugin: WriterrlChatPlugin;\n\n  constructor(app: App, plugin: WriterrlChatPlugin) {\n    super(app, plugin);\n    this.plugin = plugin;\n  }\n\n  display(): void {\n    const { containerEl } = this;\n    containerEl.empty();\n\n    containerEl.createEl('h2', { text: 'Writerr Chat Settings' });\n\n    // AI Provider Settings\n    containerEl.createEl('h3', { text: 'AI Provider Configuration' });\n\n    new Setting(containerEl)\n      .setName('Default provider')\n      .setDesc('Select the default AI provider for chat')\n      .addDropdown(dropdown => {\n        for (const provider of this.plugin.settings.providers) {\n          dropdown.addOption(provider.id, provider.name);\n        }\n        dropdown.setValue(this.plugin.settings.defaultProvider)\n          .onChange(async (value) => {\n            this.plugin.settings.defaultProvider = value;\n            await this.plugin.saveSettings();\n          });\n      });\n\n    // Provider management\n    for (let i = 0; i < this.plugin.settings.providers.length; i++) {\n      const provider = this.plugin.settings.providers[i];\n      this.createProviderSetting(containerEl, provider, i);\n    }\n\n    new Setting(containerEl)\n      .setName('Add new provider')\n      .setDesc('Add a new AI provider')\n      .addButton(button => button\n        .setButtonText('Add Provider')\n        .setCta()\n        .onClick(() => {\n          this.plugin.settings.providers.push({\n            id: generateId(),\n            name: 'New Provider',\n            model: 'gpt-3.5-turbo',\n            baseUrl: '',\n            apiKey: ''\n          });\n          this.display(); // Refresh settings\n        }));\n\n    // Chat Interface Settings\n    containerEl.createEl('h3', { text: 'Chat Interface' });\n\n    new Setting(containerEl)\n      .setName('Chat position')\n      .setDesc('Choose where the chat panel appears')\n      .addDropdown(dropdown => dropdown\n        .addOption('right', 'Right sidebar')\n        .addOption('left', 'Left sidebar')\n        .addOption('floating', 'Floating window')\n        .setValue(this.plugin.settings.chatPosition)\n        .onChange(async (value: 'right' | 'left' | 'floating') => {\n          this.plugin.settings.chatPosition = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(containerEl)\n      .setName('Theme')\n      .setDesc('Choose the chat interface theme')\n      .addDropdown(dropdown => dropdown\n        .addOption('default', 'Default')\n        .addOption('compact', 'Compact')\n        .addOption('minimal', 'Minimal')\n        .setValue(this.plugin.settings.theme)\n        .onChange(async (value: 'default' | 'compact' | 'minimal') => {\n          this.plugin.settings.theme = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(containerEl)\n      .setName('Show timestamps')\n      .setDesc('Display timestamps for chat messages')\n      .addToggle(toggle => toggle\n        .setValue(this.plugin.settings.showTimestamps)\n        .onChange(async (value) => {\n          this.plugin.settings.showTimestamps = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(containerEl)\n      .setName('Enable markdown')\n      .setDesc('Render markdown in chat messages')\n      .addToggle(toggle => toggle\n        .setValue(this.plugin.settings.enableMarkdown)\n        .onChange(async (value) => {\n          this.plugin.settings.enableMarkdown = value;\n          await this.plugin.saveSettings();\n        }));\n\n    // Behavior Settings\n    containerEl.createEl('h3', { text: 'Behavior' });\n\n    new Setting(containerEl)\n      .setName('Auto-save chats')\n      .setDesc('Automatically save chat sessions')\n      .addToggle(toggle => toggle\n        .setValue(this.plugin.settings.autoSaveChats)\n        .onChange(async (value) => {\n          this.plugin.settings.autoSaveChats = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(containerEl)\n      .setName('Context lines')\n      .setDesc('Number of lines to include as context from the current document')\n      .addSlider(slider => slider\n        .setLimits(0, 50, 1)\n        .setValue(this.plugin.settings.contextLines)\n        .setDynamicTooltip()\n        .onChange(async (value) => {\n          this.plugin.settings.contextLines = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(containerEl)\n      .setName('Max tokens')\n      .setDesc('Maximum number of tokens for AI responses')\n      .addSlider(slider => slider\n        .setLimits(100, 4000, 100)\n        .setValue(this.plugin.settings.maxTokens)\n        .setDynamicTooltip()\n        .onChange(async (value) => {\n          this.plugin.settings.maxTokens = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(containerEl)\n      .setName('Temperature')\n      .setDesc('Creativity level for AI responses (0 = focused, 1 = creative)')\n      .addSlider(slider => slider\n        .setLimits(0, 1, 0.1)\n        .setValue(this.plugin.settings.temperature)\n        .setDynamicTooltip()\n        .onChange(async (value) => {\n          this.plugin.settings.temperature = value;\n          await this.plugin.saveSettings();\n        }));\n\n    // Actions\n    containerEl.createEl('h3', { text: 'Actions' });\n\n    new Setting(containerEl)\n      .setName('Clear all chat history')\n      .setDesc('Delete all saved chat sessions (cannot be undone)')\n      .addButton(button => button\n        .setButtonText('Clear All')\n        .setWarning()\n        .onClick(() => {\n          this.plugin.chatSessions.clear();\n          this.plugin.currentSession = null;\n          this.plugin.saveChatSessions();\n        }));\n  }\n\n  private createProviderSetting(containerEl: HTMLElement, provider: AIProvider, index: number) {\n    const providerContainer = containerEl.createDiv('provider-setting');\n    providerContainer.createEl('h4', { text: provider.name });\n\n    new Setting(providerContainer)\n      .setName('Provider name')\n      .addText(text => text\n        .setValue(provider.name)\n        .onChange(async (value) => {\n          provider.name = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(providerContainer)\n      .setName('Model')\n      .addText(text => text\n        .setValue(provider.model)\n        .onChange(async (value) => {\n          provider.model = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(providerContainer)\n      .setName('Base URL')\n      .addText(text => text\n        .setValue(provider.baseUrl || '')\n        .onChange(async (value) => {\n          provider.baseUrl = value;\n          await this.plugin.saveSettings();\n        }));\n\n    new Setting(providerContainer)\n      .setName('API Key')\n      .addText(text => {\n        text.inputEl.type = 'password';\n        text.setValue(provider.apiKey || '')\n          .onChange(async (value) => {\n            provider.apiKey = value;\n            await this.plugin.saveSettings();\n          });\n      });\n\n    new Setting(providerContainer)\n      .addButton(button => button\n        .setButtonText('Remove')\n        .setWarning()\n        .onClick(async () => {\n          this.plugin.settings.providers.splice(index, 1);\n          await this.plugin.saveSettings();\n          this.display(); // Refresh settings\n        }));\n  }\n}", "import { ItemView, WorkspaceLeaf, Notice } from 'obsidian';\nimport { ChatMessage, ChatSession } from '@shared/types';\nimport WriterrlChatPlugin from './main';\nimport { \n  ChatHeader, \n  MessageList, \n  ContextArea, \n  ChatInput, \n  ChatToolbar,\n  SessionManager,\n  DocumentContext\n} from './components';\n\nexport const VIEW_TYPE_CHAT = 'writerr-chat-view';\n\nexport class ChatView extends ItemView {\n  plugin: WriterrlChatPlugin;\n  private chatHeader: ChatHeader;\n  private messageList: MessageList;\n  private contextArea: ContextArea;\n  private chatInput: ChatInput;\n  private chatToolbar: ChatToolbar;\n  private sessionManager: SessionManager;\n\n  constructor(leaf: WorkspaceLeaf, plugin: WriterrlChatPlugin) {\n    super(leaf);\n    this.plugin = plugin;\n  }\n\n  getViewType(): string {\n    return VIEW_TYPE_CHAT;\n  }\n\n  getDisplayText(): string {\n    return 'Writerr Chat';\n  }\n\n  getIcon(): string {\n    return 'message-circle';\n  }\n\n  async onOpen() {\n    const container = this.containerEl.children[1];\n    container.empty();\n    container.addClass('writerr-chat-view');\n    container.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n      background: var(--background-primary);\n      border: 1px solid var(--background-modifier-border);\n      border-radius: 8px;\n      overflow: hidden;\n    `;\n\n    this.createComponents(container);\n    this.setupEventHandlers();\n    this.applyTheme();\n\n    // Load current session or create new one\n    if (!this.plugin.currentSession) {\n      this.plugin.newChatSession();\n    }\n\n    this.refresh();\n\n    // Delayed initialization for Editorial Engine integration\n    this.scheduleDelayedInitialization();\n  }\n\n  private createComponents(container: HTMLElement): void {\n    // Create header\n    const headerContainer = container.createEl('div', { cls: 'chat-header-container' });\n    this.chatHeader = new ChatHeader({\n      plugin: this.plugin,\n      container: headerContainer,\n      events: {\n        onHistoryClick: () => this.showSessionManager(),\n        onSettingsClick: () => this.showSettings(),\n        onModeChange: (mode) => this.handleModeChange(mode)\n      }\n    });\n    this.chatHeader.render();\n\n    // Create message list\n    const messageContainer = container.createEl('div', { cls: 'chat-messages-container' });\n    this.messageList = new MessageList({\n      plugin: this.plugin,\n      container: messageContainer,\n      actionHandler: {\n        onCopy: (message) => this.copyMessage(message),\n        onRetry: (message) => this.retryMessage(message),\n        onInfo: (message) => this.showMessageInfo(message)\n      }\n    });\n    this.messageList.render();\n\n    // Create context area\n    const contextContainer = container.createEl('div', { cls: 'chat-context-container' });\n    this.contextArea = new ContextArea({\n      plugin: this.plugin,\n      container: contextContainer,\n      events: {\n        onDocumentAdd: (doc) => this.handleDocumentAdd(doc),\n        onDocumentRemove: (doc) => this.handleDocumentRemove(doc),\n        onDocumentOpen: (doc) => this.openDocument(doc)\n      }\n    });\n    this.contextArea.render();\n\n    // Create input area\n    const inputContainer = container.createEl('div', { cls: 'chat-input-container' });\n    this.chatInput = new ChatInput({\n      plugin: this.plugin,\n      container: inputContainer,\n      events: {\n        onSend: (message, mode) => this.sendMessage(message, mode),\n        onModeChange: (mode) => this.handleModeChange(mode)\n      }\n    });\n    this.chatInput.render();\n\n    // Create bottom toolbar\n    const toolbarContainer = container.createEl('div', { cls: 'chat-toolbar-container' });\n    this.chatToolbar = new ChatToolbar({\n      plugin: this.plugin,\n      container: toolbarContainer,\n      events: {\n        onAddDocument: () => this.addDocumentToChat(),\n        onCopyChat: () => this.copyEntireChat(),\n        onClearChat: () => this.clearChat(),\n        onModelChange: (model) => this.handleModelChange(model),\n        onPromptChange: (prompt) => this.handlePromptChange(prompt)\n      }\n    });\n    this.chatToolbar.render();\n  }\n\n  private setupEventHandlers(): void {\n    // Listen for starter prompt selection\n    this.messageList.container.addEventListener('starter-prompt-selected', (e: CustomEvent) => {\n      this.chatInput.setValue(e.detail.prompt);\n      this.chatInput.focusInput();\n    });\n  }\n\n  private scheduleDelayedInitialization(): void {\n    // Refresh modes after view is fully loaded (in case Editorial Engine loaded after chat view)\n    setTimeout(() => {\n      console.log('Delayed mode refresh after chat view opened');\n      this.chatHeader.populateModeOptions();\n    }, 1000);\n\n    // Also refresh when status changes\n    setTimeout(() => {\n      this.chatHeader.updateStatusIndicator();\n    }, 1500);\n  }\n\n  private async sendMessage(message: string, mode?: string): Promise<void> {\n    if (!message.trim()) return;\n\n    // Get selected mode from header if not provided\n    const selectedMode = mode || this.chatHeader.getSelectedMode();\n\n    this.chatInput.setProcessingState(true);\n    this.chatHeader.updateStatusIndicator();\n\n    try {\n      await this.plugin.sendMessage(message, selectedMode);\n      this.refresh();\n    } catch (error) {\n      console.error('Error sending message:', error);\n      new Notice(`Error: ${error.message}`);\n    } finally {\n      this.chatInput.setProcessingState(false);\n      this.chatHeader.updateStatusIndicator();\n    }\n  }\n\n  private copyMessage(message: ChatMessage): void {\n    navigator.clipboard.writeText(message.content).then(() => {\n      new Notice('Message copied to clipboard');\n    }).catch(err => {\n      console.error('Failed to copy message:', err);\n      new Notice('Failed to copy message');\n    });\n  }\n\n  private async retryMessage(message: ChatMessage): Promise<void> {\n    // Find the message index\n    const messages = this.plugin.currentSession?.messages || [];\n    const messageIndex = messages.findIndex(m => m.timestamp === message.timestamp);\n    \n    if (messageIndex >= 0 && message.role === 'assistant') {\n      // Find the preceding user message\n      const userMessage = messages[messageIndex - 1];\n      if (userMessage && userMessage.role === 'user') {\n        // Remove the AI message from the session (keep the user message)\n        this.plugin.currentSession.messages = messages.slice(0, messageIndex);\n        \n        // Refresh the UI to remove the AI message\n        this.refresh();\n        \n        // Call processMessage directly without adding the user message again\n        // This bypasses the user message addition in sendMessage\n        const parsedMessage = this.plugin.parseMessageIntent(userMessage.content);\n        \n        try {\n          // Get the selected mode from header\n          const selectedMode = this.chatHeader.getSelectedMode();\n          \n          if (selectedMode && selectedMode !== 'chat') {\n            parsedMessage.mode = selectedMode;\n          }\n          \n          // Get context if needed\n          let fullContext: string | undefined;\n          if (this.plugin.settings.contextLines > 0) {\n            fullContext = await this.plugin.getDocumentContext();\n          }\n          \n          // Process directly without adding user message\n          if (selectedMode && selectedMode !== 'chat') {\n            await this.plugin.processWithEditorialEngine(parsedMessage, fullContext);\n          } else if (parsedMessage.intent === 'edit' || parsedMessage.intent === 'improve') {\n            await this.plugin.processWithEditorialEngine(parsedMessage, fullContext);\n          } else {\n            await this.plugin.processWithAIProvider(parsedMessage, fullContext);\n          }\n          \n          this.plugin.currentSession.updatedAt = Date.now();\n          \n          if (this.plugin.settings.autoSaveChats) {\n            await this.plugin.saveChatSessions();\n          }\n          \n          this.refresh();\n          \n        } catch (error) {\n          console.error('Error retrying message:', error);\n          new Notice(`Error: ${error.message}`);\n          \n          // Import generateId from shared utils\n          const { generateId } = await import('@shared/utils');\n          \n          // Add error message to chat\n          const errorMessage: ChatMessage = {\n            id: generateId(),\n            role: 'assistant',\n            content: `I encountered an error: ${error.message}. Please try again.`,\n            timestamp: Date.now(),\n            metadata: {\n              error: true,\n              errorMessage: error.message\n            }\n          };\n          \n          this.plugin.currentSession.messages.push(errorMessage);\n          this.refresh();\n        }\n      }\n    }\n  }\n\n  private showMessageInfo(message: ChatMessage): void {\n    const info = {\n      role: message.role,\n      timestamp: new Date(message.timestamp).toLocaleString(),\n      length: message.content.length,\n      tokens: Math.ceil(message.content.length / 4) // Rough token estimation\n    };\n\n    const infoText = [\n      `Role: ${info.role}`,\n      `Timestamp: ${info.timestamp}`,\n      `Length: ${info.length} characters`,\n      `Estimated tokens: ${info.tokens}`\n    ].join('\\n');\n\n    new Notice(infoText, 5000);\n  }\n\n  private handleModeChange(mode: string): void {\n    this.plugin.settings.defaultMode = mode;\n    this.plugin.saveSettings();\n  }\n\n  private handleDocumentAdd(doc: DocumentContext): void {\n    console.log('Document added to context:', doc);\n    // Here you would integrate with the context system\n  }\n\n  private handleDocumentRemove(doc: DocumentContext): void {\n    console.log('Document removed from context:', doc);\n    // Here you would remove from the context system\n  }\n\n  private async openDocument(doc: DocumentContext): Promise<void> {\n    try {\n      const file = this.app.vault.getAbstractFileByPath(doc.path);\n      if (file) {\n        await this.app.workspace.openLinkText(doc.path, '', true);\n      }\n    } catch (error) {\n      console.error('Error opening document:', error);\n      new Notice(`Failed to open document: ${doc.name}`);\n    }\n  }\n\n  private showSessionManager(): void {\n    if (this.sessionManager) {\n      this.sessionManager.destroy();\n    }\n\n    const overlayContainer = this.containerEl.createEl('div');\n    this.sessionManager = new SessionManager({\n      plugin: this.plugin,\n      container: overlayContainer,\n      onSessionSelect: (sessionId) => this.selectSession(sessionId),\n      onSessionDelete: (sessionId) => this.deleteSession(sessionId),\n      onNewSession: () => this.createNewSession()\n    });\n    \n    this.sessionManager.show();\n  }\n\n  private showSettings(): void {\n    // Placeholder for settings modal\n    new Notice('Settings panel coming soon!');\n  }\n\n  private selectSession(sessionId: string): void {\n    this.plugin.setCurrentSession(sessionId);\n    this.refresh();\n  }\n\n  private deleteSession(sessionId: string): void {\n    this.plugin.deleteSession(sessionId);\n    this.refresh();\n  }\n\n  private createNewSession(): void {\n    this.plugin.newChatSession();\n    this.refresh();\n  }\n\n  refresh(): void {\n    this.updateMessageList();\n    this.updateHeader();\n  }\n\n  private updateMessageList(): void {\n    const messages = this.plugin.currentSession?.messages || [];\n    this.messageList.setMessages(messages);\n  }\n\n  private updateHeader(): void {\n    if (this.plugin.settings.defaultMode) {\n      this.chatHeader.setMode(this.plugin.settings.defaultMode);\n    }\n    this.chatHeader.updateStatusIndicator();\n  }\n\n  private applyTheme(): void {\n    const container = this.containerEl;\n    container.removeClass('theme-default', 'theme-compact', 'theme-minimal');\n    container.addClass(`theme-${this.plugin.settings.theme}`);\n\n    // Apply theme-specific adjustments if needed\n    if (this.plugin.settings.theme === 'compact') {\n      this.messageList.container.style.fontSize = '14px';\n    } else if (this.plugin.settings.theme === 'minimal') {\n      this.messageList.container.style.fontSize = '13px';\n    }\n  }\n\n  // Public API methods for external access\n  public refreshModeOptions(): void {\n    this.chatHeader.refreshModeOptions();\n  }\n\n  public getSelectedMode(): string {\n    return this.chatHeader.getSelectedMode();\n  }\n\n  public setMode(mode: string): void {\n    this.chatHeader.setMode(mode);\n  }\n\n  // Toolbar event handlers\n  private addDocumentToChat(): void {\n    // This will trigger the context area document picker\n    const addButton = this.contextArea.container.querySelector('.context-add-button') as HTMLButtonElement;\n    if (addButton) {\n      addButton.click();\n    }\n  }\n\n  private copyEntireChat(): void {\n    const messages = this.plugin.currentSession?.messages || [];\n    const chatText = messages\n      .map(msg => `${msg.role === 'user' ? 'You' : 'Assistant'}: ${msg.content}`)\n      .join('\\n\\n');\n    \n    navigator.clipboard.writeText(chatText).then(() => {\n      new Notice('Chat copied to clipboard');\n    }).catch(() => {\n      new Notice('Failed to copy chat');\n    });\n  }\n\n  private clearChat(): void {\n    if (this.plugin.currentSession) {\n      this.plugin.currentSession.messages = [];\n      this.refresh();\n      new Notice('Chat cleared');\n    }\n  }\n\n  private handleModelChange(model: string): void {\n    console.log('Model changed to:', model);\n    // Here you would update the current model setting\n    new Notice(`Model changed to ${model}`);\n  }\n\n  private handlePromptChange(prompt: string): void {\n    console.log('Prompt template selected:', prompt);\n    // Here you would apply the prompt template\n    new Notice(`Prompt template: ${prompt}`);\n  }\n\n  async onClose() {\n    // Clean up components\n    this.chatHeader?.destroy();\n    this.messageList?.destroy();\n    this.contextArea?.destroy();\n    this.chatInput?.destroy();\n    this.sessionManager?.destroy();\n  }\n}", "import { ChatComponent, ComponentOptions } from './types';\nimport WriterrlChatPlugin from '../main';\n\nexport abstract class BaseComponent implements ChatComponent {\n  container: HTMLElement;\n  plugin: WriterrlChatPlugin;\n\n  constructor(options: ComponentOptions) {\n    this.container = options.container;\n    this.plugin = options.plugin;\n  }\n\n  abstract render(): void;\n\n  destroy(): void {\n    this.container.empty();\n  }\n\n  protected createElement(\n    tag: string,\n    options: {\n      cls?: string | string[];\n      text?: string;\n      attrs?: Record<string, string>;\n      styles?: Record<string, string>;\n    } = {}\n  ): HTMLElement {\n    const el = this.container.createEl(tag);\n    \n    if (options.cls) {\n      if (Array.isArray(options.cls)) {\n        el.addClasses(options.cls);\n      } else {\n        el.addClass(options.cls);\n      }\n    }\n    \n    if (options.text) {\n      el.textContent = options.text;\n    }\n    \n    if (options.attrs) {\n      Object.entries(options.attrs).forEach(([key, value]) => {\n        el.setAttribute(key, value);\n      });\n    }\n    \n    if (options.styles) {\n      el.style.cssText = Object.entries(options.styles)\n        .map(([key, value]) => `${key}: ${value}`)\n        .join('; ');\n    }\n    \n    return el;\n  }\n\n  protected addHoverEffect(element: HTMLElement, hoverStyles: Record<string, string>) {\n    const originalStyles: Record<string, string> = {};\n    \n    element.addEventListener('mouseenter', () => {\n      Object.entries(hoverStyles).forEach(([key, value]) => {\n        originalStyles[key] = element.style[key as any];\n        element.style[key as any] = value;\n      });\n    });\n    \n    element.addEventListener('mouseleave', () => {\n      Object.entries(originalStyles).forEach(([key, value]) => {\n        element.style[key as any] = value;\n      });\n    });\n  }\n}", "import { MarkdownRenderer, Component } from 'obsidian';\nimport { ChatMessage } from '@shared/types';\nimport { BaseComponent } from './BaseComponent';\nimport { ComponentOptions, MessageActionHandler } from './types';\n\ninterface MessageBubbleOptions extends ComponentOptions {\n  message: ChatMessage;\n  actionHandler: MessageActionHandler;\n}\n\nexport class MessageBubble extends BaseComponent {\n  private message: ChatMessage;\n  private actionHandler: MessageActionHandler;\n  private messageEl: HTMLElement;\n  private actionsEl: HTMLElement;\n\n  constructor(options: MessageBubbleOptions) {\n    super(options);\n    this.message = options.message;\n    this.actionHandler = options.actionHandler;\n  }\n\n  render(): void {\n    this.createMessageElement();\n    this.createAvatar();\n    this.createContent();\n    this.createActions();\n    this.createTimestamp();\n    this.addInteractions();\n  }\n\n  private createMessageElement(): void {\n    const isUser = this.message.role === 'user';\n    \n    this.messageEl = this.createElement('div', {\n      cls: ['chat-message', `chat-message-${this.message.role}`],\n      styles: {\n        display: 'flex',\n        margin: '16px 0',\n        gap: '12px',\n        position: 'relative',\n        alignItems: 'flex-start',\n        ...(isUser ? { 'flex-direction': 'row-reverse' } : {})\n      }\n    });\n  }\n\n  private createAvatar(): void {\n    const isUser = this.message.role === 'user';\n    const avatar = this.messageEl.createEl('div', { cls: 'writerr-message-icon' });\n\n    if (isUser) {\n      // User icon: Lucide User icon\n      avatar.innerHTML = `\n        <svg class=\"writerr-message-avatar\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"/>\n          <circle cx=\"12\" cy=\"7\" r=\"4\"/>\n        </svg>\n      `;\n    } else {\n      // AI icon: Lucide Bot icon\n      avatar.innerHTML = `\n        <svg class=\"writerr-message-avatar\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <path d=\"M12 8V4H8\"/>\n          <rect width=\"16\" height=\"12\" x=\"4\" y=\"8\" rx=\"2\"/>\n          <path d=\"M2 14h2\"/>\n          <path d=\"M20 14h2\"/>\n          <path d=\"M15 13v2\"/>\n          <path d=\"M9 13v2\"/>\n        </svg>\n      `;\n    }\n  }\n\n  private createContent(): void {\n    const isUser = this.message.role === 'user';\n    const contentWrapper = this.messageEl.createEl('div', { cls: 'message-content-wrapper' });\n    contentWrapper.style.cssText = `\n      flex: 1;\n      min-width: 0;\n      max-width: calc(100% - 120px);\n    `;\n\n    const bubble = contentWrapper.createEl('div', { cls: 'message-bubble' });\n    bubble.style.cssText = `\n      padding: 12px 16px;\n      border-radius: 18px;\n      position: relative;\n      word-wrap: break-word;\n      ${isUser \n        ? `\n          background: var(--background-primary);\n          color: var(--text-normal);\n          border: 2px solid var(--interactive-accent);\n          border-bottom-right-radius: 6px;\n        `\n        : `\n          background: var(--background-secondary);\n          color: var(--text-normal);\n          border: 1px solid var(--background-modifier-border);\n          border-bottom-left-radius: 6px;\n        `\n      }\n      transition: all 0.2s ease;\n    `;\n\n    if (this.plugin.settings.enableMarkdown && !isUser) {\n      this.renderMarkdownContent(bubble);\n    } else {\n      bubble.textContent = this.message.content;\n    }\n\n    // Add subtle shadow on hover\n    this.addHoverEffect(bubble, {\n      'box-shadow': '0 4px 12px rgba(0, 0, 0, 0.1)',\n      'transform': 'translateY(-1px)'\n    });\n  }\n\n  private async renderMarkdownContent(bubble: HTMLElement): Promise<void> {\n    try {\n      const component = new Component();\n      await MarkdownRenderer.renderMarkdown(\n        this.message.content,\n        bubble,\n        '',\n        component\n      );\n    } catch (error) {\n      console.error('Error rendering markdown:', error);\n      bubble.textContent = this.message.content;\n    }\n  }\n\n  private createActions(): void {\n    const isUser = this.message.role === 'user';\n    \n    // Create actions container directly in the content wrapper, below the bubble\n    const contentWrapper = this.messageEl.querySelector('.message-content-wrapper') as HTMLElement;\n    this.actionsEl = contentWrapper.createEl('div', { cls: 'writerr-message-actions' });\n\n    if (isUser) {\n      // User message actions: ONLY copy and info (NO retry)\n      this.createActionButton('copy', 'Copy message', `\n        <svg class=\"writerr-action-icon\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"/>\n          <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"/>\n        </svg>\n      `, () => this.actionHandler.onCopy(this.message));\n\n      this.createActionButton('info', 'Message info', `\n        <svg class=\"writerr-action-icon\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <circle cx=\"12\" cy=\"12\" r=\"12\"/>\n          <path d=\"M12 16v-4\"/>\n          <path d=\"M12 8h.01\"/>\n        </svg>\n      `, () => this.actionHandler.onInfo(this.message));\n    } else {\n      // AI message actions: retry, copy, and info\n      this.createActionButton('retry', 'Retry this response', `\n        <svg class=\"writerr-action-icon\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <path d=\"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 3\"/>\n          <path d=\"M21 3v5h-5\"/>\n          <path d=\"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 21\"/>\n          <path d=\"M3 21v-5h5\"/>\n        </svg>\n      `, () => this.actionHandler.onRetry(this.message));\n\n      this.createActionButton('copy', 'Copy message', `\n        <svg class=\"writerr-action-icon\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"/>\n          <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"/>\n        </svg>\n      `, () => this.actionHandler.onCopy(this.message));\n\n      this.createActionButton('info', 'Message info', `\n        <svg class=\"writerr-action-icon\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <circle cx=\"12\" cy=\"12\" r=\"12\"/>\n          <path d=\"M12 16v-4\"/>\n          <path d=\"M12 8h.01\"/>\n        </svg>\n      `, () => this.actionHandler.onInfo(this.message));\n    }\n  }\n\n  private createActionButton(type: string, tooltip: string, icon: string, onClick: () => void): void {\n    const btn = this.actionsEl.createEl('button', { cls: `message-action-btn action-${type}` });\n    btn.innerHTML = icon;\n    btn.title = tooltip;\n    btn.onclick = onClick;\n\n    btn.style.cssText = `\n      background: transparent !important;\n      border: none !important;\n      box-shadow: none !important;\n      padding: 4px !important;\n      border-radius: 4px !important;\n      cursor: pointer !important;\n      color: var(--text-faint) !important;\n      display: flex !important;\n      align-items: center !important;\n      justify-content: center !important;\n      transition: all 0.2s ease !important;\n      width: 24px !important;\n      height: 24px !important;\n      opacity: 0.6 !important;\n    `;\n\n    // Force reflow\n    btn.offsetHeight;\n\n    this.addHoverEffect(btn, {\n      'color': 'var(--text-muted)',\n      'opacity': '1'\n    });\n  }\n\n  private createTimestamp(): void {\n    // No timestamps - info is available via the eye icon\n    return;\n  }\n\n  private addInteractions(): void {\n    // Actions are always visible, no hover needed\n  }\n}", "import { BaseComponent } from './BaseComponent';\nimport { ComponentOptions, HeaderEvents } from './types';\n\ninterface ChatHeaderOptions extends ComponentOptions {\n  events: HeaderEvents;\n}\n\nexport class ChatHeader extends BaseComponent {\n  private events: HeaderEvents;\n  private modeSelect: HTMLSelectElement;\n  private statusIndicator: HTMLElement;\n\n  constructor(options: ChatHeaderOptions) {\n    super(options);\n    this.events = options.events;\n  }\n\n  render(): void {\n    this.createHeader();\n    this.createLeftSection();\n    this.createRightSection();\n    this.populateModeOptions();\n  }\n\n  private createHeader(): void {\n    this.container.style.cssText = `\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 16px;\n      border-bottom: 1px solid var(--background-modifier-border);\n      height: 60px;\n      background: var(--background-primary);\n    `;\n  }\n\n  private createLeftSection(): void {\n    const leftContainer = this.createElement('div', { cls: 'writerr-chat-header-left' });\n\n    // Create wrapper for select and caret\n    const selectWrapper = leftContainer.createEl('div', { cls: 'writerr-mode-select-wrapper' });\n\n    // Native select dropdown\n    this.modeSelect = selectWrapper.createEl('select', { cls: 'writerr-mode-select' });\n\n    // Add Lucide ChevronDown caret\n    const caret = selectWrapper.createEl('div', { cls: 'writerr-mode-caret' });\n    caret.innerHTML = `\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <polyline points=\"6,9 12,15 18,9\"/>\n      </svg>\n    `;\n\n    this.modeSelect.addEventListener('change', () => {\n      this.events.onModeChange(this.modeSelect.value);\n    });\n  }\n\n  private createRightSection(): void {\n    const rightContainer = this.createElement('div', { cls: 'chat-header-controls' });\n\n    this.createHistoryButton(rightContainer);\n    this.createSettingsButton(rightContainer);\n    // Status indicator moved to bottom toolbar\n  }\n\n  private createHistoryButton(parent: HTMLElement): void {\n    const historyButton = parent.createEl('button', { cls: 'chat-control-button' });\n    historyButton.innerHTML = `\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\"/>\n        <path d=\"M3 3v5h5\"/>\n        <path d=\"M12 7v5l4 2\"/>\n      </svg>\n    `;\n    historyButton.title = 'Chat History';\n    historyButton.onclick = () => this.events.onHistoryClick();\n\n    this.styleControlButton(historyButton);\n  }\n\n  private createSettingsButton(parent: HTMLElement): void {\n    const settingsButton = parent.createEl('button', { cls: 'chat-control-button' });\n    settingsButton.innerHTML = `\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n      </svg>\n    `;\n    settingsButton.title = 'Chat Settings';\n    settingsButton.onclick = () => this.events.onSettingsClick();\n\n    this.styleControlButton(settingsButton);\n  }\n\n  private createStatusIndicator(parent: HTMLElement): void {\n    this.statusIndicator = parent.createEl('div', { cls: 'chat-status-indicator' });\n    this.updateStatusIndicator();\n  }\n\n  private styleControlButton(button: HTMLButtonElement): void {\n    // No inline styles needed - CSS class handles everything\n    \n    // Update SVG icons to be larger (18px instead of 16px)\n    const svg = button.querySelector('svg');\n    if (svg) {\n      svg.setAttribute('width', '18');\n      svg.setAttribute('height', '18');\n    }\n\n    // Add tooltip positioning style to appear above with VERY high z-index\n    button.addEventListener('mouseenter', () => {\n      const tooltip = button.getAttribute('title');\n      if (tooltip) {\n        button.style.position = 'relative';\n        button.setAttribute('data-tooltip', tooltip);\n        button.removeAttribute('title');\n        \n        // Add tooltip styles if not already added - with EXTREMELY high z-index\n        if (!document.querySelector('#header-tooltip-styles')) {\n          const style = document.createElement('style');\n          style.id = 'header-tooltip-styles';\n          style.textContent = `\n            [data-tooltip]:hover::before {\n              content: attr(data-tooltip) !important;\n              position: absolute !important;\n              bottom: calc(100% + 8px) !important;\n              left: 50% !important;\n              transform: translateX(-50%) !important;\n              background: var(--background-primary) !important;\n              color: var(--text-normal) !important;\n              border: 1px solid var(--background-modifier-border) !important;\n              border-radius: 4px !important;\n              padding: 4px 8px !important;\n              font-size: 11px !important;\n              white-space: nowrap !important;\n              z-index: 9999999 !important;\n              box-shadow: 0 2px 8px rgba(0,0,0,0.3) !important;\n              pointer-events: none !important;\n            }\n          `;\n          document.head.appendChild(style);\n        }\n      }\n    });\n  }\n\n  public populateModeOptions(): void {\n    if (!this.modeSelect) return;\n\n    console.log('Populating mode options...', this.modeSelect);\n\n    // Clear existing options\n    this.modeSelect.innerHTML = '';\n\n    // Add Chat mode first (default, bypasses Editorial Engine)\n    this.modeSelect.createEl('option', { \n      value: 'chat', \n      text: 'Chat Mode' \n    });\n\n    // Check if Editorial Engine is available and get enabled modes only\n    if (window.Writerr?.editorial) {\n      try {\n        const modes = window.Writerr.editorial.getEnabledModes();\n        console.log('Editorial Engine enabled modes found:', modes);\n        \n        for (const mode of modes) {\n          this.modeSelect.createEl('option', { \n            value: mode.id, \n            text: mode.name \n          });\n          console.log(`Added mode option: ${mode.name} (${mode.id})`);\n        }\n\n        console.log(`Successfully loaded ${modes.length} enabled Editorial Engine modes to dropdown`);\n        \n        // Force a visual update\n        this.modeSelect.style.display = 'none';\n        this.modeSelect.offsetHeight; // Trigger reflow\n        this.modeSelect.style.display = '';\n        \n      } catch (error) {\n        console.warn('Failed to load Editorial Engine modes:', error);\n        \n        const unavailableOption = this.modeSelect.createEl('option', {\n          value: 'editorial-unavailable',\n          text: 'Editorial Engine Unavailable'\n        });\n        unavailableOption.disabled = true;\n      }\n    } else {\n      console.log('Editorial Engine not available, showing loading state');\n      \n      const loadingOption = this.modeSelect.createEl('option', { \n        value: 'editorial-loading', \n        text: 'Editorial Engine Loading...' \n      });\n      loadingOption.disabled = true;\n\n      // Try to reload modes after a delay\n      setTimeout(() => {\n        console.log('Retrying mode population after delay...');\n        this.populateModeOptions();\n      }, 2000);\n    }\n\n    // Set default mode\n    const defaultMode = this.plugin.settings.defaultMode || 'chat';\n    this.modeSelect.value = defaultMode;\n    console.log(`Set default mode to: ${defaultMode}, current value: ${this.modeSelect.value}`);\n  }\n\n  public updateStatusIndicator(): void {\n    if (!this.statusIndicator) return;\n\n    // Check Editorial Engine availability\n    const hasEditorialEngine = !!window.Writerr?.editorial;\n    const hasTrackEdits = !!window.WriterrlAPI?.trackEdits;\n    \n    // Track previous status to detect changes\n    const previousStatus = this.statusIndicator.getAttribute('data-status');\n    \n    let status = 'ready';\n    let color = 'var(--color-green)';\n    \n    if (!hasEditorialEngine && !hasTrackEdits) {\n      status = 'limited';\n      color = 'var(--color-yellow)';\n    } else if (!hasEditorialEngine || !hasTrackEdits) {\n      status = 'partial';\n      color = 'var(--color-orange)';\n    }\n    \n    this.statusIndicator.style.cssText = `\n      width: 8px;\n      height: 8px;\n      border-radius: 50%;\n      background: ${color};\n      transition: background-color 0.3s ease;\n    `;\n    \n    this.statusIndicator.setAttribute('title', \n      status === 'ready' ? 'All systems ready' :\n      status === 'partial' ? 'Some features unavailable' :\n      'Limited functionality - Editorial Engine and Track Edits not available'\n    );\n    \n    this.statusIndicator.setAttribute('data-status', status);\n    \n    // Refresh mode options if Editorial Engine status changed\n    if (previousStatus !== status && hasEditorialEngine) {\n      this.populateModeOptions();\n    }\n  }\n\n  public getSelectedMode(): string {\n    return this.modeSelect?.value || 'chat';\n  }\n\n  public setMode(mode: string): void {\n    if (this.modeSelect) {\n      this.modeSelect.value = mode;\n    }\n  }\n\n  public refreshModeOptions(): void {\n    this.populateModeOptions();\n  }\n}", "import { setIcon } from 'obsidian';\nimport { BaseComponent } from './BaseComponent';\nimport { ComponentOptions, ContextAreaEvents, DocumentContext } from './types';\n\ninterface ContextAreaOptions extends ComponentOptions {\n  events: ContextAreaEvents;\n}\n\nexport class ContextArea extends BaseComponent {\n  private events: ContextAreaEvents;\n  private documentsContainer: HTMLElement;\n  private contextHeader: HTMLElement;\n  private clearButton: HTMLElement | null = null; // Add reference to clear button\n  private isCollapsed: boolean = false;\n  private documents: DocumentContext[] = [];\n\n  constructor(options: ContextAreaOptions) {\n    super(options);\n    this.events = options.events;\n    this.isCollapsed = true; // Default to closed\n  }\n\n  render(): void {\n    this.createContextArea();\n    this.createHeader();\n    this.createDocumentsContainer();\n    \n    // Start empty and collapsed - no demo documents\n  }\n\n  private createContextArea(): void {\n    this.container.style.cssText = `\n      transition: all 0.3s ease;\n      overflow: hidden;\n      border-top: 1px solid var(--background-modifier-border);\n      margin: 0;\n      width: 100%;\n    `;\n    this.updateContextAreaStyling();\n  }\n\n  private updateContextAreaStyling(): void {\n    // Never show background - always transparent\n    this.container.style.background = 'transparent';\n    \n    if (this.isCollapsed) {\n      this.container.style.borderTop = 'none';\n    } else {\n      this.container.style.borderTop = '1px solid var(--background-modifier-border)';\n    }\n  }\n\n  private createHeader(): void {\n    this.contextHeader = this.createElement('div', { cls: 'context-header' });\n    this.contextHeader.style.cssText = `\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 8px 16px;\n    `;\n\n    // LEFT SECTION - Toggle and label\n    const leftSection = this.contextHeader.createEl('div');\n    leftSection.style.cssText = 'display: flex; align-items: center; gap: 8px; flex: 1;';\n\n    // Collapse/expand icon\n    const collapseIcon = leftSection.createEl('div', { cls: 'context-collapse-icon' });\n    collapseIcon.innerHTML = `\n      <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <polyline points=\"6 9 12 15 18 9\"/>\n      </svg>\n    `;\n    collapseIcon.style.cssText = `\n      transition: transform 0.3s ease;\n      color: var(--text-muted);\n      display: flex;\n      align-items: center;\n      transform: ${this.isCollapsed ? 'rotate(-90deg)' : 'rotate(0deg)'};\n    `;\n\n    const contextLabel = leftSection.createEl('span', { text: 'Context' });\n    contextLabel.style.cssText = `\n      font-size: 12px;\n      color: var(--text-muted);\n      font-weight: 500;\n    `;\n\n    // Document count badge\n    const countBadge = leftSection.createEl('span', { cls: 'context-count-badge' });\n    this.updateCountBadge(countBadge);\n\n    // RIGHT SECTION - Add button FAR RIGHT where it belongs\n    const rightSection = this.contextHeader.createEl('div');\n    rightSection.style.cssText = 'display: flex; align-items: center; flex-shrink: 0;';\n\n    // Add document button - FAR RIGHT\n    const addDocButton = rightSection.createEl('button', { cls: 'context-add-button' });\n    addDocButton.innerHTML = `\n      <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M12 5v14\"/>\n        <path d=\"M5 12h14\"/>\n      </svg>\n    `;\n    addDocButton.title = 'Attach document';\n    addDocButton.setAttribute('data-tooltip', 'Attach document');\n    addDocButton.onclick = (e) => {\n      e.stopPropagation();\n      this.showDocumentPicker();\n    };\n\n    // Header click to toggle collapse (but not on button)\n    this.contextHeader.onclick = (e) => {\n      if (e.target !== addDocButton && !addDocButton.contains(e.target as Node)) {\n        this.toggleCollapse();\n      }\n    };\n\n    this.addHoverEffect(this.contextHeader, {\n      'background-color': 'var(--background-modifier-hover)'\n    });\n  }\n\n  private createDocumentsContainer(): void {\n    this.documentsContainer = this.createElement('div', {\n      cls: 'context-documents',\n      styles: {\n        padding: '0 16px 12px 16px',\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '8px',\n        minHeight: '40px', // Minimum height to show clear button\n        transition: 'all 0.3s ease',\n        position: 'relative',\n        height: this.isCollapsed ? '0' : 'auto'\n      }\n    });\n\n    if (this.isCollapsed) {\n      this.documentsContainer.style.padding = '0 16px';\n    }\n\n    // Add clear button inside the container (only visible when open)\n    this.createClearButton();\n  }\n\n  private createClearButton(): void {\n    this.clearButton = this.documentsContainer.createEl('button', { cls: 'writerr-context-action' });\n    this.clearButton.title = 'Clear all context';\n    this.clearButton.setAttribute('data-tooltip', 'Clear all context');\n    this.clearButton.onclick = (e) => {\n      e.stopPropagation();\n      this.clearAllDocuments();\n    };\n\n    // Lucide Paintbrush icon - same as toolbar\n    this.clearButton.innerHTML = `\n      <svg class=\"writerr-context-action-icon\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M18.37 2.63 14 7l-1.59-1.59a2 2 0 0 0-2.82 0L8 7l9 9 1.59-1.59a2 2 0 0 0 0-2.82L17 10l4.37-4.37a2.12 2.12 0 1 0-3-3Z\"/>\n        <path d=\"M9 8c-2 3-4 3.5-7 4l8 10c2-1 6-5 6-7\"/>\n        <path d=\"M14.5 17.5 4.5 15\"/>\n      </svg>\n    `;\n    \n    // Set initial state\n    this.updateClearButtonState();\n  }\n\n  private styleActionButton(button: HTMLButtonElement): void {\n    button.style.cssText = `\n      background: transparent;\n      border: none;\n      cursor: pointer;\n      color: var(--text-muted);\n      padding: 4px;\n      border-radius: 4px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: all 0.2s ease;\n    `;\n\n    this.addHoverEffect(button, {\n      'background-color': 'var(--background-modifier-hover)',\n      'color': 'var(--text-normal)'\n    });\n  }\n\n  public addDocument(doc: DocumentContext): void {\n    // Check if document already exists\n    if (this.documents.some(d => d.path === doc.path)) return;\n\n    this.documents.push(doc);\n    this.createDocumentChip(doc);\n    this.updateCountBadge();\n    this.events.onDocumentAdd(doc);\n\n    // Update clear button state\n    this.updateClearButtonState();\n\n    // Auto-expand if collapsed and documents are added\n    if (this.isCollapsed) {\n      this.toggleCollapse();\n    }\n  }\n\n  private createDocumentChip(doc: DocumentContext): void {\n    const docChip = this.documentsContainer.createEl('div', { cls: 'context-document-chip' });\n    docChip.style.cssText = `\n      display: inline-flex;\n      align-items: center;\n      gap: 6px;\n      padding: 6px 10px;\n      background: var(--background-primary);\n      border: 1px solid var(--background-modifier-border);\n      border-radius: 16px;\n      font-size: 12px;\n      color: var(--text-normal);\n      cursor: pointer;\n      max-width: 200px;\n      transition: all 0.2s ease;\n      animation: slideIn 0.3s ease;\n    `;\n\n    // Add slideIn animation\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes slideIn {\n        from {\n          opacity: 0;\n          transform: translateY(-10px) scale(0.9);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0) scale(1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n\n    const docIcon = docChip.createEl('span');\n    docIcon.innerHTML = `\n      <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"/>\n        <path d=\"M14 2v6h6\"/>\n      </svg>\n    `;\n    docIcon.style.cssText = 'color: var(--text-muted); flex-shrink: 0;';\n\n    const docName = docChip.createEl('span', { text: doc.name });\n    docName.style.cssText = `\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      flex: 1;\n    `;\n\n    const removeBtn = docChip.createEl('button');\n    removeBtn.innerHTML = `\n      <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M18 6L6 18\"/>\n        <path d=\"M6 6l12 12\"/>\n      </svg>\n    `;\n    removeBtn.style.cssText = `\n      background: none;\n      border: none;\n      cursor: pointer;\n      color: var(--text-muted);\n      padding: 2px;\n      width: 16px;\n      height: 16px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: 50%;\n      flex-shrink: 0;\n      transition: all 0.2s ease;\n    `;\n\n    // Document chip interactions\n    docChip.onclick = (e) => {\n      if (e.target !== removeBtn && !removeBtn.contains(e.target as Node)) {\n        this.events.onDocumentOpen(doc);\n      }\n    };\n\n    removeBtn.onclick = (e) => {\n      e.stopPropagation();\n      this.removeDocument(doc, docChip);\n    };\n\n    // Hover effects - lighter/more opaque background\n    this.addHoverEffect(docChip, {\n      'background-color': 'var(--background-secondary)',\n      'transform': 'translateY(-1px)',\n      'box-shadow': '0 2px 8px rgba(0, 0, 0, 0.08)',\n      'border-color': 'var(--background-modifier-border-hover)'\n    });\n\n    this.addHoverEffect(removeBtn, {\n      'background-color': 'var(--background-modifier-error)',\n      'color': 'var(--text-on-accent)'\n    });\n  }\n\n  private removeDocument(doc: DocumentContext, chipEl: HTMLElement): void {\n    // Remove from documents array\n    this.documents = this.documents.filter(d => d.path !== doc.path);\n    \n    // Animate out and remove\n    chipEl.style.animation = 'slideOut 0.2s ease forwards';\n    \n    const slideOutStyle = document.createElement('style');\n    slideOutStyle.textContent = `\n      @keyframes slideOut {\n        from {\n          opacity: 1;\n          transform: translateY(0) scale(1);\n        }\n        to {\n          opacity: 0;\n          transform: translateY(-10px) scale(0.8);\n        }\n      }\n    `;\n    document.head.appendChild(slideOutStyle);\n\n    setTimeout(() => {\n      chipEl.remove();\n      document.head.removeChild(slideOutStyle);\n    }, 200);\n\n    this.updateCountBadge();\n    this.updateClearButtonState();\n    this.events.onDocumentRemove(doc);\n  }\n\n  private clearAllDocuments(): void {\n    // Only remove document chips, not the clear button itself\n    const chips = Array.from(this.documentsContainer.children)\n      .filter(child => child !== this.clearButton);\n    \n    chips.forEach((chip, index) => {\n      setTimeout(() => {\n        chip.remove();\n      }, index * 50);\n    });\n\n    this.documents.forEach(doc => {\n      this.events.onDocumentRemove(doc);\n    });\n\n    this.documents = [];\n    this.updateCountBadge();\n    \n    // Gray out clear button when no documents remain\n    this.updateClearButtonState();\n  }\n\n  private updateCountBadge(badgeEl?: HTMLElement): void {\n    const badge = badgeEl || this.container.querySelector('.context-count-badge') as HTMLElement;\n    if (!badge) return;\n\n    const count = this.documents.length;\n    \n    if (count > 0) {\n      badge.textContent = count.toString();\n      badge.style.cssText = `\n        background: var(--interactive-accent);\n        color: var(--text-on-accent);\n        font-size: 10px;\n        padding: 2px 6px;\n        border-radius: 8px;\n        font-weight: 500;\n        min-width: 16px;\n        text-align: center;\n      `;\n    } else {\n      badge.textContent = '';\n      badge.style.cssText = 'display: none;';\n    }\n  }\n\n  private updateClearButtonState(): void {\n    console.log('updateClearButtonState called, documents:', this.documents.length);\n    console.log('clearButton exists:', !!this.clearButton);\n    \n    if (!this.clearButton) return;\n    \n    const hasDocuments = this.documents.length > 0;\n    \n    if (hasDocuments) {\n      // Enable button - normal appearance\n      console.log('Enabling clear button');\n      this.clearButton.style.opacity = '1';\n      this.clearButton.style.cursor = 'pointer';\n      this.clearButton.style.pointerEvents = 'auto';\n    } else {\n      // Disable button - grayed out\n      console.log('Disabling clear button (gray out)');\n      this.clearButton.style.opacity = '0.5';\n      this.clearButton.style.cursor = 'not-allowed';\n      this.clearButton.style.pointerEvents = 'none';\n    }\n  }\n\n  private toggleCollapse(): void {\n    console.log('toggleCollapse called, isCollapsed:', this.isCollapsed, '-> will be:', !this.isCollapsed);\n    \n    this.isCollapsed = !this.isCollapsed;\n    \n    const collapseIcon = this.contextHeader.querySelector('.context-collapse-icon') as HTMLElement;\n    \n    if (this.isCollapsed) {\n      console.log('Collapsing context area - hiding clear button');\n      this.documentsContainer.style.height = '0';\n      this.documentsContainer.style.padding = '0';\n      this.documentsContainer.style.overflow = 'hidden';\n      this.documentsContainer.style.opacity = '0';\n      collapseIcon.style.transform = 'rotate(-90deg)';\n      if (this.clearButton) this.clearButton.style.display = 'none';\n    } else {\n      console.log('Expanding context area - showing clear button');\n      this.documentsContainer.style.height = 'auto';\n      this.documentsContainer.style.padding = '0 16px 12px 16px';\n      this.documentsContainer.style.overflow = 'visible';\n      this.documentsContainer.style.opacity = '1';\n      collapseIcon.style.transform = 'rotate(0deg)';\n      if (this.clearButton) this.clearButton.style.display = 'flex';\n    }\n\n    // Update background/border styling based on collapsed state\n    this.updateContextAreaStyling();\n  }\n\n  private showDocumentPicker(): void {\n    // Create document picker modal\n    const overlay = this.container.createEl('div', { cls: 'document-picker-overlay' });\n    overlay.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: rgba(0, 0, 0, 0.5);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 1000;\n      backdrop-filter: blur(4px);\n    `;\n\n    const modal = overlay.createEl('div', { cls: 'document-picker-modal' });\n    modal.style.cssText = `\n      background: var(--background-primary);\n      border: 1px solid var(--background-modifier-border);\n      border-radius: 12px;\n      padding: 24px;\n      min-width: 400px;\n      max-height: 500px;\n      overflow-y: auto;\n      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);\n      animation: modalSlideIn 0.3s ease;\n    `;\n\n    // Add modal animation\n    const modalStyle = document.createElement('style');\n    modalStyle.textContent = `\n      @keyframes modalSlideIn {\n        from {\n          opacity: 0;\n          transform: translateY(-20px) scale(0.95);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0) scale(1);\n        }\n      }\n    `;\n    document.head.appendChild(modalStyle);\n\n    this.createDocumentPickerContent(modal, overlay, modalStyle);\n\n    overlay.onclick = (e) => {\n      if (e.target === overlay) {\n        overlay.remove();\n        document.head.removeChild(modalStyle);\n      }\n    };\n  }\n\n  private createDocumentPickerContent(modal: HTMLElement, overlay: HTMLElement, styleEl: HTMLStyleElement): void {\n    const header = modal.createEl('div');\n    header.style.cssText = 'display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;';\n    \n    const title = header.createEl('h3', { text: 'Attach Document' });\n    title.style.cssText = 'margin: 0; color: var(--text-normal);';\n\n    const closeButton = header.createEl('button');\n    closeButton.innerHTML = `\n      <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M18 6L6 18\"/>\n        <path d=\"M6 6l12 12\"/>\n      </svg>\n    `;\n    closeButton.style.cssText = `\n      background: none;\n      border: none;\n      cursor: pointer;\n      color: var(--text-muted);\n      padding: 4px;\n      border-radius: 4px;\n      transition: all 0.2s ease;\n    `;\n    closeButton.onclick = () => {\n      overlay.remove();\n      document.head.removeChild(styleEl);\n    };\n\n    this.addHoverEffect(closeButton, {\n      'background-color': 'var(--background-modifier-hover)',\n      'color': 'var(--text-normal)'\n    });\n\n    // Search input\n    const searchInput = modal.createEl('input', { \n      type: 'text',\n      placeholder: 'Search documents...'\n    });\n    searchInput.style.cssText = `\n      width: 100%;\n      padding: 10px 12px;\n      border: 1px solid var(--background-modifier-border);\n      border-radius: 8px;\n      background: var(--background-primary);\n      color: var(--text-normal);\n      margin-bottom: 16px;\n      font-family: inherit;\n      outline: none;\n      transition: border-color 0.2s ease;\n    `;\n\n    searchInput.addEventListener('focus', () => {\n      searchInput.style.borderColor = 'var(--interactive-accent)';\n    });\n\n    searchInput.addEventListener('blur', () => {\n      searchInput.style.borderColor = 'var(--background-modifier-border)';\n    });\n\n    // Document list\n    const docList = modal.createEl('div');\n    \n    // Get vault files\n    const files = this.plugin.app.vault.getMarkdownFiles();\n    const recentFiles = files.slice(0, 10);\n\n    recentFiles.forEach(file => {\n      const docItem = docList.createEl('div');\n      docItem.style.cssText = `\n        padding: 12px;\n        border: 1px solid var(--background-modifier-border);\n        border-radius: 8px;\n        margin-bottom: 8px;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        gap: 12px;\n        transition: all 0.2s ease;\n      `;\n\n      docItem.innerHTML = `\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"/>\n          <path d=\"M14 2v6h6\"/>\n        </svg>\n        <div>\n          <div style=\"font-weight: 500; color: var(--text-normal);\">${file.basename}</div>\n          <div style=\"font-size: 12px; color: var(--text-muted);\">${file.path}</div>\n        </div>\n      `;\n\n      docItem.onclick = () => {\n        this.addDocument({ name: file.basename + '.md', path: file.path });\n        overlay.remove();\n        document.head.removeChild(styleEl);\n      };\n\n      this.addHoverEffect(docItem, {\n        'background-color': 'var(--background-modifier-hover)',\n        'border-color': 'var(--interactive-accent)',\n        'transform': 'translateY(-1px)'\n      });\n    });\n\n    searchInput.focus();\n  }\n\n  public getDocuments(): DocumentContext[] {\n    return [...this.documents];\n  }\n}", "import { BaseComponent } from './BaseComponent';\nimport { ComponentOptions, ChatInputEvents } from './types';\n\ninterface ChatInputOptions extends ComponentOptions {\n  events: ChatInputEvents;\n}\n\nexport class ChatInput extends BaseComponent {\n  private events: ChatInputEvents;\n  private messageInput: HTMLTextAreaElement;\n  private sendButton: HTMLButtonElement;\n  private isProcessing: boolean = false;\n\n  constructor(options: ChatInputOptions) {\n    super(options);\n    this.events = options.events;\n  }\n\n  render(): void {\n    this.createInputContainer();\n    this.createMessageInput();\n    this.createSendButton();\n    this.setupKeyboardShortcuts();\n  }\n\n  private createInputContainer(): void {\n    this.container.style.cssText = `\n      padding: 16px;\n      background: var(--background-primary);\n      position: relative;\n    `;\n  }\n\n  private createMessageInput(): void {\n    this.messageInput = this.container.createEl('textarea', { \n      cls: 'chat-message-input',\n      attr: { \n        placeholder: 'Type your message...',\n        rows: '2'\n      }\n    });\n\n    this.messageInput.style.cssText = `\n      width: 100%;\n      min-height: 60px;\n      max-height: 160px;\n      padding: 16px 52px 16px 16px;\n      border: 2px solid var(--background-modifier-border);\n      border-radius: 12px;\n      background: var(--background-primary);\n      color: var(--text-normal);\n      resize: none;\n      font-family: inherit;\n      font-size: 14px;\n      line-height: 1.4;\n      outline: none;\n      transition: all 0.2s ease;\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n      box-sizing: border-box;\n      overflow: hidden;\n      overflow-wrap: break-word;\n      word-wrap: break-word;\n      white-space: pre-wrap;\n    `;\n\n    this.setupAutoResize();\n    this.setupInputEvents();\n  }\n\n  private createSendButton(): void {\n    this.sendButton = this.container.createEl('button', { \n      cls: 'writerr-send-button',\n      attr: {\n        'type': 'submit',\n        'aria-label': 'Send message'\n      }\n    });\n    \n    // Use proper Lucide Send icon - simple and clean\n    this.sendButton.innerHTML = `\n      <svg class=\"writerr-send-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"m22 2-7 20-4-9-9-4z\"/>\n        <path d=\"M22 2 11 13\"/>\n      </svg>\n    `;\n    \n    this.setupSendButtonEvents();\n  }\n\n  private setupAutoResize(): void {\n    const autoResize = () => {\n      this.messageInput.style.height = '60px';\n      const scrollHeight = this.messageInput.scrollHeight;\n      const maxHeight = 160;\n      const newHeight = Math.min(Math.max(scrollHeight, 60), maxHeight);\n      this.messageInput.style.height = newHeight + 'px';\n    };\n\n    this.messageInput.addEventListener('input', autoResize);\n    \n    // Initial resize\n    setTimeout(autoResize, 0);\n  }\n\n  private setupInputEvents(): void {\n    // Focus/blur effects\n    this.messageInput.addEventListener('focus', () => {\n      this.messageInput.style.borderColor = 'var(--interactive-accent)';\n      this.messageInput.style.boxShadow = '0 2px 8px rgba(0, 0, 0, 0.1), 0 0 0 1px var(--interactive-accent)';\n    });\n    \n    this.messageInput.addEventListener('blur', () => {\n      this.messageInput.style.borderColor = 'var(--background-modifier-border)';\n      this.messageInput.style.boxShadow = '0 1px 3px rgba(0, 0, 0, 0.05)';\n    });\n\n    // Input validation\n    this.messageInput.addEventListener('input', () => {\n      this.updateSendButtonState();\n    });\n  }\n\n  private setupSendButtonEvents(): void {\n    this.sendButton.onclick = () => this.sendMessage();\n    \n    // Light hover effects\n    this.sendButton.addEventListener('mouseenter', () => {\n      if (!this.isProcessing) {\n        this.sendButton.style.backgroundColor = 'var(--background-modifier-hover)';\n        this.sendButton.style.color = 'var(--interactive-accent)';\n        this.sendButton.style.opacity = '1';\n        this.sendButton.style.transform = 'scale(1.05)';\n      }\n    });\n    \n    this.sendButton.addEventListener('mouseleave', () => {\n      if (!this.isProcessing) {\n        this.sendButton.style.backgroundColor = 'transparent';\n        this.sendButton.style.color = 'var(--text-muted)';\n        this.sendButton.style.opacity = this.messageInput.value.trim() ? '1' : '0.6';\n        this.sendButton.style.transform = 'scale(1)';\n      }\n    });\n\n    // Simple click effect\n    this.sendButton.addEventListener('click', () => {\n      if (!this.isProcessing) {\n        this.sendButton.style.transform = 'scale(0.95)';\n        setTimeout(() => {\n          if (!this.isProcessing) {\n            this.sendButton.style.transform = 'scale(1)';\n          }\n        }, 100);\n      }\n    });\n  }\n\n  private setupKeyboardShortcuts(): void {\n    this.messageInput.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n        this.sendMessage();\n      } else if (e.key === 'Enter' && e.shiftKey) {\n        // Allow Shift+Enter for new line (default behavior)\n        return;\n      } else if (e.key === 'Escape') {\n        this.messageInput.blur();\n      }\n      // Note: Plain Enter now creates new line (default textarea behavior)\n    });\n  }\n\n  private updateSendButtonState(): void {\n    const hasContent = this.messageInput.value.trim().length > 0;\n    \n    if (hasContent && !this.isProcessing) {\n      this.sendButton.style.opacity = '1';\n      this.sendButton.style.cursor = 'pointer';\n      this.sendButton.disabled = false;\n      this.sendButton.style.color = 'var(--interactive-accent)';\n    } else {\n      this.sendButton.style.opacity = this.isProcessing ? '0.8' : '0.6';\n      this.sendButton.style.cursor = this.isProcessing ? 'default' : 'not-allowed';\n      this.sendButton.style.color = 'var(--text-muted)';\n      this.sendButton.disabled = !this.isProcessing;\n    }\n  }\n\n  private sendMessage(): void {\n    const message = this.messageInput.value.trim();\n    if (!message || this.isProcessing) return;\n\n    // Get current mode (would be passed from parent in real implementation)\n    const mode = 'chat'; // This should be obtained from the header component\n    \n    this.events.onSend(message, mode);\n    this.clearInput();\n  }\n\n  public setProcessingState(processing: boolean): void {\n    this.isProcessing = processing;\n    \n    if (processing) {\n      this.sendButton.innerHTML = `\n        <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <path d=\"M21 12a9 9 0 11-6.219-8.56\"/>\n        </svg>\n      `;\n      this.sendButton.style.color = 'var(--text-muted)';\n      this.sendButton.style.cursor = 'default';\n      this.sendButton.style.opacity = '0.8';\n      // Add loading animation\n      this.sendButton.style.animation = 'spin 1s linear infinite';\n      \n      // Add spin animation if not exists\n      if (!document.querySelector('#spin-animation')) {\n        const style = document.createElement('style');\n        style.id = 'spin-animation';\n        style.textContent = `\n          @keyframes spin {\n            from { transform: rotate(0deg); }\n            to { transform: rotate(360deg); }\n          }\n        `;\n        document.head.appendChild(style);\n      }\n    } else {\n      this.sendButton.innerHTML = `\n        <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <path d=\"m22 2-7 20-4-9-9-4z\"/>\n          <path d=\"M22 2 11 13\"/>\n        </svg>\n      `;\n      this.sendButton.style.animation = 'none';\n      this.sendButton.style.cursor = 'pointer';\n    }\n    \n    this.updateSendButtonState();\n  }\n\n  public clearInput(): void {\n    this.messageInput.value = '';\n    this.messageInput.style.height = '44px';\n    this.updateSendButtonState();\n  }\n\n  public focusInput(): void {\n    this.messageInput.focus();\n  }\n\n  public getValue(): string {\n    return this.messageInput.value;\n  }\n\n  public setValue(value: string): void {\n    this.messageInput.value = value;\n    this.updateSendButtonState();\n    \n    // Trigger auto-resize\n    this.messageInput.style.height = '44px';\n    const scrollHeight = this.messageInput.scrollHeight;\n    const maxHeight = 160;\n    const newHeight = Math.min(Math.max(scrollHeight, 44), maxHeight);\n    this.messageInput.style.height = newHeight + 'px';\n  }\n}", "import { setIcon } from 'obsidian';\nimport { BaseComponent, ComponentOptions } from './BaseComponent';\n\ninterface ChatToolbarOptions extends ComponentOptions {\n  events: ChatToolbarEvents;\n}\n\nexport interface ChatToolbarEvents {\n  onAddDocument: () => void;\n  onCopyChat: () => void;\n  onClearChat: () => void;\n  onModelChange: (model: string) => void;\n  onPromptChange: (prompt: string) => void;\n  onModelProviderReady?: () => void;\n}\n\nexport class ChatToolbar extends BaseComponent {\n  private events: ChatToolbarEvents;\n  private statusIndicator: HTMLElement;\n  private modelSelect: HTMLSelectElement;\n  private promptSelect: HTMLSelectElement;\n  private tokenCounter: HTMLElement;\n\n  constructor(options: ChatToolbarOptions) {\n    super(options);\n    this.events = options.events;\n  }\n\n  render(): void {\n    this.createToolbarContainer();\n    this.createLeftSection();\n    this.createRightSection();\n  }\n\n  private createToolbarContainer(): void {\n    this.container.style.cssText = `\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 12px 16px;\n      border-top: 1px solid var(--background-modifier-border);\n      background: var(--background-primary);\n      font-size: 12px;\n      color: var(--text-muted);\n    `;\n  }\n\n  private createLeftSection(): void {\n    const leftContainer = this.createElement('div', {\n      cls: 'writerr-toolbar-left'\n    });\n\n    // Add document button - Lucide FilePlus2\n    this.createActionButton(leftContainer, 'Add document to chat', `\n      <svg class=\"writerr-toolbar-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"/>\n        <path d=\"M14 2v6h6\"/>\n        <path d=\"M12 11v6\"/>\n        <path d=\"M9 14h6\"/>\n      </svg>\n    `, () => this.events.onAddDocument());\n\n    // Copy chat button - Lucide Copy\n    this.createActionButton(leftContainer, 'Copy entire chat', `\n      <svg class=\"writerr-toolbar-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"/>\n        <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"/>\n      </svg>\n    `, () => this.events.onCopyChat());\n\n    // Clear chat button - Lucide Paintbrush\n    this.createActionButton(leftContainer, 'Clear chat', `\n      <svg class=\"writerr-toolbar-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M18.37 2.63 14 7l-1.59-1.59a2 2 0 0 0-2.82 0L8 7l9 9 1.59-1.59a2 2 0 0 0 0-2.82L17 10l4.37-4.37a2.12 2.12 0 1 0-3-3Z\"/>\n        <path d=\"M9 8c-2 3-4 3.5-7 4l8 10c2-1 6-5 6-7\"/>\n        <path d=\"M14.5 17.5 4.5 15\"/>\n      </svg>\n    `, () => this.events.onClearChat());\n  }\n\n  private createRightSection(): void {\n    const rightContainer = this.createElement('div', {\n      cls: 'toolbar-right',\n      styles: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '8px'  // Reduced gap to make room\n      }\n    });\n\n    // Model dropdown with status indicator\n    this.createModelSelect(rightContainer);\n    \n    // Prompt dropdown\n    this.createPromptSelect(rightContainer);\n    \n    // Token counter\n    this.createTokenCounter(rightContainer);\n\n    // NO CONTEXT BUTTON HERE - it belongs in the context area header\n  }\n\n  private createActionButton(parent: HTMLElement, tooltip: string, icon: string, onClick: () => void): void {\n    const button = parent.createEl('button', { \n      cls: 'writerr-toolbar-button',\n      attr: { 'data-tooltip': tooltip }\n    });\n    button.innerHTML = icon;\n    button.onclick = onClick;\n  }\n\n  private createActionButtonWithIcon(parent: HTMLElement, tooltip: string, iconName: string, onClick: () => void): void {\n    const button = parent.createEl('button');\n    \n    // Use Obsidian's setIcon with proper fallback chain\n    const iconContainer = button.createEl('div');\n    const iconOptions = [iconName, 'brush-cleaning', 'broom', 'brush'];\n    \n    let iconSet = false;\n    for (const icon of iconOptions) {\n      try {\n        setIcon(iconContainer, icon);\n        iconSet = true;\n        break;\n      } catch {\n        continue;\n      }\n    }\n    \n    if (!iconSet) {\n      // Final fallback - broom emoji\n      iconContainer.textContent = '\uD83E\uDDF9';\n    }\n    \n    button.title = tooltip;\n    button.setAttribute('data-tooltip', tooltip);\n    button.onclick = onClick;\n\n    button.style.cssText = `\n      background: transparent !important;\n      border: none !important;\n      box-shadow: none !important;\n      cursor: pointer !important;\n      color: var(--text-muted) !important;\n      padding: 4px !important;\n      display: flex !important;\n      align-items: center !important;\n      justify-content: center !important;\n      transition: color 0.2s ease !important;\n    `;\n\n    this.addHoverEffect(button, {\n      'color': 'var(--text-normal)'\n    });\n  }\n\n  private createModelSelect(parent: HTMLElement): void {\n    const modelContainer = parent.createDiv();\n    modelContainer.style.cssText = `\n      display: flex;\n      align-items: center;\n      gap: 6px;\n      position: relative;\n    `;\n\n    // Status indicator dot\n    this.statusIndicator = modelContainer.createEl('div', { cls: 'status-indicator' });\n    this.updateStatusIndicator();\n\n    // Model select\n    this.modelSelect = modelContainer.createEl('select');\n    this.modelSelect.style.cssText = `\n      border: none !important;\n      box-shadow: none !important;\n      background: transparent !important;\n      padding: 4px 20px 4px 4px !important;\n      margin: 0 !important;\n      font-size: 12px;\n      color: var(--text-muted);\n      cursor: pointer;\n      outline: none;\n      appearance: none;\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      max-width: 120px;\n    `;\n\n    // Add caret\n    const caret = modelContainer.createEl('div');\n    caret.innerHTML = `\n      <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <polyline points=\"6,9 12,15 18,9\"></polyline>\n      </svg>\n    `;\n    caret.style.cssText = `\n      pointer-events: none;\n      color: var(--text-muted);\n      position: absolute;\n      right: 2px;\n      display: flex;\n      align-items: center;\n    `;\n\n    this.populateModelOptions();\n\n    this.modelSelect.addEventListener('change', () => {\n      this.events.onModelChange(this.modelSelect.value);\n    });\n  }\n\n  private createPromptSelect(parent: HTMLElement): void {\n    const promptContainer = parent.createDiv();\n    promptContainer.style.cssText = `\n      display: flex;\n      align-items: center;\n      gap: 6px;\n      position: relative;\n    `;\n\n    this.promptSelect = promptContainer.createEl('select');\n    this.promptSelect.style.cssText = `\n      border: none !important;\n      box-shadow: none !important;\n      background: transparent !important;\n      padding: 4px 20px 4px 4px !important;\n      margin: 0 !important;\n      font-size: 12px;\n      color: var(--text-muted);\n      cursor: pointer;\n      outline: none;\n      appearance: none;\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      max-width: 100px;\n    `;\n\n    // Add caret\n    const caret = promptContainer.createEl('div');\n    caret.innerHTML = `\n      <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <polyline points=\"6,9 12,15 18,9\"></polyline>\n      </svg>\n    `;\n    caret.style.cssText = `\n      pointer-events: none;\n      color: var(--text-muted);\n      position: absolute;\n      right: 2px;\n      display: flex;\n      align-items: center;\n    `;\n\n    this.populatePromptOptions();\n\n    this.promptSelect.addEventListener('change', () => {\n      this.events.onPromptChange(this.promptSelect.value);\n    });\n  }\n\n  private createTokenCounter(parent: HTMLElement): void {\n    this.tokenCounter = parent.createEl('span', { cls: 'writerr-token-count' });\n    this.updateTokenCounter(0, 90000); // Changed from 1M to 90K\n  }\n\n  // Context button removed - belongs in context area header, not toolbar\n\n  private populateModelOptions(): void {\n    // Clear existing options\n    this.modelSelect.innerHTML = '';\n\n    // Try to get AI Providers plugin\n    const app = (window as any).app;\n    const plugins = app?.plugins?.plugins;\n    const aiProvidersPlugin = plugins?.['ai-providers'];\n    \n    if (!aiProvidersPlugin) {\n        console.log('AI Providers plugin not found');\n        this.modelSelect.createEl('option', { \n          value: '', \n          text: 'AI Providers plugin not found'\n        });\n        return;\n    }\n\n    // Get the actual aiProviders SDK object\n    const aiProviders = aiProvidersPlugin.aiProviders;\n    \n    if (!aiProviders) {\n        console.log('AI Providers SDK not available on plugin object');\n        this.modelSelect.createEl('option', { \n          value: '', \n          text: 'AI Providers SDK not available'\n        });\n        return;\n    }\n\n    console.log('\u2705 Found AI Providers SDK:', aiProviders);\n    console.log('\uD83D\uDCCB AI Providers SDK methods:', Object.keys(aiProviders));\n\n    // Check if this has the execute method we need\n    if (typeof aiProviders.execute === 'function') {\n        console.log('\u2705 AI Providers SDK has execute method');\n    } else {\n        console.log('\u274C AI Providers SDK missing execute method');\n    }\n\n    try {\n        // Get available providers and models from AI Providers SDK\n        const availableProviders = this.getAvailableProvidersAndModels(aiProviders);\n        \n        if (Object.keys(availableProviders).length === 0) {\n            console.log('No providers configured in AI Providers plugin');\n            this.modelSelect.createEl('option', { \n              value: '', \n              text: 'No models configured' \n            });\n            return;\n        }\n\n        // Build hierarchical structure\n        for (const [provider, families] of Object.entries(availableProviders)) {\n            const providerGroup = this.modelSelect.createEl('optgroup', { label: provider });\n            \n            for (const [family, models] of Object.entries(families)) {\n                const familyGroup = this.modelSelect.createEl('optgroup', { label: `  ${family}` });\n                \n                (models as string[]).forEach(model => {\n                    familyGroup.createEl('option', { \n                      value: `${provider}:${model}`, // Store provider:model for routing\n                      text: `    ${model}` // Display only model name with indent\n                    });\n                });\n            }\n        }\n\n        console.log('Successfully populated model dropdown with providers');\n\n    } catch (error) {\n        console.error('Error populating model options:', error);\n        this.modelSelect.createEl('option', { \n          value: '', \n          text: 'Error loading models' \n        });\n    }\n  }\n\n  private getAvailableProvidersAndModels(aiProviders: any): Record<string, Record<string, string[]>> {\n    try {\n        console.log('\uD83D\uDD0D AI Providers plugin object:', aiProviders);\n        console.log('\uD83D\uDD0D Available methods/properties:', Object.keys(aiProviders));\n        console.log('\uD83D\uDD0D Plugin constructor:', aiProviders.constructor?.name);\n        \n        // Check for settings or configuration that might contain provider info\n        if (aiProviders.settings) {\n            console.log('\uD83D\uDCCB Plugin settings:', aiProviders.settings);\n        }\n        \n        // Try different possible API methods to get providers\n        let providers: any[] = [];\n        \n        const possibleMethods = [\n            'getProviders',\n            'getAvailableProviders', \n            'listProviders',\n            'providers',\n            'getConfiguredProviders'\n        ];\n        \n        for (const method of possibleMethods) {\n            if (typeof aiProviders[method] === 'function') {\n                console.log(`\uD83D\uDCDE Trying method: ${method}()`);\n                try {\n                    providers = aiProviders[method]();\n                    console.log(`\u2705 ${method}() returned:`, providers);\n                    break;\n                } catch (err) {\n                    console.log(`\u274C ${method}() failed:`, err);\n                }\n            } else if (aiProviders[method] !== undefined) {\n                console.log(`\uD83D\uDCCB Found property: ${method} =`, aiProviders[method]);\n                providers = Array.isArray(aiProviders[method]) ? aiProviders[method] : [aiProviders[method]];\n                break;\n            }\n        }\n        \n        // If no providers found through methods, try to extract from settings\n        if (providers.length === 0 && aiProviders.settings) {\n            const settings = aiProviders.settings;\n            if (settings.providers && Array.isArray(settings.providers)) {\n                providers = settings.providers;\n                console.log('\uD83D\uDCCB Using providers from settings:', providers);\n            } else if (settings.provider) {\n                providers = [settings.provider];\n                console.log('\uD83D\uDCCB Using single provider from settings:', providers);\n            }\n        }\n        \n        if (providers.length === 0) {\n            console.log('\u274C No providers found in AI Providers plugin');\n            return {};\n        }\n        \n        const organized: Record<string, Record<string, string[]>> = {};\n        \n        for (const provider of providers) {\n            console.log('\uD83D\uDD27 Processing provider:', provider);\n            \n            // Extract provider info - the structure might vary\n            const providerId = provider.id || provider.name || provider.type || 'unknown';\n            const providerName = this.getProviderDisplayName(providerId);\n            \n            // Try to get models from various possible properties\n            const models = provider.models || provider.availableModels || provider.supportedModels || [];\n            console.log(`\uD83D\uDCCB Models for ${providerId}:`, models);\n            \n            if (models.length > 0) {\n                const families = this.organizeModelsByFamily(models);\n                if (Object.keys(families).length > 0) {\n                    organized[providerName] = families;\n                    console.log(`\u2705 Added provider ${providerName} with families:`, families);\n                }\n            }\n        }\n        \n        console.log('\uD83C\uDFAF Final organized providers:', organized);\n        return organized;\n        \n    } catch (error) {\n        console.error('\u274C Error getting providers from AI Providers plugin:', error);\n        return {};\n    }\n}\n\n  private getProviderDisplayName(providerId: string): string {\n    const displayNames: Record<string, string> = {\n      'openai': 'OpenAI',\n      'anthropic': 'Anthropic', \n      'google': 'Google',\n      'ollama': 'Local/Ollama',\n      'azure': 'Azure OpenAI'\n    };\n    \n    return displayNames[providerId.toLowerCase()] || providerId;\n  }\n\n  private organizeModelsByFamily(models: string[]): Record<string, string[]> {\n    const families: Record<string, string[]> = {};\n    \n    for (const model of models) {\n        let family = 'Other';\n        const modelLower = model.toLowerCase();\n        \n        // Organize models by family based on naming patterns\n        if (modelLower.includes('gpt-4o')) {\n            family = 'GPT-4o';\n        } else if (modelLower.includes('gpt-4')) {\n            family = 'GPT-4';\n        } else if (modelLower.includes('gpt-3.5')) {\n            family = 'GPT-3.5';\n        } else if (modelLower.includes('claude-3-5')) {\n            family = 'Claude 3.5';\n        } else if (modelLower.includes('claude-3')) {\n            family = 'Claude 3';\n        } else if (modelLower.includes('claude-2')) {\n            family = 'Claude 2';\n        } else if (modelLower.includes('claude')) {\n            family = 'Claude';\n        } else if (modelLower.includes('gemini-pro')) {\n            family = 'Gemini Pro';\n        } else if (modelLower.includes('gemini')) {\n            family = 'Gemini';\n        } else if (modelLower.includes('llama-3')) {\n            family = 'Llama 3';\n        } else if (modelLower.includes('llama')) {\n            family = 'Llama';\n        } else if (modelLower.includes('mistral')) {\n            family = 'Mistral';\n        } else if (modelLower.includes('codellama')) {\n            family = 'Code Llama';\n        } else if (modelLower.includes('phi')) {\n            family = 'Phi';\n        } else if (modelLower.includes('qwen')) {\n            family = 'Qwen';\n        } else if (modelLower.includes('mixtral')) {\n            family = 'Mixtral';\n        }\n        \n        if (!families[family]) {\n            families[family] = [];\n        }\n        families[family].push(model);\n    }\n    \n    return families;\n}\n\n  public refreshModelOptions(): void {\n    // Re-populate model options from AI Providers plugin\n    this.populateModelOptions();\n  }\n\n  public setSelectedModel(providerAndModel: string): void {\n    // Set the selected model (format: \"provider:model\")\n    this.modelSelect.value = providerAndModel;\n  }\n\n  public getSelectedModel(): { provider: string; model: string } | null {\n    const value = this.modelSelect.value;\n    if (!value || !value.includes(':')) {\n      return null;\n    }\n    \n    const [provider, model] = value.split(':', 2);\n    return { provider, model };\n  }\n\n  public refreshAvailableModels(): void {\n    // Called when AI Providers plugin becomes available or providers change\n    this.refreshModelOptions();\n  }\n\n  private notifyModelProviderReady(): void {\n    // Emit event that model provider is ready\n    this.events.onModelProviderReady?.();\n  }\n\n  private populatePromptOptions(): void {\n    // Add default option\n    this.promptSelect.createEl('option', { value: '', text: 'Prompts' });\n\n    // This will eventually load from markdown files dynamically\n    const defaultPrompts = [\n      'Creative Writing',\n      'Technical Writing', \n      'Academic Style',\n      'Casual Tone',\n      'Professional'\n    ];\n\n    defaultPrompts.forEach(prompt => {\n      this.promptSelect.createEl('option', { value: prompt.toLowerCase().replace(' ', '-'), text: prompt });\n    });\n  }\n\n  public updateStatusIndicator(): void {\n    if (!this.statusIndicator) return;\n\n    // Check system availability\n    const hasEditorialEngine = !!window.Writerr?.editorial;\n    const hasTrackEdits = !!window.WriterrlAPI?.trackEdits;\n    \n    let color = 'var(--color-green)';\n    let status = 'All systems ready';\n    \n    if (!hasEditorialEngine && !hasTrackEdits) {\n      color = 'var(--color-red)';\n      status = 'Limited functionality';\n    } else if (!hasEditorialEngine || !hasTrackEdits) {\n      color = 'var(--color-orange)';\n      status = 'Some features unavailable';\n    }\n    \n    this.statusIndicator.style.cssText = `\n      width: 8px;\n      height: 8px;\n      border-radius: 50%;\n      background: ${color};\n      transition: background-color 0.3s ease;\n      flex-shrink: 0;\n    `;\n    \n    this.statusIndicator.title = status;\n  }\n\n  public updateTokenCounter(used: number, total: number): void {\n    if (!this.tokenCounter) return;\n\n    const percentage = (used / total) * 100;\n    let color = 'var(--text-muted)';\n\n    if (percentage > 90) {\n      color = 'var(--color-red)';\n    } else if (percentage > 70) {\n      color = 'var(--color-orange)';\n    }\n\n    this.tokenCounter.textContent = `${used.toLocaleString()} / ${total.toLocaleString()}`;\n    this.tokenCounter.style.color = color;\n  }\n}", "import { ChatMessage } from '@shared/types';\nimport { BaseComponent } from './BaseComponent';\nimport { ComponentOptions, MessageActionHandler } from './types';\nimport { MessageBubble } from './MessageBubble';\n\ninterface MessageListOptions extends ComponentOptions {\n  actionHandler: MessageActionHandler;\n}\n\nexport class MessageList extends BaseComponent {\n  private actionHandler: MessageActionHandler;\n  private messages: ChatMessage[] = [];\n  private messageBubbles: MessageBubble[] = [];\n\n  constructor(options: MessageListOptions) {\n    super(options);\n    this.actionHandler = options.actionHandler;\n  }\n\n  render(): void {\n    this.createMessageContainer();\n    this.showEmptyState();\n  }\n\n  private createMessageContainer(): void {\n    this.container.style.cssText = `\n      flex: 1;\n      overflow-y: auto;\n      padding: 20px;\n      min-height: 0;\n      scroll-behavior: smooth;\n      position: relative;\n    `;\n\n    // Custom scrollbar styling\n    this.container.addClass('custom-scrollbar');\n    \n    // Add custom scrollbar styles\n    if (!document.querySelector('#custom-scrollbar-styles')) {\n      const style = document.createElement('style');\n      style.id = 'custom-scrollbar-styles';\n      style.textContent = `\n        .custom-scrollbar::-webkit-scrollbar {\n          width: 6px;\n        }\n        .custom-scrollbar::-webkit-scrollbar-track {\n          background: transparent;\n        }\n        .custom-scrollbar::-webkit-scrollbar-thumb {\n          background: var(--scrollbar-thumb-bg);\n          border-radius: 3px;\n          opacity: 0;\n          transition: opacity 0.2s ease;\n        }\n        .custom-scrollbar:hover::-webkit-scrollbar-thumb {\n          opacity: 1;\n        }\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n          background: var(--scrollbar-thumb-hover);\n        }\n      `;\n      document.head.appendChild(style);\n    }\n  }\n\n  private showEmptyState(): void {\n    if (this.messages.length > 0) return;\n\n    const emptyState = this.container.createEl('div', { \n      cls: 'chat-empty-state'\n    });\n    emptyState.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100%;\n      text-align: center;\n      padding: 40px 20px;\n      color: var(--text-muted);\n      gap: 16px;\n    `;\n\n    // Empty state icon\n    const icon = emptyState.createEl('div');\n    icon.innerHTML = `\n      <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\">\n        <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"/>\n        <path d=\"M8 10h8\"/>\n        <path d=\"M8 14h4\"/>\n      </svg>\n    `;\n    icon.style.cssText = `\n      color: var(--text-faint);\n      opacity: 0.6;\n    `;\n\n    const title = emptyState.createEl('h3', { text: 'Start a conversation' });\n    title.style.cssText = `\n      font-size: 18px;\n      font-weight: 500;\n      margin: 0;\n      color: var(--text-muted);\n    `;\n\n    const description = emptyState.createEl('p', { \n      text: 'Type a message below to begin chatting. Select a mode from the header to customize the AI behavior.' \n    });\n    description.style.cssText = `\n      font-size: 14px;\n      margin: 0;\n      max-width: 300px;\n      line-height: 1.5;\n      color: var(--text-faint);\n    `;\n\n    // No starter prompts - just for chatting\n  }\n\n  private hideEmptyState(): void {\n    const emptyState = this.container.querySelector('.chat-empty-state');\n    if (emptyState) {\n      emptyState.remove();\n    }\n  }\n\n  public setMessages(messages: ChatMessage[]): void {\n    this.messages = messages;\n    this.renderMessages();\n  }\n\n  public addMessage(message: ChatMessage): void {\n    this.messages.push(message);\n    this.renderNewMessage(message);\n    this.scrollToBottom();\n  }\n\n  private renderMessages(): void {\n    this.clearMessages();\n    \n    if (this.messages.length === 0) {\n      this.showEmptyState();\n      return;\n    }\n\n    this.hideEmptyState();\n\n    this.messages.forEach(message => {\n      this.renderMessage(message);\n    });\n\n    this.scrollToBottom();\n  }\n\n  private renderNewMessage(message: ChatMessage): void {\n    this.hideEmptyState();\n    this.renderMessage(message, true);\n  }\n\n  private renderMessage(message: ChatMessage, animate: boolean = false): void {\n    const messageContainer = this.container.createEl('div');\n    \n    if (animate) {\n      messageContainer.style.opacity = '0';\n      messageContainer.style.transform = 'translateY(20px)';\n      messageContainer.style.transition = 'all 0.3s ease';\n      \n      // Animate in\n      setTimeout(() => {\n        messageContainer.style.opacity = '1';\n        messageContainer.style.transform = 'translateY(0)';\n      }, 50);\n    }\n\n    const messageBubble = new MessageBubble({\n      plugin: this.plugin,\n      container: messageContainer,\n      message,\n      actionHandler: this.actionHandler\n    });\n\n    messageBubble.render();\n    this.messageBubbles.push(messageBubble);\n  }\n\n  private clearMessages(): void {\n    // Destroy existing message bubbles\n    this.messageBubbles.forEach(bubble => bubble.destroy());\n    this.messageBubbles = [];\n    \n    // Clear container\n    this.container.empty();\n    this.createMessageContainer();\n  }\n\n  private scrollToBottom(smooth: boolean = true): void {\n    requestAnimationFrame(() => {\n      const scrollOptions: ScrollToOptions = {\n        top: this.container.scrollHeight,\n        behavior: smooth ? 'smooth' : 'auto'\n      };\n      this.container.scrollTo(scrollOptions);\n    });\n  }\n\n  public updateMessage(messageIndex: number, newMessage: ChatMessage): void {\n    if (messageIndex < 0 || messageIndex >= this.messages.length) return;\n\n    this.messages[messageIndex] = newMessage;\n    \n    // Re-render the specific message\n    const messageBubble = this.messageBubbles[messageIndex];\n    if (messageBubble) {\n      messageBubble.destroy();\n      \n      const messageContainer = this.container.children[messageIndex] as HTMLElement;\n      if (messageContainer) {\n        const newBubble = new MessageBubble({\n          plugin: this.plugin,\n          container: messageContainer,\n          message: newMessage,\n          actionHandler: this.actionHandler\n        });\n        \n        newBubble.render();\n        this.messageBubbles[messageIndex] = newBubble;\n      }\n    }\n  }\n\n  public removeMessage(messageIndex: number): void {\n    if (messageIndex < 0 || messageIndex >= this.messages.length) return;\n\n    // Remove from messages array\n    this.messages.splice(messageIndex, 1);\n    \n    // Remove bubble\n    const messageBubble = this.messageBubbles[messageIndex];\n    if (messageBubble) {\n      const messageContainer = messageBubble.container;\n      \n      // Animate out\n      messageContainer.style.animation = 'messageSlideOut 0.3s ease forwards';\n      \n      // Add animation styles\n      if (!document.querySelector('#message-animations')) {\n        const style = document.createElement('style');\n        style.id = 'message-animations';\n        style.textContent = `\n          @keyframes messageSlideOut {\n            from {\n              opacity: 1;\n              transform: translateX(0);\n              max-height: 200px;\n              margin: 16px 0;\n            }\n            to {\n              opacity: 0;\n              transform: translateX(100px);\n              max-height: 0;\n              margin: 0;\n            }\n          }\n        `;\n        document.head.appendChild(style);\n      }\n\n      setTimeout(() => {\n        messageBubble.destroy();\n        this.messageBubbles.splice(messageIndex, 1);\n        \n        if (this.messages.length === 0) {\n          this.showEmptyState();\n        }\n      }, 300);\n    }\n  }\n\n  public getMessages(): ChatMessage[] {\n    return [...this.messages];\n  }\n\n  public isEmpty(): boolean {\n    return this.messages.length === 0;\n  }\n\n  destroy(): void {\n    this.messageBubbles.forEach(bubble => bubble.destroy());\n    this.messageBubbles = [];\n    super.destroy();\n  }\n}", "import { BaseComponent } from './BaseComponent';\nimport { ComponentOptions } from './types';\nimport { ChatSession } from '@shared/types';\n\ninterface SessionManagerOptions extends ComponentOptions {\n  onSessionSelect: (sessionId: string) => void;\n  onSessionDelete: (sessionId: string) => void;\n  onNewSession: () => void;\n}\n\nexport class SessionManager extends BaseComponent {\n  private overlay: HTMLElement;\n  private modal: HTMLElement;\n  private onSessionSelect: (sessionId: string) => void;\n  private onSessionDelete: (sessionId: string) => void;\n  private onNewSession: () => void;\n\n  constructor(options: SessionManagerOptions) {\n    super(options);\n    this.onSessionSelect = options.onSessionSelect;\n    this.onSessionDelete = options.onSessionDelete;\n    this.onNewSession = options.onNewSession;\n  }\n\n  render(): void {\n    this.createOverlay();\n    this.createModal();\n    this.createHeader();\n    this.createSessionList();\n    this.createNewSessionButton();\n    this.setupEventHandlers();\n  }\n\n  private createOverlay(): void {\n    this.overlay = this.container.createEl('div', { cls: 'session-manager-overlay' });\n    this.overlay.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: rgba(0, 0, 0, 0.6);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 1000;\n      backdrop-filter: blur(4px);\n      animation: fadeIn 0.2s ease;\n    `;\n\n    // Add fade animation\n    if (!document.querySelector('#session-manager-animations')) {\n      const style = document.createElement('style');\n      style.id = 'session-manager-animations';\n      style.textContent = `\n        @keyframes fadeIn {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n        @keyframes modalSlideIn {\n          from {\n            opacity: 0;\n            transform: translateY(-20px) scale(0.95);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0) scale(1);\n          }\n        }\n        @keyframes sessionSlideIn {\n          from {\n            opacity: 0;\n            transform: translateX(-10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateX(0);\n          }\n        }\n      `;\n      document.head.appendChild(style);\n    }\n  }\n\n  private createModal(): void {\n    this.modal = this.overlay.createEl('div', { cls: 'session-manager-modal' });\n    this.modal.style.cssText = `\n      background: var(--background-primary);\n      border: 1px solid var(--background-modifier-border);\n      border-radius: 12px;\n      padding: 0;\n      min-width: 400px;\n      max-width: 500px;\n      max-height: 600px;\n      overflow: hidden;\n      box-shadow: 0 12px 32px rgba(0, 0, 0, 0.3);\n      animation: modalSlideIn 0.3s ease;\n      display: flex;\n      flex-direction: column;\n    `;\n  }\n\n  private createHeader(): void {\n    const header = this.modal.createEl('div', { cls: 'session-manager-header' });\n    header.style.cssText = `\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 20px 24px;\n      border-bottom: 1px solid var(--background-modifier-border);\n      background: var(--background-primary);\n    `;\n\n    const titleSection = header.createEl('div');\n    titleSection.style.cssText = 'display: flex; align-items: center; gap: 12px;';\n\n    const icon = titleSection.createEl('div');\n    icon.innerHTML = `\n      <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\"/>\n        <path d=\"M3 3v5h5\"/>\n        <path d=\"M12 7v5l4 2\"/>\n      </svg>\n    `;\n    icon.style.cssText = 'color: var(--interactive-accent);';\n\n    const title = titleSection.createEl('h3', { text: 'Chat Sessions' });\n    title.style.cssText = `\n      margin: 0;\n      color: var(--text-normal);\n      font-size: 18px;\n      font-weight: 500;\n    `;\n\n    const closeButton = header.createEl('button');\n    closeButton.innerHTML = `\n      <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M18 6L6 18\"/>\n        <path d=\"M6 6l12 12\"/>\n      </svg>\n    `;\n    closeButton.style.cssText = `\n      background: none;\n      border: none;\n      cursor: pointer;\n      color: var(--text-muted);\n      padding: 6px;\n      border-radius: 6px;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    `;\n    closeButton.onclick = () => this.close();\n\n    this.addHoverEffect(closeButton, {\n      'background-color': 'var(--background-modifier-hover)',\n      'color': 'var(--text-normal)'\n    });\n  }\n\n  private createSessionList(): void {\n    const sessionListContainer = this.modal.createEl('div', { cls: 'session-list-container' });\n    sessionListContainer.style.cssText = `\n      flex: 1;\n      overflow-y: auto;\n      padding: 16px 0;\n      max-height: 400px;\n    `;\n\n    const sessionsList = sessionListContainer.createEl('div', { cls: 'sessions-list' });\n    const sessions = this.plugin.getChatSessions();\n    \n    if (sessions.length === 0) {\n      this.createEmptySessionsState(sessionsList);\n    } else {\n      this.renderSessions(sessionsList, sessions);\n    }\n  }\n\n  private createEmptySessionsState(container: HTMLElement): void {\n    const emptyState = container.createEl('div', { cls: 'empty-sessions-state' });\n    emptyState.style.cssText = `\n      text-align: center;\n      padding: 40px 20px;\n      color: var(--text-muted);\n    `;\n\n    const icon = emptyState.createEl('div');\n    icon.innerHTML = `\n      <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\">\n        <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"/>\n      </svg>\n    `;\n    icon.style.cssText = `\n      color: var(--text-faint);\n      margin-bottom: 16px;\n      opacity: 0.6;\n    `;\n\n    emptyState.createEl('p', { \n      text: 'No chat sessions yet. Start a conversation to create your first session.'\n    });\n  }\n\n  private renderSessions(container: HTMLElement, sessions: ChatSession[]): void {\n    sessions.forEach((session, index) => {\n      const sessionItem = container.createEl('div', { cls: 'session-item' });\n      sessionItem.style.cssText = `\n        padding: 16px 24px;\n        cursor: pointer;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        border-bottom: 1px solid var(--background-modifier-border-focus);\n        transition: all 0.2s ease;\n        position: relative;\n        animation: sessionSlideIn 0.3s ease forwards;\n        animation-delay: ${index * 0.05}s;\n        opacity: 0;\n      `;\n      \n      // Highlight current session\n      if (this.plugin.currentSession?.id === session.id) {\n        sessionItem.style.backgroundColor = 'var(--background-modifier-hover)';\n        sessionItem.style.borderLeft = '3px solid var(--interactive-accent)';\n        sessionItem.style.paddingLeft = '21px';\n      }\n\n      const sessionInfo = sessionItem.createEl('div', { cls: 'session-info' });\n      sessionInfo.style.cssText = 'flex: 1; min-width: 0;';\n\n      const sessionTitle = sessionInfo.createEl('div', { \n        text: session.title || `Session ${sessions.indexOf(session) + 1}`,\n        cls: 'session-title' \n      });\n      sessionTitle.style.cssText = `\n        font-weight: 500;\n        color: var(--text-normal);\n        margin-bottom: 4px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      `;\n\n      const sessionMeta = sessionInfo.createEl('div', { cls: 'session-meta' });\n      sessionMeta.style.cssText = `\n        display: flex;\n        align-items: center;\n        gap: 12px;\n        font-size: 12px;\n        color: var(--text-muted);\n      `;\n\n      const messageCount = session.messages?.length || 0;\n      const messageCountEl = sessionMeta.createEl('span', { \n        text: `${messageCount} message${messageCount !== 1 ? 's' : ''}`\n      });\n\n      if (session.messages && session.messages.length > 0) {\n        const lastMessage = session.messages[session.messages.length - 1];\n        const lastMessageTime = new Date(lastMessage.timestamp);\n        const timeAgo = this.getTimeAgo(lastMessageTime);\n        \n        sessionMeta.createEl('span', { text: '\u2022' });\n        sessionMeta.createEl('span', { text: timeAgo });\n      }\n\n      // Actions section\n      const actionsSection = sessionItem.createEl('div', { cls: 'session-actions' });\n      actionsSection.style.cssText = `\n        display: flex;\n        gap: 4px;\n        opacity: 0;\n        transition: opacity 0.2s ease;\n      `;\n\n      const deleteBtn = actionsSection.createEl('button', { cls: 'session-delete-btn' });\n      deleteBtn.innerHTML = `\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <polyline points=\"3 6 5 6 21 6\"/>\n          <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/>\n        </svg>\n      `;\n      deleteBtn.title = 'Delete session';\n      deleteBtn.style.cssText = `\n        background: none;\n        border: none;\n        cursor: pointer;\n        color: var(--text-muted);\n        padding: 6px;\n        border-radius: 4px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: all 0.2s ease;\n      `;\n\n      // Event handlers\n      sessionItem.onclick = (e) => {\n        if (e.target === deleteBtn || deleteBtn.contains(e.target as Node)) return;\n        this.onSessionSelect(session.id);\n        this.close();\n      };\n\n      deleteBtn.onclick = (e) => {\n        e.stopPropagation();\n        this.confirmDeleteSession(session);\n      };\n\n      // Hover effects\n      sessionItem.addEventListener('mouseenter', () => {\n        if (this.plugin.currentSession?.id !== session.id) {\n          sessionItem.style.backgroundColor = 'var(--background-modifier-hover)';\n        }\n        actionsSection.style.opacity = '1';\n      });\n\n      sessionItem.addEventListener('mouseleave', () => {\n        if (this.plugin.currentSession?.id !== session.id) {\n          sessionItem.style.backgroundColor = 'transparent';\n        }\n        actionsSection.style.opacity = '0';\n      });\n\n      this.addHoverEffect(deleteBtn, {\n        'background-color': 'var(--background-modifier-error)',\n        'color': 'var(--text-on-accent)'\n      });\n    });\n  }\n\n  private createNewSessionButton(): void {\n    const buttonContainer = this.modal.createEl('div');\n    buttonContainer.style.cssText = `\n      padding: 16px 24px;\n      border-top: 1px solid var(--background-modifier-border);\n      background: var(--background-primary);\n    `;\n\n    const newSessionBtn = buttonContainer.createEl('button', { cls: 'new-session-button' });\n    newSessionBtn.innerHTML = `\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <path d=\"M12 5v14\"/>\n        <path d=\"M5 12h14\"/>\n      </svg>\n      <span>New Session</span>\n    `;\n    newSessionBtn.style.cssText = `\n      width: 100%;\n      padding: 12px 16px;\n      background: var(--interactive-accent);\n      color: var(--text-on-accent);\n      border: none;\n      border-radius: 8px;\n      cursor: pointer;\n      font-weight: 500;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 8px;\n      transition: all 0.2s ease;\n    `;\n\n    newSessionBtn.onclick = () => {\n      this.onNewSession();\n      this.close();\n    };\n\n    this.addHoverEffect(newSessionBtn, {\n      'transform': 'translateY(-1px)',\n      'box-shadow': '0 4px 12px rgba(0, 0, 0, 0.15)'\n    });\n  }\n\n  private confirmDeleteSession(session: ChatSession): void {\n    const messageCount = session.messages?.length || 0;\n    const confirmMessage = `Delete \"${session.title || 'Untitled Session'}\"?\\n\\nThis will permanently delete ${messageCount} message${messageCount !== 1 ? 's' : ''}.`;\n    \n    if (confirm(confirmMessage)) {\n      this.onSessionDelete(session.id);\n      // Refresh the session list\n      this.modal.empty();\n      this.createModal();\n      this.createHeader();\n      this.createSessionList();\n      this.createNewSessionButton();\n    }\n  }\n\n  private setupEventHandlers(): void {\n    this.overlay.onclick = (e) => {\n      if (e.target === this.overlay) {\n        this.close();\n      }\n    };\n\n    // ESC key to close\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  private handleKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      this.close();\n    }\n  };\n\n  private getTimeAgo(date: Date): string {\n    const now = new Date();\n    const diffInMs = now.getTime() - date.getTime();\n    const diffInMinutes = Math.floor(diffInMs / 60000);\n    \n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    \n    const diffInHours = Math.floor(diffInMinutes / 60);\n    if (diffInHours < 24) return `${diffInHours}h ago`;\n    \n    const diffInDays = Math.floor(diffInHours / 24);\n    if (diffInDays < 7) return `${diffInDays}d ago`;\n    \n    return date.toLocaleDateString();\n  }\n\n  public show(): void {\n    this.render();\n  }\n\n  public close(): void {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    \n    // Animate out\n    this.overlay.style.animation = 'fadeOut 0.2s ease forwards';\n    \n    // Add fadeOut animation\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes fadeOut {\n        from { opacity: 1; }\n        to { opacity: 0; }\n      }\n    `;\n    document.head.appendChild(style);\n\n    setTimeout(() => {\n      this.destroy();\n      document.head.removeChild(style);\n    }, 200);\n  }\n\n  destroy(): void {\n    if (this.overlay && this.overlay.parentNode) {\n      this.overlay.parentNode.removeChild(this.overlay);\n    }\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n}"],
  "mappings": "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",
  "names": ["import_obsidian", "import_obsidian", "import_obsidian", "import_obsidian", "_a", "generateId", "_a"]
}
