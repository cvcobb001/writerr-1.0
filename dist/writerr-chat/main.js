"use strict";var y=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var T=Object.prototype.hasOwnProperty;var P=(o,t)=>{for(var e in t)y(o,e,{get:t[e],enumerable:!0})},k=(o,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of C(t))!T.call(o,n)&&n!==e&&y(o,n,{get:()=>t[n],enumerable:!(s=b(t,n))||s.enumerable});return o};var A=o=>k(y({},"__esModule",{value:!0}),o);var E={};P(E,{default:()=>w});module.exports=A(E);var h=require("obsidian");var r=require("obsidian");function g(){return Math.random().toString(36).substr(2,9)}var v=class extends r.PluginSettingTab{constructor(t,e){super(t,e),this.plugin=e}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Writerr Chat Settings"}),t.createEl("h3",{text:"AI Provider Configuration"}),new r.Setting(t).setName("Default provider").setDesc("Select the default AI provider for chat").addDropdown(e=>{for(let s of this.plugin.settings.providers)e.addOption(s.id,s.name);e.setValue(this.plugin.settings.defaultProvider).onChange(async s=>{this.plugin.settings.defaultProvider=s,await this.plugin.saveSettings()})});for(let e=0;e<this.plugin.settings.providers.length;e++){let s=this.plugin.settings.providers[e];this.createProviderSetting(t,s,e)}new r.Setting(t).setName("Add new provider").setDesc("Add a new AI provider").addButton(e=>e.setButtonText("Add Provider").setCta().onClick(()=>{this.plugin.settings.providers.push({id:g(),name:"New Provider",model:"gpt-3.5-turbo",baseUrl:"",apiKey:""}),this.display()})),t.createEl("h3",{text:"Chat Interface"}),new r.Setting(t).setName("Chat position").setDesc("Choose where the chat panel appears").addDropdown(e=>e.addOption("right","Right sidebar").addOption("left","Left sidebar").addOption("floating","Floating window").setValue(this.plugin.settings.chatPosition).onChange(async s=>{this.plugin.settings.chatPosition=s,await this.plugin.saveSettings()})),new r.Setting(t).setName("Theme").setDesc("Choose the chat interface theme").addDropdown(e=>e.addOption("default","Default").addOption("compact","Compact").addOption("minimal","Minimal").setValue(this.plugin.settings.theme).onChange(async s=>{this.plugin.settings.theme=s,await this.plugin.saveSettings()})),new r.Setting(t).setName("Show timestamps").setDesc("Display timestamps for chat messages").addToggle(e=>e.setValue(this.plugin.settings.showTimestamps).onChange(async s=>{this.plugin.settings.showTimestamps=s,await this.plugin.saveSettings()})),new r.Setting(t).setName("Enable markdown").setDesc("Render markdown in chat messages").addToggle(e=>e.setValue(this.plugin.settings.enableMarkdown).onChange(async s=>{this.plugin.settings.enableMarkdown=s,await this.plugin.saveSettings()})),t.createEl("h3",{text:"Behavior"}),new r.Setting(t).setName("Auto-save chats").setDesc("Automatically save chat sessions").addToggle(e=>e.setValue(this.plugin.settings.autoSaveChats).onChange(async s=>{this.plugin.settings.autoSaveChats=s,await this.plugin.saveSettings()})),new r.Setting(t).setName("Context lines").setDesc("Number of lines to include as context from the current document").addSlider(e=>e.setLimits(0,50,1).setValue(this.plugin.settings.contextLines).setDynamicTooltip().onChange(async s=>{this.plugin.settings.contextLines=s,await this.plugin.saveSettings()})),new r.Setting(t).setName("Max tokens").setDesc("Maximum number of tokens for AI responses").addSlider(e=>e.setLimits(100,4e3,100).setValue(this.plugin.settings.maxTokens).setDynamicTooltip().onChange(async s=>{this.plugin.settings.maxTokens=s,await this.plugin.saveSettings()})),new r.Setting(t).setName("Temperature").setDesc("Creativity level for AI responses (0 = focused, 1 = creative)").addSlider(e=>e.setLimits(0,1,.1).setValue(this.plugin.settings.temperature).setDynamicTooltip().onChange(async s=>{this.plugin.settings.temperature=s,await this.plugin.saveSettings()})),t.createEl("h3",{text:"Actions"}),new r.Setting(t).setName("Clear all chat history").setDesc("Delete all saved chat sessions (cannot be undone)").addButton(e=>e.setButtonText("Clear All").setWarning().onClick(()=>{this.plugin.chatSessions.clear(),this.plugin.currentSession=null,this.plugin.saveChatSessions()}))}createProviderSetting(t,e,s){let n=t.createDiv("provider-setting");n.createEl("h4",{text:e.name}),new r.Setting(n).setName("Provider name").addText(i=>i.setValue(e.name).onChange(async a=>{e.name=a,await this.plugin.saveSettings()})),new r.Setting(n).setName("Model").addText(i=>i.setValue(e.model).onChange(async a=>{e.model=a,await this.plugin.saveSettings()})),new r.Setting(n).setName("Base URL").addText(i=>i.setValue(e.baseUrl||"").onChange(async a=>{e.baseUrl=a,await this.plugin.saveSettings()})),new r.Setting(n).setName("API Key").addText(i=>{i.inputEl.type="password",i.setValue(e.apiKey||"").onChange(async a=>{e.apiKey=a,await this.plugin.saveSettings()})}),new r.Setting(n).addButton(i=>i.setButtonText("Remove").setWarning().onClick(async()=>{this.plugin.settings.providers.splice(s,1),await this.plugin.saveSettings(),this.display()}))}};var u=require("obsidian"),m="writerr-chat-view",f=class extends u.ItemView{constructor(t,e){super(t),this.plugin=e}getViewType(){return m}getDisplayText(){return"Writerr Chat"}getIcon(){return"message-circle"}async onOpen(){let t=this.containerEl.children[1];t.empty(),t.addClass("writerr-chat-view");let e=t.createEl("div",{cls:"chat-header"});this.createHeader(e),this.chatContainer=t.createEl("div",{cls:"chat-messages"}),this.chatContainer.style.cssText=`
      flex: 1;
      overflow-y: auto;
      padding: 10px;
      border-bottom: 1px solid var(--background-modifier-border);
    `,this.inputContainer=t.createEl("div",{cls:"chat-input-container"}),this.createInputArea(this.inputContainer),this.applyTheme(),this.plugin.currentSession||this.plugin.newChatSession(),this.refresh()}createHeader(t){t.style.cssText=`
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 10px;
      border-bottom: 1px solid var(--background-modifier-border);
    `,this.sessionSelect=t.createEl("select",{cls:"chat-session-select"}),this.sessionSelect.style.cssText=`
      flex: 1;
      margin-right: 10px;
      padding: 4px 8px;
      border: 1px solid var(--background-modifier-border);
      border-radius: 4px;
      background: var(--background-primary);
      color: var(--text-normal);
    `,this.sessionSelect.addEventListener("change",()=>{let n=this.sessionSelect.value;n==="new"?this.plugin.newChatSession():this.plugin.setCurrentSession(n),this.refresh()});let e=t.createEl("button",{text:"New",cls:"chat-new-button"});e.style.cssText=`
      padding: 4px 8px;
      border: 1px solid var(--background-modifier-border);
      border-radius: 4px;
      background: var(--background-primary);
      color: var(--text-normal);
      cursor: pointer;
      margin-right: 5px;
    `,e.onclick=()=>{this.plugin.newChatSession(),this.refresh()};let s=t.createEl("button",{text:"Clear",cls:"chat-clear-button"});s.style.cssText=`
      padding: 4px 8px;
      border: 1px solid var(--background-modifier-border);
      border-radius: 4px;
      background: var(--background-primary);
      color: var(--text-normal);
      cursor: pointer;
    `,s.onclick=()=>{this.plugin.currentSession&&(this.plugin.currentSession.messages=[],this.plugin.saveChatSessions(),this.refresh())}}createInputArea(t){t.style.cssText=`
      display: flex;
      padding: 10px;
      gap: 10px;
      background: var(--background-primary);
    `,this.messageInput=t.createEl("textarea",{cls:"chat-message-input",attr:{placeholder:"Type your message..."}}),this.messageInput.style.cssText=`
      flex: 1;
      min-height: 60px;
      max-height: 200px;
      padding: 8px;
      border: 1px solid var(--background-modifier-border);
      border-radius: 4px;
      background: var(--background-primary);
      color: var(--text-normal);
      resize: vertical;
    `,this.messageInput.addEventListener("keydown",e=>{e.key==="Enter"&&(e.ctrlKey||e.metaKey)&&this.sendMessage()}),this.sendButton=t.createEl("button",{text:"Send",cls:"chat-send-button"}),this.sendButton.style.cssText=`
      padding: 8px 16px;
      border: none;
      border-radius: 4px;
      background: var(--interactive-accent);
      color: var(--text-on-accent);
      cursor: pointer;
      align-self: flex-end;
    `,this.sendButton.onclick=()=>this.sendMessage()}async sendMessage(){let t=this.messageInput.value.trim();if(t){this.messageInput.value="",this.sendButton.disabled=!0,this.sendButton.textContent="Sending...";try{await this.plugin.sendMessage(t),this.refresh()}catch(e){console.error("Error sending message:",e)}finally{this.sendButton.disabled=!1,this.sendButton.textContent="Send"}}}refresh(){this.updateSessionSelect(),this.renderMessages()}updateSessionSelect(){this.sessionSelect.empty();let t=this.plugin.getChatSessions();for(let e of t){let s=this.sessionSelect.createEl("option",{value:e.id,text:e.title});this.plugin.currentSession&&e.id===this.plugin.currentSession.id&&(s.selected=!0)}}async renderMessages(){if(this.chatContainer.empty(),!this.plugin.currentSession||this.plugin.currentSession.messages.length===0){let t=this.chatContainer.createEl("div",{cls:"chat-empty-state",text:"Start a conversation by typing a message below."});t.style.cssText=`
        text-align: center;
        padding: 20px;
        color: var(--text-muted);
        font-style: italic;
      `;return}for(let t of this.plugin.currentSession.messages)await this.renderMessage(t);this.chatContainer.scrollTop=this.chatContainer.scrollHeight}async renderMessage(t){let e=this.chatContainer.createEl("div",{cls:`chat-message chat-message-${t.role}`}),s=t.role==="user";e.style.cssText=`
      display: flex;
      margin: 10px 0;
      ${s?"justify-content: flex-end;":"justify-content: flex-start;"}
    `;let n=e.createEl("div",{cls:"chat-message-bubble"});if(n.style.cssText=`
      max-width: 80%;
      padding: 10px 15px;
      border-radius: 18px;
      ${s?"background: var(--interactive-accent); color: var(--text-on-accent);":"background: var(--background-secondary); color: var(--text-normal);"}
      word-wrap: break-word;
    `,this.plugin.settings.enableMarkdown&&!s){let i=new u.Component;await u.MarkdownRenderer.renderMarkdown(t.content,n,"",i)}else n.textContent=t.content;if(this.plugin.settings.showTimestamps){let i=e.createEl("div",{cls:"chat-timestamp",text:new Date(t.timestamp).toLocaleTimeString()});i.style.cssText=`
        font-size: 11px;
        color: var(--text-muted);
        margin: 5px ${s?"15px":"0"} 0 ${s?"0":"15px"};
        align-self: ${s?"flex-end":"flex-start"};
      `}}applyTheme(){let t=this.containerEl;t.removeClass("theme-default","theme-compact","theme-minimal"),t.addClass(`theme-${this.plugin.settings.theme}`),this.plugin.settings.theme==="compact"?(this.chatContainer.style.fontSize="14px",this.messageInput.style.minHeight="40px"):this.plugin.settings.theme==="minimal"&&(this.chatContainer.style.fontSize="13px",this.messageInput.style.minHeight="35px")}async onClose(){}};var x=class{constructor(t){this.settings=t}updateSettings(t){this.settings=t}async sendMessage(t,e){var i,a;let s=this.getProvider(this.settings.defaultProvider);if(!s)throw new Error("No AI provider configured");if(!s.apiKey)throw new Error(`API key not configured for ${s.name}`);let n=this.buildRequestMessages(t,e);try{return s.id==="openai"||(i=s.baseUrl)!=null&&i.includes("openai")?await this.sendOpenAIMessage(s,n):s.id==="anthropic"||(a=s.baseUrl)!=null&&a.includes("anthropic")?await this.sendAnthropicMessage(s,n):await this.sendOpenAIMessage(s,n)}catch(c){throw console.error("AI Provider Error:",c),new Error(`AI Provider failed: ${c.message}`)}}buildRequestMessages(t,e){let s=[];e&&s.push({role:"system",content:`Here's the current document context:

${e}

Please use this context to inform your responses.`});for(let n of t)n.role!=="system"&&s.push({role:n.role,content:n.content});return s}async sendOpenAIMessage(t,e){let n=`${t.baseUrl||"https://api.openai.com/v1"}/chat/completions`,i=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t.apiKey}`},body:JSON.stringify({model:t.model,messages:e,max_tokens:this.settings.maxTokens,temperature:this.settings.temperature,stream:!1})});if(!i.ok){let c=await i.text();throw new Error(`HTTP ${i.status}: ${c}`)}let a=await i.json();if(!a.choices||!a.choices[0]||!a.choices[0].message)throw new Error("Invalid response format from AI provider");return a.choices[0].message.content}async sendAnthropicMessage(t,e){let n=`${t.baseUrl||"https://api.anthropic.com"}/v1/messages`,i=e.filter(l=>l.role==="system"),a=e.filter(l=>l.role!=="system"),c=i.map(l=>l.content).join(`

`),d=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json","x-api-key":t.apiKey,"anthropic-version":"2023-06-01"},body:JSON.stringify({model:t.model,max_tokens:this.settings.maxTokens,temperature:this.settings.temperature,system:c,messages:a})});if(!d.ok){let l=await d.text();throw new Error(`HTTP ${d.status}: ${l}`)}let p=await d.json();if(!p.content||!p.content[0]||!p.content[0].text)throw new Error("Invalid response format from Anthropic API");return p.content[0].text}getProvider(t){return this.settings.providers.find(e=>e.id===t)}getProviders(){return[...this.settings.providers]}validateProvider(t){if(!t.name||!t.model)return{valid:!1,error:"Provider name and model are required"};if(!t.apiKey)return{valid:!1,error:"API key is required"};if(t.baseUrl)try{new URL(t.baseUrl)}catch(e){return{valid:!1,error:"Invalid base URL format"}}return{valid:!0}}};var M={defaultProvider:"openai",providers:[{id:"openai",name:"OpenAI",model:"gpt-4",baseUrl:"https://api.openai.com/v1",apiKey:""}],chatPosition:"right",autoSaveChats:!0,contextLines:10,maxTokens:2e3,temperature:.7,enableMarkdown:!0,showTimestamps:!0,theme:"default"},w=class extends h.Plugin{constructor(){super(...arguments);this.currentSession=null;this.chatSessions=new Map}async onload(){await this.loadSettings(),this.aiProviderManager=new x(this.settings),this.initializeGlobalAPI(),this.registerView(m,e=>new f(e,this)),this.addCommands(),this.addRibbonIcon("message-circle","Open Writerr Chat",()=>{this.openChat()}),this.addSettingTab(new v(this.app,this)),await this.loadChatSessions(),console.log("Writerr Chat plugin loaded")}onunload(){this.cleanupGlobalAPI(),console.log("Writerr Chat plugin unloaded")}async loadSettings(){this.settings=Object.assign({},M,await this.loadData())}async saveSettings(){await this.saveData(this.settings),this.aiProviderManager&&this.aiProviderManager.updateSettings(this.settings)}initializeGlobalAPI(){window.WriterrlAPI||(window.WriterrlAPI={}),window.WriterrlAPI.chat={openChat:()=>this.openChat(),sendMessage:(e,s)=>this.sendMessage(e,s),getCurrentSession:()=>this.currentSession}}cleanupGlobalAPI(){window.WriterrlAPI&&window.WriterrlAPI.chat&&delete window.WriterrlAPI.chat}addCommands(){this.addCommand({id:"open-chat",name:"Open chat",callback:()=>this.openChat()}),this.addCommand({id:"new-chat-session",name:"New chat session",callback:()=>this.newChatSession()}),this.addCommand({id:"chat-with-selection",name:"Chat with selected text",editorCallback:e=>{let s=e.getSelection();s?this.chatWithSelection(s):new h.Notice("No text selected")}}),this.addCommand({id:"quick-chat",name:"Quick chat",callback:()=>this.quickChat()})}async openChat(){let e=this.app.workspace.getLeavesOfType(m)[0];if(e){this.app.workspace.revealLeaf(e);return}let s=this.settings.chatPosition==="right"?this.app.workspace.getRightLeaf(!1):this.app.workspace.getLeftLeaf(!1);s&&(await s.setViewType(m),this.app.workspace.revealLeaf(s))}newChatSession(){this.currentSession={id:g(),title:`Chat ${new Date().toLocaleDateString()}`,messages:[],createdAt:Date.now(),updatedAt:Date.now()},this.chatSessions.set(this.currentSession.id,this.currentSession),this.saveChatSessions()}async chatWithSelection(e){await this.openChat(),this.currentSession||this.newChatSession();let s=`Here's the selected text I'd like to discuss:

${e}

What would you like to know about this text?`;await this.sendMessage(s)}async quickChat(){new S(this.app,async s=>{this.currentSession||this.newChatSession(),await this.sendMessage(s)}).open()}async sendMessage(e,s){if(this.currentSession||this.newChatSession(),!this.currentSession)return;let n={id:g(),role:"user",content:e,timestamp:Date.now()};this.currentSession.messages.push(n);let i=s;!i&&this.settings.contextLines>0&&(i=await this.getDocumentContext());try{let a=await this.aiProviderManager.sendMessage(this.currentSession.messages,i),c={id:g(),role:"assistant",content:a,timestamp:Date.now()};this.currentSession.messages.push(c),this.currentSession.updatedAt=Date.now(),this.settings.autoSaveChats&&await this.saveChatSessions(),this.refreshChatView()}catch(a){new h.Notice(`Error sending message: ${a.message}`),console.error("Chat error:",a)}}async getDocumentContext(){var s;let e=this.app.workspace.getActiveFile();if(e)try{let n=await this.app.vault.read(e),i=n.split(`
`);if(i.length<=this.settings.contextLines*2)return n;let a=(s=this.app.workspace.getActiveViewOfType(require("obsidian").MarkdownView))==null?void 0:s.editor;if(a){let c=a.getCursor(),d=Math.max(0,c.line-this.settings.contextLines),p=Math.min(i.length,c.line+this.settings.contextLines);return i.slice(d,p).join(`
`)}return i.slice(0,this.settings.contextLines).join(`
`)}catch(n){console.error("Error getting document context:",n);return}}refreshChatView(){let e=this.app.workspace.getLeavesOfType(m)[0];e&&e.view instanceof f&&e.view.refresh()}async loadChatSessions(){try{let e=await this.loadData();if(e&&e.chatSessions)for(let s of e.chatSessions)this.chatSessions.set(s.id,s)}catch(e){console.error("Failed to load chat sessions:",e)}}async saveChatSessions(){try{let e=Array.from(this.chatSessions.values()),s=await this.loadData()||{};s.chatSessions=e,await this.saveData(s)}catch(e){console.error("Failed to save chat sessions:",e)}}getChatSessions(){return Array.from(this.chatSessions.values()).sort((e,s)=>s.updatedAt-e.updatedAt)}deleteSession(e){this.chatSessions.delete(e),this.currentSession&&this.currentSession.id===e&&(this.currentSession=null),this.saveChatSessions()}setCurrentSession(e){let s=this.chatSessions.get(e);s&&(this.currentSession=s)}},S=class extends h.Modal{constructor(t,e){super(t),this.onSubmit=e}onOpen(){let{contentEl:t}=this;t.empty(),t.createEl("h2",{text:"Quick Chat"}),this.inputEl=t.createEl("textarea",{attr:{placeholder:"Type your message here...",rows:"4",style:"width: 100%; margin: 10px 0; padding: 8px; border: 1px solid var(--background-modifier-border); border-radius: 4px;"}});let e=t.createEl("div",{attr:{style:"display: flex; justify-content: flex-end; gap: 10px; margin-top: 10px;"}});e.createEl("button",{text:"Cancel",attr:{style:"padding: 6px 12px;"}}).onclick=()=>this.close();let s=e.createEl("button",{text:"Send",attr:{style:"padding: 6px 12px; background: var(--interactive-accent); color: var(--text-on-accent); border: none; border-radius: 4px;"}});s.onclick=async()=>{let n=this.inputEl.value.trim();n&&(await this.onSubmit(n),this.close())},this.inputEl.focus()}onClose(){let{contentEl:t}=this;t.empty()}};
